// Generated by CIRCT firtool-1.66.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TLMonitor_70(
  input        clock,
               reset,
               io_in_a_ready,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_a_valid,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [2:0]  io_in_a_bits_opcode,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_a_bits_param,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [1:0]  io_in_a_bits_size,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [9:0]  io_in_a_bits_source,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [16:0] io_in_a_bits_address,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [7:0]  io_in_a_bits_mask,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [63:0] io_in_a_bits_data,	// src/main/scala/tilelink/Monitor.scala:17:14
  input        io_in_a_bits_corrupt,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_d_ready,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_d_valid,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [1:0]  io_in_d_bits_size,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [9:0]  io_in_d_bits_source,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [63:0] io_in_d_bits_data	// src/main/scala/tilelink/Monitor.scala:17:14
);

  wire [31:0]   _plusarg_reader_out;	// src/main/scala/util/PlusArg.scala:80:11
  wire          io_in_a_ready_0 = io_in_a_ready;
  wire          io_in_a_valid_0 = io_in_a_valid;
  wire [2:0]    io_in_a_bits_opcode_0 = io_in_a_bits_opcode;
  wire [2:0]    io_in_a_bits_param_0 = io_in_a_bits_param;
  wire [1:0]    io_in_a_bits_size_0 = io_in_a_bits_size;
  wire [9:0]    io_in_a_bits_source_0 = io_in_a_bits_source;
  wire [16:0]   io_in_a_bits_address_0 = io_in_a_bits_address;
  wire [7:0]    io_in_a_bits_mask_0 = io_in_a_bits_mask;
  wire [63:0]   io_in_a_bits_data_0 = io_in_a_bits_data;
  wire          io_in_a_bits_corrupt_0 = io_in_a_bits_corrupt;
  wire          io_in_d_ready_0 = io_in_d_ready;
  wire          io_in_d_valid_0 = io_in_d_valid;
  wire [1:0]    io_in_d_bits_size_0 = io_in_d_bits_size;
  wire [9:0]    io_in_d_bits_source_0 = io_in_d_bits_source;
  wire [63:0]   io_in_d_bits_data_0 = io_in_d_bits_data;
  wire          a_first_last = 1'h1;	// src/main/scala/tilelink/Edges.scala:233:33
  wire          d_first_beats1_opdata = 1'h1;	// src/main/scala/tilelink/Edges.scala:107:36
  wire          d_first_last = 1'h1;	// src/main/scala/tilelink/Edges.scala:233:33
  wire          a_first_last_1 = 1'h1;	// src/main/scala/tilelink/Edges.scala:233:33
  wire          d_first_beats1_opdata_1 = 1'h1;	// src/main/scala/tilelink/Edges.scala:107:36
  wire          d_first_last_1 = 1'h1;	// src/main/scala/tilelink/Edges.scala:233:33
  wire          c_first_counter1 = 1'h1;	// src/main/scala/tilelink/Edges.scala:231:28
  wire          c_first = 1'h1;	// src/main/scala/tilelink/Edges.scala:232:25
  wire          c_first_last = 1'h1;	// src/main/scala/tilelink/Edges.scala:233:33
  wire          d_first_beats1_opdata_2 = 1'h1;	// src/main/scala/tilelink/Edges.scala:107:36
  wire          d_first_last_2 = 1'h1;	// src/main/scala/tilelink/Edges.scala:233:33
  wire          io_in_d_bits_sink = 1'h0;
  wire          io_in_d_bits_denied = 1'h0;
  wire          io_in_d_bits_corrupt = 1'h0;
  wire          sink_ok = 1'h0;	// src/main/scala/tilelink/Monitor.scala:306:31
  wire          a_first_beats1_decode = 1'h0;	// src/main/scala/tilelink/Edges.scala:221:59
  wire          a_first_beats1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:222:14
  wire          a_first_count = 1'h0;	// src/main/scala/tilelink/Edges.scala:235:25
  wire          d_first_beats1_decode = 1'h0;	// src/main/scala/tilelink/Edges.scala:221:59
  wire          d_first_beats1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:222:14
  wire          d_first_count = 1'h0;	// src/main/scala/tilelink/Edges.scala:235:25
  wire          a_first_beats1_decode_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:221:59
  wire          a_first_beats1_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:222:14
  wire          a_first_count_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:235:25
  wire          d_first_beats1_decode_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:221:59
  wire          d_first_beats1_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:222:14
  wire          d_first_count_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:235:25
  wire          d_release_ack = 1'h0;	// src/main/scala/tilelink/Monitor.scala:670:46
  wire          c_first_beats1_decode = 1'h0;	// src/main/scala/tilelink/Edges.scala:221:59
  wire          c_first_beats1_opdata = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36
  wire          c_first_beats1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:222:14
  wire          c_first_done = 1'h0;	// src/main/scala/tilelink/Edges.scala:234:22
  wire          c_first_count = 1'h0;	// src/main/scala/tilelink/Edges.scala:235:25
  wire          d_first_beats1_decode_2 = 1'h0;	// src/main/scala/tilelink/Edges.scala:221:59
  wire          d_first_beats1_2 = 1'h0;	// src/main/scala/tilelink/Edges.scala:222:14
  wire          d_first_count_2 = 1'h0;	// src/main/scala/tilelink/Edges.scala:235:25
  wire          c_probe_ack = 1'h0;	// src/main/scala/tilelink/Monitor.scala:769:71
  wire          d_release_ack_1 = 1'h0;	// src/main/scala/tilelink/Monitor.scala:780:46
  wire          same_cycle_resp_1 = 1'h0;	// src/main/scala/tilelink/Monitor.scala:792:88
  wire [1:0]    io_in_d_bits_param = 2'h0;
  wire [2:0]    io_in_d_bits_opcode = 3'h1;
  wire [2:0]    responseMap_2 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]    responseMap_3 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]    responseMap_4 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]    responseMapSecondOption_2 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]    responseMapSecondOption_3 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]    responseMapSecondOption_4 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [3007:0] c_opcodes_set = 3008'h0;	// src/main/scala/tilelink/Monitor.scala:737:34
  wire [3007:0] c_sizes_set = 3008'h0;	// src/main/scala/tilelink/Monitor.scala:738:34
  wire [3007:0] d_opcodes_clr_1 = 3008'h0;	// src/main/scala/tilelink/Monitor.scala:773:34
  wire [3007:0] d_sizes_clr_1 = 3008'h0;	// src/main/scala/tilelink/Monitor.scala:774:34
  wire [751:0]  c_set = 752'h0;	// src/main/scala/tilelink/Monitor.scala:735:34
  wire [751:0]  c_set_wo_ready = 752'h0;	// src/main/scala/tilelink/Monitor.scala:736:34
  wire [751:0]  d_clr_1 = 752'h0;	// src/main/scala/tilelink/Monitor.scala:771:34
  wire [751:0]  d_clr_wo_ready_1 = 752'h0;	// src/main/scala/tilelink/Monitor.scala:772:34
  wire [2:0]    responseMap_0 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]    responseMap_1 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]    responseMapSecondOption_0 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]    responseMapSecondOption_1 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]    c_sizes_set_interm = 3'h0;	// src/main/scala/tilelink/Monitor.scala:752:40
  wire [2:0]    responseMap_6 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]    responseMap_7 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]    responseMapSecondOption_7 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]    responseMapSecondOption_6 = 3'h5;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]    responseMap_5 = 3'h2;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]    responseMapSecondOption_5 = 3'h2;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [3:0]    c_opcodes_set_interm = 4'h0;	// src/main/scala/tilelink/Monitor.scala:751:40
  wire [1:0]    mask_sizeOH_shiftAmount = io_in_a_bits_size_0;	// src/main/scala/chisel3/util/OneHot.scala:64:49
  wire [9:0]    source_ok_uncommonBits = io_in_a_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [9:0]    uncommonBits = io_in_a_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [9:0]    uncommonBits_1 = io_in_a_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [9:0]    uncommonBits_2 = io_in_a_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [9:0]    uncommonBits_3 = io_in_a_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [9:0]    uncommonBits_4 = io_in_a_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [9:0]    uncommonBits_5 = io_in_a_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [9:0]    uncommonBits_6 = io_in_a_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [9:0]    uncommonBits_7 = io_in_a_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [9:0]    uncommonBits_8 = io_in_a_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [9:0]    source_ok_uncommonBits_1 = io_in_d_bits_source_0;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [5:0]    _is_aligned_mask_T_1 = 6'h7 << io_in_a_bits_size_0;	// src/main/scala/util/package.scala:235:71
  wire [2:0]    is_aligned_mask = ~(_is_aligned_mask_T_1[2:0]);	// src/main/scala/util/package.scala:235:{46,71,76}
  wire          is_aligned = (io_in_a_bits_address_0[2:0] & is_aligned_mask) == 3'h0;	// src/main/scala/tilelink/Edges.scala:22:{16,24}, src/main/scala/util/package.scala:235:46
  wire [3:0]    _mask_sizeOH_T_1 = 4'h1 << mask_sizeOH_shiftAmount;	// src/main/scala/chisel3/util/OneHot.scala:64:49, :65:12
  wire [2:0]    mask_sizeOH = {_mask_sizeOH_T_1[2:1], 1'h1};	// src/main/scala/chisel3/util/OneHot.scala:65:{12,27}, src/main/scala/util/Misc.scala:202:81
  wire          mask_size = mask_sizeOH[2];	// src/main/scala/util/Misc.scala:202:81, :209:26
  wire          mask_bit = io_in_a_bits_address_0[2];	// src/main/scala/util/Misc.scala:210:26
  wire          mask_eq_1 = mask_bit;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire          mask_nbit = ~mask_bit;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire          mask_eq = mask_nbit;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire          mask_acc = (&io_in_a_bits_size_0) | mask_size & mask_eq;	// src/main/scala/util/Misc.scala:206:21, :209:26, :214:27, :215:{29,38}
  wire          mask_acc_1 = (&io_in_a_bits_size_0) | mask_size & mask_eq_1;	// src/main/scala/util/Misc.scala:206:21, :209:26, :214:27, :215:{29,38}
  wire          mask_size_1 = mask_sizeOH[1];	// src/main/scala/util/Misc.scala:202:81, :209:26
  wire          mask_bit_1 = io_in_a_bits_address_0[1];	// src/main/scala/util/Misc.scala:210:26
  wire          mask_nbit_1 = ~mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire          mask_eq_2 = mask_eq & mask_nbit_1;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire          mask_acc_2 = mask_acc | mask_size_1 & mask_eq_2;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_eq_3 = mask_eq & mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire          mask_acc_3 = mask_acc | mask_size_1 & mask_eq_3;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_eq_4 = mask_eq_1 & mask_nbit_1;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire          mask_acc_4 = mask_acc_1 | mask_size_1 & mask_eq_4;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_eq_5 = mask_eq_1 & mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire          mask_acc_5 = mask_acc_1 | mask_size_1 & mask_eq_5;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_size_2 = mask_sizeOH[0];	// src/main/scala/util/Misc.scala:202:81, :209:26
  wire          mask_bit_2 = io_in_a_bits_address_0[0];	// src/main/scala/util/Misc.scala:210:26
  wire          mask_nbit_2 = ~mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire          mask_eq_6 = mask_eq_2 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire          mask_acc_6 = mask_acc_2 | mask_size_2 & mask_eq_6;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_eq_7 = mask_eq_2 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire          mask_acc_7 = mask_acc_2 | mask_size_2 & mask_eq_7;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_eq_8 = mask_eq_3 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire          mask_acc_8 = mask_acc_3 | mask_size_2 & mask_eq_8;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_eq_9 = mask_eq_3 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire          mask_acc_9 = mask_acc_3 | mask_size_2 & mask_eq_9;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_eq_10 = mask_eq_4 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire          mask_acc_10 = mask_acc_4 | mask_size_2 & mask_eq_10;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_eq_11 = mask_eq_4 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire          mask_acc_11 = mask_acc_4 | mask_size_2 & mask_eq_11;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_eq_12 = mask_eq_5 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire          mask_acc_12 = mask_acc_5 | mask_size_2 & mask_eq_12;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire          mask_eq_13 = mask_eq_5 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire          mask_acc_13 = mask_acc_5 | mask_size_2 & mask_eq_13;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire [1:0]    mask_lo_lo = {mask_acc_7, mask_acc_6};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [1:0]    mask_lo_hi = {mask_acc_9, mask_acc_8};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [3:0]    mask_lo = {mask_lo_hi, mask_lo_lo};	// src/main/scala/util/Misc.scala:222:10
  wire [1:0]    mask_hi_lo = {mask_acc_11, mask_acc_10};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [1:0]    mask_hi_hi = {mask_acc_13, mask_acc_12};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [3:0]    mask_hi = {mask_hi_hi, mask_hi_lo};	// src/main/scala/util/Misc.scala:222:10
  wire [7:0]    mask = {mask_hi, mask_lo};	// src/main/scala/util/Misc.scala:222:10
  wire          _a_first_T_1 = io_in_a_ready_0 & io_in_a_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:52:35
  wire          a_first_done;	// src/main/scala/tilelink/Edges.scala:234:22
  assign a_first_done = _a_first_T_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  wire          a_first_done_1;	// src/main/scala/tilelink/Edges.scala:234:22
  assign a_first_done_1 = _a_first_T_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  wire          a_first_beats1_opdata = ~(io_in_a_bits_opcode_0[2]);	// src/main/scala/tilelink/Edges.scala:93:{28,37}
  reg           a_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27
  wire          a_first_counter1 = a_first_counter - 1'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire          a_first = ~a_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  reg  [2:0]    opcode;	// src/main/scala/tilelink/Monitor.scala:384:22
  reg  [2:0]    param;	// src/main/scala/tilelink/Monitor.scala:385:22
  reg  [1:0]    size;	// src/main/scala/tilelink/Monitor.scala:386:22
  reg  [9:0]    source;	// src/main/scala/tilelink/Monitor.scala:387:22
  reg  [16:0]   address;	// src/main/scala/tilelink/Monitor.scala:388:22
  wire          _d_first_T_2 = io_in_d_ready_0 & io_in_d_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:52:35
  wire          d_first_done;	// src/main/scala/tilelink/Edges.scala:234:22
  assign d_first_done = _d_first_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  wire          d_first_done_1;	// src/main/scala/tilelink/Edges.scala:234:22
  assign d_first_done_1 = _d_first_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  wire          d_first_done_2;	// src/main/scala/tilelink/Edges.scala:234:22
  assign d_first_done_2 = _d_first_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  reg           d_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27
  wire          d_first_counter1 = d_first_counter - 1'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire          d_first = ~d_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  reg  [1:0]    size_1;	// src/main/scala/tilelink/Monitor.scala:537:22
  reg  [9:0]    source_1;	// src/main/scala/tilelink/Monitor.scala:538:22
  reg  [751:0]  inflight;	// src/main/scala/tilelink/Monitor.scala:611:27
  reg  [3007:0] inflight_opcodes;	// src/main/scala/tilelink/Monitor.scala:613:35
  reg  [3007:0] inflight_sizes;	// src/main/scala/tilelink/Monitor.scala:615:33
  wire          a_first_beats1_opdata_1 = ~(io_in_a_bits_opcode_0[2]);	// src/main/scala/tilelink/Edges.scala:93:{28,37}
  reg           a_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27
  wire          a_first_counter1_1 = a_first_counter_1 - 1'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire          a_first_1 = ~a_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  reg           d_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27
  wire          d_first_counter1_1 = d_first_counter_1 - 1'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire          d_first_1 = ~d_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire [3007:0] _GEN = {2996'h0, io_in_d_bits_source_0, 2'h0};	// src/main/scala/tilelink/Monitor.scala:634:44
  wire [3007:0] _a_opcode_lookup_T_1 = inflight_opcodes >> _GEN;	// src/main/scala/tilelink/Monitor.scala:613:35, :634:44
  wire [3:0]    a_opcode_lookup = {1'h0, _a_opcode_lookup_T_1[3:1]};	// src/main/scala/tilelink/Monitor.scala:632:35, :634:{21,44,152}
  wire [3007:0] _a_size_lookup_T_1 = inflight_sizes >> _GEN;	// src/main/scala/tilelink/Monitor.scala:615:33, :634:44, :638:40
  wire [3:0]    a_size_lookup = {1'h0, _a_size_lookup_T_1[3:1]};	// src/main/scala/tilelink/Monitor.scala:636:33, :638:{19,40,144}
  wire          _same_cycle_resp_T_1 = io_in_a_valid_0 & a_first_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:648:26
  wire [1023:0] _GEN_0 = {1014'h0, io_in_a_bits_source_0};	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [1023:0] _a_set_wo_ready_T = 1024'h1 << _GEN_0;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [751:0]  a_set_wo_ready = _same_cycle_resp_T_1 ? _a_set_wo_ready_T[751:0] : 752'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:624:34, :648:{26,71}, :649:22
  wire          _GEN_1 = _a_first_T_1 & a_first_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:652:25
  wire [1023:0] _a_set_T = 1024'h1 << _GEN_0;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [751:0]  a_set = _GEN_1 ? _a_set_T[751:0] : 752'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:623:34, :652:{25,70}, :653:28
  wire [3:0]    a_opcodes_set_interm = _GEN_1 ? {io_in_a_bits_opcode_0, 1'h1} : 4'h0;	// src/main/scala/tilelink/Monitor.scala:643:40, :652:{25,70}, :654:{28,61}
  wire [2:0]    a_sizes_set_interm = _GEN_1 ? {io_in_a_bits_size_0, 1'h1} : 3'h0;	// src/main/scala/tilelink/Monitor.scala:645:38, :652:{25,70}, :655:{28,59}
  wire [8194:0] _a_opcodes_set_T_1 =
    {8191'h0, a_opcodes_set_interm} << {8183'h0, io_in_a_bits_source_0, 2'h0};	// src/main/scala/tilelink/Monitor.scala:643:40, :656:54
  wire [3007:0] a_opcodes_set = _GEN_1 ? _a_opcodes_set_T_1[3007:0] : 3008'h0;	// src/main/scala/tilelink/Monitor.scala:627:33, :652:{25,70}, :656:{28,54}
  wire [8193:0] _a_sizes_set_T_1 =
    {8191'h0, a_sizes_set_interm} << {8182'h0, io_in_a_bits_source_0, 2'h0};	// src/main/scala/tilelink/Monitor.scala:645:38, :656:54, :657:52
  wire [3007:0] a_sizes_set = _GEN_1 ? _a_sizes_set_T_1[3007:0] : 3008'h0;	// src/main/scala/tilelink/Monitor.scala:629:31, :652:{25,70}, :657:{28,52}
  wire          _GEN_2 = io_in_d_valid_0 & d_first_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:671:26
  wire [1023:0] _GEN_3 = {1014'h0, io_in_d_bits_source_0};	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [1023:0] _d_clr_wo_ready_T = 1024'h1 << _GEN_3;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [751:0]  d_clr_wo_ready = _GEN_2 ? _d_clr_wo_ready_T[751:0] : 752'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:662:34, :671:{26,90}, :672:22
  wire          _GEN_4 = _d_first_T_2 & d_first_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:675:25
  wire [1023:0] _d_clr_T = 1024'h1 << _GEN_3;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [751:0]  d_clr = _GEN_4 ? _d_clr_T[751:0] : 752'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:661:34, :675:{25,89}, :676:21
  wire [8206:0] _GEN_5 = {8195'h0, io_in_d_bits_source_0, 2'h0};	// src/main/scala/tilelink/Monitor.scala:677:76
  wire [8206:0] _d_opcodes_clr_T_5 = 8207'hF << _GEN_5;	// src/main/scala/tilelink/Monitor.scala:677:76
  wire [3007:0] d_opcodes_clr = _GEN_4 ? _d_opcodes_clr_T_5[3007:0] : 3008'h0;	// src/main/scala/tilelink/Monitor.scala:665:33, :675:{25,89}, :677:{21,76}
  wire [8206:0] _d_sizes_clr_T_5 = 8207'hF << _GEN_5;	// src/main/scala/tilelink/Monitor.scala:677:76, :678:74
  wire [3007:0] d_sizes_clr = _GEN_4 ? _d_sizes_clr_T_5[3007:0] : 3008'h0;	// src/main/scala/tilelink/Monitor.scala:667:31, :675:{25,89}, :678:{21,74}
  wire          same_cycle_resp =
    _same_cycle_resp_T_1 & io_in_a_bits_source_0 == io_in_d_bits_source_0;	// src/main/scala/tilelink/Monitor.scala:648:26, :681:{88,113}
  reg  [31:0]   watchdog;	// src/main/scala/tilelink/Monitor.scala:706:27
  reg           d_first_counter_2;	// src/main/scala/tilelink/Edges.scala:230:27
  wire          d_first_counter1_2 = d_first_counter_2 - 1'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire          d_first_2 = ~d_first_counter_2;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire [3007:0] _c_opcode_lookup_T_1 = 3008'h0 >> _GEN;	// src/main/scala/tilelink/Monitor.scala:634:44, :746:44
  wire [3:0]    c_opcode_lookup = {1'h0, _c_opcode_lookup_T_1[3:1]};	// src/main/scala/tilelink/Monitor.scala:744:35, :746:{21,44,152}
  wire [3007:0] _c_size_lookup_T_1 = 3008'h0 >> _GEN;	// src/main/scala/tilelink/Monitor.scala:634:44, :747:42
  wire [3:0]    c_size_lookup = {1'h0, _c_size_lookup_T_1[3:1]};	// src/main/scala/tilelink/Monitor.scala:745:35, :747:{21,42,146}
  reg  [31:0]   watchdog_1;	// src/main/scala/tilelink/Monitor.scala:815:27
  `ifndef SYNTHESIS	// src/main/scala/tilelink/Monitor.scala:42:11
    always @(posedge clock) begin	// src/main/scala/tilelink/Monitor.scala:42:11
      automatic logic [7:0][2:0] _GEN_6 =
        '{3'h4, 3'h5, 3'h2, 3'h1, 3'h1, 3'h1, 3'h0, 3'h0};
      automatic logic [7:0][2:0] _GEN_7 =
        '{3'h4, 3'h4, 3'h2, 3'h1, 3'h1, 3'h1, 3'h0, 3'h0};
      automatic logic            _GEN_8 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h6 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :81:{25,54}
      automatic logic            _GEN_9 = source_ok_uncommonBits > 10'h2EF;	// src/main/scala/diplomacy/Parameters.scala:52:56, :57:20
      automatic logic            _GEN_10 = io_in_a_bits_param_0 > 3'h2;	// src/main/scala/tilelink/Bundles.scala:111:27
      automatic logic            _GEN_11 = io_in_a_bits_mask_0 != 8'hFF;	// src/main/scala/tilelink/Monitor.scala:88:31
      automatic logic            _GEN_12 =
        io_in_a_valid_0 & (&io_in_a_bits_opcode_0) & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :92:{25,53}
      automatic logic            _GEN_13 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h4 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :104:{25,45}
      automatic logic            _GEN_14 = io_in_a_bits_mask_0 != mask;	// src/main/scala/tilelink/Monitor.scala:110:30, src/main/scala/util/Misc.scala:222:10
      automatic logic            _GEN_15 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h0 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :114:{25,53}
      automatic logic            _GEN_16 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h1 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :122:{25,56}
      automatic logic            _GEN_17 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h2 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :130:{25,56}
      automatic logic            _GEN_18 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h3 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :138:{25,53}
      automatic logic            _GEN_19 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h5 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :146:{25,46}
      automatic logic            _GEN_20 = io_in_a_valid_0 & ~a_first & ~reset;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :389:{19,22}
      automatic logic            _GEN_21 = io_in_d_valid_0 & ~d_first & ~reset;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :541:{19,22}
      automatic logic            _GEN_22 = _GEN_2 & same_cycle_resp & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:26, :681:88, :684:30
      automatic logic            _GEN_23 = _GEN_2 & ~same_cycle_resp & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:26, :681:88, :684:30
      automatic logic [751:0]    _GEN_24;	// src/main/scala/tilelink/Monitor.scala:658:26
      automatic logic [751:0]    _GEN_25;	// src/main/scala/tilelink/Monitor.scala:682:25
      if (_GEN_8) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :81:54
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquireBlock type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquireBlock from a client which does not support Probe (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_8 & _GEN_9) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :81:54
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock carries invalid source ID (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_8 & ~(&io_in_a_bits_size_0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :81:54, src/main/scala/util/Misc.scala:206:21
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock smaller than a beat (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_8 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :81:54
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock address not aligned to size (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_8 & _GEN_10) begin	// src/main/scala/tilelink/Bundles.scala:111:27, src/main/scala/tilelink/Monitor.scala:42:11, :81:54
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock carries invalid grow param (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_8 & _GEN_11) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :81:54, :88:31
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock contains invalid mask (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_8 & io_in_a_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :81:54
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock is corrupt (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquirePerm type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquirePerm from a client which does not support Probe (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & _GEN_9) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm carries invalid source ID (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & ~(&io_in_a_bits_size_0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :92:53, src/main/scala/util/Misc.scala:206:21
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm smaller than a beat (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm address not aligned to size (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & _GEN_10) begin	// src/main/scala/tilelink/Bundles.scala:111:27, src/main/scala/tilelink/Monitor.scala:42:11, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm carries invalid grow param (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & ~(|io_in_a_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :92:53, :99:31
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm requests NtoB (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & _GEN_11) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :88:31, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm contains invalid mask (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & io_in_a_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm is corrupt (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_13 & uncommonBits_3 > 10'h2EF) begin	// src/main/scala/diplomacy/Parameters.scala:52:56, :57:20, src/main/scala/tilelink/Monitor.scala:42:11, :104:45
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Get type which master claims it can't emit (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_13 & ~(io_in_a_bits_address_0[16])) begin	// src/main/scala/diplomacy/Parameters.scala:137:31, src/main/scala/tilelink/Monitor.scala:42:11, :104:45
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Get type which slave claims it can't support (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_13 & _GEN_9) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :104:45
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get carries invalid source ID (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_13 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :104:45
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get address not aligned to size (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_13 & (|io_in_a_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :99:31, :104:45
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get carries invalid param (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_13 & _GEN_14) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :104:45, :110:30
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get contains invalid mask (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_13 & io_in_a_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :104:45
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get is corrupt (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :114:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries PutFull type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & _GEN_9) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :114:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull carries invalid source ID (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :114:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull address not aligned to size (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & (|io_in_a_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :99:31, :114:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull carries invalid param (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & _GEN_14) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30, :114:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull contains invalid mask (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :122:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries PutPartial type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & _GEN_9) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :122:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial carries invalid source ID (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :122:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial address not aligned to size (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & (|io_in_a_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :99:31, :122:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial carries invalid param (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & (|(io_in_a_bits_mask_0 & ~mask))) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :122:56, :127:{31,33,40}, src/main/scala/util/Misc.scala:222:10
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial contains invalid mask (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :130:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Arithmetic type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & _GEN_9) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :130:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic carries invalid source ID (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :130:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic address not aligned to size (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & io_in_a_bits_param_0 > 3'h4) begin	// src/main/scala/tilelink/Bundles.scala:141:33, src/main/scala/tilelink/Monitor.scala:42:11, :130:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic carries invalid opcode param (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & _GEN_14) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30, :130:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic contains invalid mask (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_18) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :138:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Logical type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_18 & _GEN_9) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :138:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical carries invalid source ID (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_18 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :138:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical address not aligned to size (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_18 & io_in_a_bits_param_0[2]) begin	// src/main/scala/tilelink/Bundles.scala:148:30, src/main/scala/tilelink/Monitor.scala:42:11, :138:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical carries invalid opcode param (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_18 & _GEN_14) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30, :138:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical contains invalid mask (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_19) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Hint type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_19 & _GEN_9) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint carries invalid source ID (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_19 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint address not aligned to size (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_19 & (|(io_in_a_bits_param_0[2:1]))) begin	// src/main/scala/tilelink/Bundles.scala:161:28, src/main/scala/tilelink/Monitor.scala:42:11, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint carries invalid opcode param (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_19 & _GEN_14) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint contains invalid mask (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_19 & io_in_a_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint is corrupt (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (io_in_d_valid_0 & ~reset & source_ok_uncommonBits_1 > 10'h2EF) begin	// src/main/scala/diplomacy/Parameters.scala:52:56, :57:20, src/main/scala/tilelink/Monitor.scala:42:11, :49:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel AccessAckData carries invalid source ID (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_20 & io_in_a_bits_opcode_0 != opcode) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :384:22, :389:19, :390:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel opcode changed within multibeat operation (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & io_in_a_bits_param_0 != param) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :385:22, :389:19, :391:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel param changed within multibeat operation (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & io_in_a_bits_size_0 != size) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :386:22, :389:19, :392:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel size changed within multibeat operation (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & io_in_a_bits_source_0 != source) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :387:22, :389:19, :393:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel source changed within multibeat operation (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & io_in_a_bits_address_0 != address) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :388:22, :389:19, :394:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel address changed with multibeat operation (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_21 & io_in_d_bits_size_0 != size_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :537:22, :541:19, :544:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel size changed within multibeat operation (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_21 & io_in_d_bits_source_0 != source_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :538:22, :541:19, :545:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel source changed within multibeat operation (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      _GEN_24 = inflight >> io_in_a_bits_source_0;	// src/main/scala/tilelink/Monitor.scala:611:27, :658:26
      if (_GEN_1 & ~reset & _GEN_24[0]) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :652:25, :658:26
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel re-used a source ID (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      _GEN_25 = inflight >> io_in_d_bits_source_0;	// src/main/scala/tilelink/Monitor.scala:611:27, :682:25
      if (_GEN_2 & ~reset & ~(_GEN_25[0] | same_cycle_resp)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:26, :681:88, :682:{25,49}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel acknowledged for nothing inflight (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_22
          & ~(_GEN_7[io_in_a_bits_opcode_0] == 3'h1
              | _GEN_6[io_in_a_bits_opcode_0] == 3'h1)) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :684:30, :685:{38,77}, :686:39
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper opcode response (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_22 & io_in_a_bits_size_0 != io_in_d_bits_size_0) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :684:30, :687:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_23
          & ~(_GEN_7[a_opcode_lookup[2:0]] == 3'h1
              | _GEN_6[a_opcode_lookup[2:0]] == 3'h1)) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :632:35, :684:30, :689:{38,72}, :690:38
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper opcode response (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_23 & {2'h0, io_in_d_bits_size_0} != a_size_lookup) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :636:33, :684:30, :691:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_2 & a_first_1 & io_in_a_valid_0
          & io_in_a_bits_source_0 == io_in_d_bits_source_0 & ~reset
          & ~(~io_in_d_ready_0 | io_in_a_ready_0)) begin	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:26, :694:{36,47,65,90}, :695:{15,32}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: ready check\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (~reset
          & ~(inflight == 752'h0 | _plusarg_reader_out == 32'h0
              | watchdog < _plusarg_reader_out)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :611:27, :706:27, :709:{26,30,39,47,59}, src/main/scala/util/PlusArg.scala:80:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: TileLink timeout expired (connected at src/main/scala/devices/tilelink/BootROM.scala:86:18)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  always @(posedge clock) begin
    if (reset) begin
      a_first_counter <= 1'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      d_first_counter <= 1'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      inflight <= 752'h0;	// src/main/scala/tilelink/Monitor.scala:611:27
      inflight_opcodes <= 3008'h0;	// src/main/scala/tilelink/Monitor.scala:613:35
      inflight_sizes <= 3008'h0;	// src/main/scala/tilelink/Monitor.scala:615:33
      a_first_counter_1 <= 1'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      d_first_counter_1 <= 1'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      watchdog <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:706:27
      d_first_counter_2 <= 1'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      watchdog_1 <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:815:27
    end
    else begin
      if (_a_first_T_1) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35
        a_first_counter <= ~a_first & a_first_counter1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28, :232:25, :237:21
        a_first_counter_1 <= ~a_first_1 & a_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28, :232:25, :237:21
      end
      if (_d_first_T_2) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35
        d_first_counter <= ~d_first & d_first_counter1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28, :232:25, :237:21
        d_first_counter_1 <= ~d_first_1 & d_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28, :232:25, :237:21
        d_first_counter_2 <= ~d_first_2 & d_first_counter1_2;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28, :232:25, :237:21
        watchdog_1 <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:815:27
      end
      else	// src/main/scala/chisel3/util/Decoupled.scala:52:35
        watchdog_1 <= watchdog_1 + 32'h1;	// src/main/scala/tilelink/Monitor.scala:815:27, :820:26
      inflight <= (inflight | a_set) & ~d_clr;	// src/main/scala/tilelink/Monitor.scala:611:27, :623:34, :661:34, :702:{27,36,38}
      inflight_opcodes <= (inflight_opcodes | a_opcodes_set) & ~d_opcodes_clr;	// src/main/scala/tilelink/Monitor.scala:613:35, :627:33, :665:33, :703:{43,60,62}
      inflight_sizes <= (inflight_sizes | a_sizes_set) & ~d_sizes_clr;	// src/main/scala/tilelink/Monitor.scala:615:33, :629:31, :667:31, :704:{39,54,56}
      if (_a_first_T_1 | _d_first_T_2)	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Monitor.scala:712:25
        watchdog <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:706:27
      else	// src/main/scala/tilelink/Monitor.scala:712:25
        watchdog <= watchdog + 32'h1;	// src/main/scala/tilelink/Monitor.scala:706:27, :711:26
    end
    if (_a_first_T_1 & a_first) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:396:18
      opcode <= io_in_a_bits_opcode_0;	// src/main/scala/tilelink/Monitor.scala:384:22
      param <= io_in_a_bits_param_0;	// src/main/scala/tilelink/Monitor.scala:385:22
      size <= io_in_a_bits_size_0;	// src/main/scala/tilelink/Monitor.scala:386:22
      source <= io_in_a_bits_source_0;	// src/main/scala/tilelink/Monitor.scala:387:22
      address <= io_in_a_bits_address_0;	// src/main/scala/tilelink/Monitor.scala:388:22
    end
    if (_d_first_T_2 & d_first) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:549:18
      size_1 <= io_in_d_bits_size_0;	// src/main/scala/tilelink/Monitor.scala:537:22
      source_1 <= io_in_d_bits_source_0;	// src/main/scala/tilelink/Monitor.scala:538:22
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin
      automatic logic [31:0] _RANDOM[0:426];
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [8:0] i = 9'h0; i < 9'h1AB; i += 9'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        a_first_counter = _RANDOM[9'h0][0];	// src/main/scala/tilelink/Edges.scala:230:27
        opcode = _RANDOM[9'h0][3:1];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:384:22
        param = _RANDOM[9'h0][6:4];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:385:22
        size = _RANDOM[9'h0][8:7];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:386:22
        source = _RANDOM[9'h0][18:9];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:387:22
        address = {_RANDOM[9'h0][31:19], _RANDOM[9'h1][3:0]};	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:388:22
        d_first_counter = _RANDOM[9'h1][4];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:388:22
        size_1 = _RANDOM[9'h1][11:10];	// src/main/scala/tilelink/Monitor.scala:388:22, :537:22
        source_1 = _RANDOM[9'h1][21:12];	// src/main/scala/tilelink/Monitor.scala:388:22, :538:22
        inflight =
          {_RANDOM[9'h1][31:24],
           _RANDOM[9'h2],
           _RANDOM[9'h3],
           _RANDOM[9'h4],
           _RANDOM[9'h5],
           _RANDOM[9'h6],
           _RANDOM[9'h7],
           _RANDOM[9'h8],
           _RANDOM[9'h9],
           _RANDOM[9'hA],
           _RANDOM[9'hB],
           _RANDOM[9'hC],
           _RANDOM[9'hD],
           _RANDOM[9'hE],
           _RANDOM[9'hF],
           _RANDOM[9'h10],
           _RANDOM[9'h11],
           _RANDOM[9'h12],
           _RANDOM[9'h13],
           _RANDOM[9'h14],
           _RANDOM[9'h15],
           _RANDOM[9'h16],
           _RANDOM[9'h17],
           _RANDOM[9'h18],
           _RANDOM[9'h19][7:0]};	// src/main/scala/tilelink/Monitor.scala:388:22, :611:27
        inflight_opcodes =
          {_RANDOM[9'h19][31:8],
           _RANDOM[9'h1A],
           _RANDOM[9'h1B],
           _RANDOM[9'h1C],
           _RANDOM[9'h1D],
           _RANDOM[9'h1E],
           _RANDOM[9'h1F],
           _RANDOM[9'h20],
           _RANDOM[9'h21],
           _RANDOM[9'h22],
           _RANDOM[9'h23],
           _RANDOM[9'h24],
           _RANDOM[9'h25],
           _RANDOM[9'h26],
           _RANDOM[9'h27],
           _RANDOM[9'h28],
           _RANDOM[9'h29],
           _RANDOM[9'h2A],
           _RANDOM[9'h2B],
           _RANDOM[9'h2C],
           _RANDOM[9'h2D],
           _RANDOM[9'h2E],
           _RANDOM[9'h2F],
           _RANDOM[9'h30],
           _RANDOM[9'h31],
           _RANDOM[9'h32],
           _RANDOM[9'h33],
           _RANDOM[9'h34],
           _RANDOM[9'h35],
           _RANDOM[9'h36],
           _RANDOM[9'h37],
           _RANDOM[9'h38],
           _RANDOM[9'h39],
           _RANDOM[9'h3A],
           _RANDOM[9'h3B],
           _RANDOM[9'h3C],
           _RANDOM[9'h3D],
           _RANDOM[9'h3E],
           _RANDOM[9'h3F],
           _RANDOM[9'h40],
           _RANDOM[9'h41],
           _RANDOM[9'h42],
           _RANDOM[9'h43],
           _RANDOM[9'h44],
           _RANDOM[9'h45],
           _RANDOM[9'h46],
           _RANDOM[9'h47],
           _RANDOM[9'h48],
           _RANDOM[9'h49],
           _RANDOM[9'h4A],
           _RANDOM[9'h4B],
           _RANDOM[9'h4C],
           _RANDOM[9'h4D],
           _RANDOM[9'h4E],
           _RANDOM[9'h4F],
           _RANDOM[9'h50],
           _RANDOM[9'h51],
           _RANDOM[9'h52],
           _RANDOM[9'h53],
           _RANDOM[9'h54],
           _RANDOM[9'h55],
           _RANDOM[9'h56],
           _RANDOM[9'h57],
           _RANDOM[9'h58],
           _RANDOM[9'h59],
           _RANDOM[9'h5A],
           _RANDOM[9'h5B],
           _RANDOM[9'h5C],
           _RANDOM[9'h5D],
           _RANDOM[9'h5E],
           _RANDOM[9'h5F],
           _RANDOM[9'h60],
           _RANDOM[9'h61],
           _RANDOM[9'h62],
           _RANDOM[9'h63],
           _RANDOM[9'h64],
           _RANDOM[9'h65],
           _RANDOM[9'h66],
           _RANDOM[9'h67],
           _RANDOM[9'h68],
           _RANDOM[9'h69],
           _RANDOM[9'h6A],
           _RANDOM[9'h6B],
           _RANDOM[9'h6C],
           _RANDOM[9'h6D],
           _RANDOM[9'h6E],
           _RANDOM[9'h6F],
           _RANDOM[9'h70],
           _RANDOM[9'h71],
           _RANDOM[9'h72],
           _RANDOM[9'h73],
           _RANDOM[9'h74],
           _RANDOM[9'h75],
           _RANDOM[9'h76],
           _RANDOM[9'h77][7:0]};	// src/main/scala/tilelink/Monitor.scala:611:27, :613:35
        inflight_sizes =
          {_RANDOM[9'h77][31:8],
           _RANDOM[9'h78],
           _RANDOM[9'h79],
           _RANDOM[9'h7A],
           _RANDOM[9'h7B],
           _RANDOM[9'h7C],
           _RANDOM[9'h7D],
           _RANDOM[9'h7E],
           _RANDOM[9'h7F],
           _RANDOM[9'h80],
           _RANDOM[9'h81],
           _RANDOM[9'h82],
           _RANDOM[9'h83],
           _RANDOM[9'h84],
           _RANDOM[9'h85],
           _RANDOM[9'h86],
           _RANDOM[9'h87],
           _RANDOM[9'h88],
           _RANDOM[9'h89],
           _RANDOM[9'h8A],
           _RANDOM[9'h8B],
           _RANDOM[9'h8C],
           _RANDOM[9'h8D],
           _RANDOM[9'h8E],
           _RANDOM[9'h8F],
           _RANDOM[9'h90],
           _RANDOM[9'h91],
           _RANDOM[9'h92],
           _RANDOM[9'h93],
           _RANDOM[9'h94],
           _RANDOM[9'h95],
           _RANDOM[9'h96],
           _RANDOM[9'h97],
           _RANDOM[9'h98],
           _RANDOM[9'h99],
           _RANDOM[9'h9A],
           _RANDOM[9'h9B],
           _RANDOM[9'h9C],
           _RANDOM[9'h9D],
           _RANDOM[9'h9E],
           _RANDOM[9'h9F],
           _RANDOM[9'hA0],
           _RANDOM[9'hA1],
           _RANDOM[9'hA2],
           _RANDOM[9'hA3],
           _RANDOM[9'hA4],
           _RANDOM[9'hA5],
           _RANDOM[9'hA6],
           _RANDOM[9'hA7],
           _RANDOM[9'hA8],
           _RANDOM[9'hA9],
           _RANDOM[9'hAA],
           _RANDOM[9'hAB],
           _RANDOM[9'hAC],
           _RANDOM[9'hAD],
           _RANDOM[9'hAE],
           _RANDOM[9'hAF],
           _RANDOM[9'hB0],
           _RANDOM[9'hB1],
           _RANDOM[9'hB2],
           _RANDOM[9'hB3],
           _RANDOM[9'hB4],
           _RANDOM[9'hB5],
           _RANDOM[9'hB6],
           _RANDOM[9'hB7],
           _RANDOM[9'hB8],
           _RANDOM[9'hB9],
           _RANDOM[9'hBA],
           _RANDOM[9'hBB],
           _RANDOM[9'hBC],
           _RANDOM[9'hBD],
           _RANDOM[9'hBE],
           _RANDOM[9'hBF],
           _RANDOM[9'hC0],
           _RANDOM[9'hC1],
           _RANDOM[9'hC2],
           _RANDOM[9'hC3],
           _RANDOM[9'hC4],
           _RANDOM[9'hC5],
           _RANDOM[9'hC6],
           _RANDOM[9'hC7],
           _RANDOM[9'hC8],
           _RANDOM[9'hC9],
           _RANDOM[9'hCA],
           _RANDOM[9'hCB],
           _RANDOM[9'hCC],
           _RANDOM[9'hCD],
           _RANDOM[9'hCE],
           _RANDOM[9'hCF],
           _RANDOM[9'hD0],
           _RANDOM[9'hD1],
           _RANDOM[9'hD2],
           _RANDOM[9'hD3],
           _RANDOM[9'hD4],
           _RANDOM[9'hD5][7:0]};	// src/main/scala/tilelink/Monitor.scala:613:35, :615:33
        a_first_counter_1 = _RANDOM[9'hD5][8];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:615:33
        d_first_counter_1 = _RANDOM[9'hD5][9];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:615:33
        watchdog = {_RANDOM[9'hD5][31:10], _RANDOM[9'hD6][9:0]};	// src/main/scala/tilelink/Monitor.scala:615:33, :706:27
        d_first_counter_2 = _RANDOM[9'h1A9][27];	// src/main/scala/tilelink/Edges.scala:230:27
        watchdog_1 = {_RANDOM[9'h1A9][31:28], _RANDOM[9'h1AA][27:0]};	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:815:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  plusarg_reader #(
    .DEFAULT(0),
    .FORMAT("tilelink_timeout=%d"),
    .WIDTH(32)
  ) plusarg_reader (	// src/main/scala/util/PlusArg.scala:80:11
    .out (_plusarg_reader_out)
  );	// src/main/scala/util/PlusArg.scala:80:11
  plusarg_reader #(
    .DEFAULT(0),
    .FORMAT("tilelink_timeout=%d"),
    .WIDTH(32)
  ) plusarg_reader_1 (	// src/main/scala/util/PlusArg.scala:80:11
    .out (/* unused */)
  );	// src/main/scala/util/PlusArg.scala:80:11
endmodule


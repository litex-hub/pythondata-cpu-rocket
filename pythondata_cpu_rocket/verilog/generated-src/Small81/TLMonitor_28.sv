// Generated by CIRCT firtool-1.66.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TLMonitor_28(
  input        clock,
               reset,
               io_in_a_ready,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_a_valid,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [2:0]  io_in_a_bits_opcode,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_a_bits_param,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_a_bits_size,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [5:0]  io_in_a_bits_source,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [27:0] io_in_a_bits_address,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [7:0]  io_in_a_bits_mask,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [63:0] io_in_a_bits_data,	// src/main/scala/tilelink/Monitor.scala:17:14
  input        io_in_a_bits_corrupt,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_d_ready,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_d_valid,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [2:0]  io_in_d_bits_opcode,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_d_bits_size,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [5:0]  io_in_d_bits_source,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [63:0] io_in_d_bits_data	// src/main/scala/tilelink/Monitor.scala:17:14
);

  wire [31:0]  _plusarg_reader_1_out;	// src/main/scala/util/PlusArg.scala:80:11
  wire [31:0]  _plusarg_reader_out;	// src/main/scala/util/PlusArg.scala:80:11
  wire         io_in_a_ready_0 = io_in_a_ready;
  wire         io_in_a_valid_0 = io_in_a_valid;
  wire [2:0]   io_in_a_bits_opcode_0 = io_in_a_bits_opcode;
  wire [2:0]   io_in_a_bits_param_0 = io_in_a_bits_param;
  wire [2:0]   io_in_a_bits_size_0 = io_in_a_bits_size;
  wire [5:0]   io_in_a_bits_source_0 = io_in_a_bits_source;
  wire [27:0]  io_in_a_bits_address_0 = io_in_a_bits_address;
  wire [7:0]   io_in_a_bits_mask_0 = io_in_a_bits_mask;
  wire [63:0]  io_in_a_bits_data_0 = io_in_a_bits_data;
  wire         io_in_a_bits_corrupt_0 = io_in_a_bits_corrupt;
  wire         io_in_d_ready_0 = io_in_d_ready;
  wire         io_in_d_valid_0 = io_in_d_valid;
  wire [2:0]   io_in_d_bits_opcode_0 = io_in_d_bits_opcode;
  wire [2:0]   io_in_d_bits_size_0 = io_in_d_bits_size;
  wire [5:0]   io_in_d_bits_source_0 = io_in_d_bits_source;
  wire [63:0]  io_in_d_bits_data_0 = io_in_d_bits_data;
  wire         c_first = 1'h1;	// src/main/scala/tilelink/Edges.scala:232:25
  wire         c_first_last = 1'h1;	// src/main/scala/tilelink/Edges.scala:233:33
  wire [2:0]   c_first_counter1 = 3'h7;	// src/main/scala/tilelink/Edges.scala:231:28
  wire         io_in_d_bits_sink = 1'h0;
  wire         io_in_d_bits_denied = 1'h0;
  wire         io_in_d_bits_corrupt = 1'h0;
  wire         sink_ok = 1'h0;	// src/main/scala/tilelink/Monitor.scala:306:31
  wire         c_first_beats1_opdata = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36
  wire         c_first_done = 1'h0;	// src/main/scala/tilelink/Edges.scala:234:22
  wire         c_probe_ack = 1'h0;	// src/main/scala/tilelink/Monitor.scala:769:71
  wire         same_cycle_resp_1 = 1'h0;	// src/main/scala/tilelink/Monitor.scala:792:88
  wire [1:0]   io_in_d_bits_param = 2'h0;
  wire [187:0] c_opcodes_set = 188'h0;	// src/main/scala/tilelink/Monitor.scala:737:34
  wire [187:0] c_sizes_set = 188'h0;	// src/main/scala/tilelink/Monitor.scala:738:34
  wire [46:0]  c_set = 47'h0;	// src/main/scala/tilelink/Monitor.scala:735:34
  wire [46:0]  c_set_wo_ready = 47'h0;	// src/main/scala/tilelink/Monitor.scala:736:34
  wire [2:0]   responseMap_0 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]   responseMap_1 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]   responseMapSecondOption_0 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]   responseMapSecondOption_1 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]   c_first_beats1_decode = 3'h0;	// src/main/scala/tilelink/Edges.scala:221:59
  wire [2:0]   c_first_beats1 = 3'h0;	// src/main/scala/tilelink/Edges.scala:222:14
  wire [2:0]   c_first_count = 3'h0;	// src/main/scala/tilelink/Edges.scala:235:25
  wire [2:0]   responseMap_6 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]   responseMap_7 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]   responseMapSecondOption_7 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]   responseMapSecondOption_6 = 3'h5;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]   responseMap_5 = 3'h2;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]   responseMapSecondOption_5 = 3'h2;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]   responseMap_2 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]   responseMap_3 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]   responseMap_4 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]   responseMapSecondOption_2 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]   responseMapSecondOption_3 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]   responseMapSecondOption_4 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [3:0]   c_opcodes_set_interm = 4'h0;	// src/main/scala/tilelink/Monitor.scala:751:40
  wire [3:0]   c_sizes_set_interm = 4'h0;	// src/main/scala/tilelink/Monitor.scala:752:40
  wire [2:0]   source_ok_uncommonBits = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   source_ok_uncommonBits_1 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_1 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_2 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_3 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_4 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_5 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_6 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_7 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_8 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_9 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_10 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_11 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_12 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_13 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_14 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_15 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_16 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_17 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_18 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_19 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_20 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   uncommonBits_21 = io_in_a_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire         _source_ok_T_12 = io_in_a_bits_source_0 == 6'h2C;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_13 = io_in_a_bits_source_0 == 6'h2D;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_14 = io_in_a_bits_source_0 == 6'h2E;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_15 = io_in_a_bits_source_0 == 6'h28;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_16 = io_in_a_bits_source_0 == 6'h29;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_17 = io_in_a_bits_source_0 == 6'h2A;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_18 = io_in_a_bits_source_0 == 6'h24;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_19 = io_in_a_bits_source_0 == 6'h25;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_20 = io_in_a_bits_source_0 == 6'h26;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_21 = io_in_a_bits_source_0 == 6'h20;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_22 = io_in_a_bits_source_0 == 6'h21;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_23 = io_in_a_bits_source_0 == 6'h22;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_24 = io_in_a_bits_source_0 == 6'h1C;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_25 = io_in_a_bits_source_0 == 6'h1D;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_26 = io_in_a_bits_source_0 == 6'h1E;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_27 = io_in_a_bits_source_0 == 6'h18;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_28 = io_in_a_bits_source_0 == 6'h19;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_29 = io_in_a_bits_source_0 == 6'h1A;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_30 = io_in_a_bits_source_0 == 6'h14;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_31 = io_in_a_bits_source_0 == 6'h15;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_32 = io_in_a_bits_source_0 == 6'h16;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_33 = io_in_a_bits_source_0 == 6'h10;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_34 = io_in_a_bits_source_0 == 6'h11;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         _source_ok_T_35 = io_in_a_bits_source_0 == 6'h12;	// src/main/scala/diplomacy/Parameters.scala:46:9
  wire         source_ok =
    ~(|(io_in_a_bits_source_0[5:3])) | io_in_a_bits_source_0[5:3] == 3'h1
    | _source_ok_T_12 | _source_ok_T_13 | _source_ok_T_14 | _source_ok_T_15
    | _source_ok_T_16 | _source_ok_T_17 | _source_ok_T_18 | _source_ok_T_19
    | _source_ok_T_20 | _source_ok_T_21 | _source_ok_T_22 | _source_ok_T_23
    | _source_ok_T_24 | _source_ok_T_25 | _source_ok_T_26 | _source_ok_T_27
    | _source_ok_T_28 | _source_ok_T_29 | _source_ok_T_30 | _source_ok_T_31
    | _source_ok_T_32 | _source_ok_T_33 | _source_ok_T_34 | _source_ok_T_35;	// src/main/scala/diplomacy/Parameters.scala:46:9, :54:{10,32}, src/main/scala/tilelink/Parameters.scala:1126:46
  wire [12:0]  _GEN = {10'h0, io_in_a_bits_size_0};	// src/main/scala/util/package.scala:235:71
  wire [12:0]  _is_aligned_mask_T_1 = 13'h3F << _GEN;	// src/main/scala/util/package.scala:235:71
  wire [5:0]   is_aligned_mask = ~(_is_aligned_mask_T_1[5:0]);	// src/main/scala/util/package.scala:235:{46,71,76}
  wire         is_aligned = (io_in_a_bits_address_0[5:0] & is_aligned_mask) == 6'h0;	// src/main/scala/tilelink/Edges.scala:22:{16,24}, src/main/scala/util/package.scala:235:46
  wire [1:0]   mask_sizeOH_shiftAmount = io_in_a_bits_size_0[1:0];	// src/main/scala/chisel3/util/OneHot.scala:64:49
  wire [3:0]   _mask_sizeOH_T_1 = 4'h1 << mask_sizeOH_shiftAmount;	// src/main/scala/chisel3/util/OneHot.scala:64:49, :65:12
  wire [2:0]   mask_sizeOH = {_mask_sizeOH_T_1[2:1], 1'h1};	// src/main/scala/chisel3/util/OneHot.scala:65:{12,27}, src/main/scala/util/Misc.scala:202:81
  wire         _mask_T = io_in_a_bits_size_0 > 3'h2;	// src/main/scala/util/Misc.scala:206:21
  wire         mask_size = mask_sizeOH[2];	// src/main/scala/util/Misc.scala:202:81, :209:26
  wire         mask_bit = io_in_a_bits_address_0[2];	// src/main/scala/util/Misc.scala:210:26
  wire         mask_eq_1 = mask_bit;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire         mask_nbit = ~mask_bit;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire         mask_eq = mask_nbit;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire         mask_acc = _mask_T | mask_size & mask_eq;	// src/main/scala/util/Misc.scala:206:21, :209:26, :214:27, :215:{29,38}
  wire         mask_acc_1 = _mask_T | mask_size & mask_eq_1;	// src/main/scala/util/Misc.scala:206:21, :209:26, :214:27, :215:{29,38}
  wire         mask_size_1 = mask_sizeOH[1];	// src/main/scala/util/Misc.scala:202:81, :209:26
  wire         mask_bit_1 = io_in_a_bits_address_0[1];	// src/main/scala/util/Misc.scala:210:26
  wire         mask_nbit_1 = ~mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire         mask_eq_2 = mask_eq & mask_nbit_1;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire         mask_acc_2 = mask_acc | mask_size_1 & mask_eq_2;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_eq_3 = mask_eq & mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire         mask_acc_3 = mask_acc | mask_size_1 & mask_eq_3;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_eq_4 = mask_eq_1 & mask_nbit_1;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire         mask_acc_4 = mask_acc_1 | mask_size_1 & mask_eq_4;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_eq_5 = mask_eq_1 & mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire         mask_acc_5 = mask_acc_1 | mask_size_1 & mask_eq_5;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_size_2 = mask_sizeOH[0];	// src/main/scala/util/Misc.scala:202:81, :209:26
  wire         mask_bit_2 = io_in_a_bits_address_0[0];	// src/main/scala/util/Misc.scala:210:26
  wire         mask_nbit_2 = ~mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire         mask_eq_6 = mask_eq_2 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire         mask_acc_6 = mask_acc_2 | mask_size_2 & mask_eq_6;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_eq_7 = mask_eq_2 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire         mask_acc_7 = mask_acc_2 | mask_size_2 & mask_eq_7;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_eq_8 = mask_eq_3 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire         mask_acc_8 = mask_acc_3 | mask_size_2 & mask_eq_8;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_eq_9 = mask_eq_3 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire         mask_acc_9 = mask_acc_3 | mask_size_2 & mask_eq_9;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_eq_10 = mask_eq_4 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire         mask_acc_10 = mask_acc_4 | mask_size_2 & mask_eq_10;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_eq_11 = mask_eq_4 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire         mask_acc_11 = mask_acc_4 | mask_size_2 & mask_eq_11;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_eq_12 = mask_eq_5 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire         mask_acc_12 = mask_acc_5 | mask_size_2 & mask_eq_12;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire         mask_eq_13 = mask_eq_5 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire         mask_acc_13 = mask_acc_5 | mask_size_2 & mask_eq_13;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire [1:0]   mask_lo_lo = {mask_acc_7, mask_acc_6};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [1:0]   mask_lo_hi = {mask_acc_9, mask_acc_8};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [3:0]   mask_lo = {mask_lo_hi, mask_lo_lo};	// src/main/scala/util/Misc.scala:222:10
  wire [1:0]   mask_hi_lo = {mask_acc_11, mask_acc_10};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [1:0]   mask_hi_hi = {mask_acc_13, mask_acc_12};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [3:0]   mask_hi = {mask_hi_hi, mask_hi_lo};	// src/main/scala/util/Misc.scala:222:10
  wire [7:0]   mask = {mask_hi, mask_lo};	// src/main/scala/util/Misc.scala:222:10
  wire [2:0]   source_ok_uncommonBits_2 = io_in_d_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [2:0]   source_ok_uncommonBits_3 = io_in_d_bits_source_0[2:0];	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire         source_ok_1 =
    io_in_d_bits_source_0[5:3] == 3'h0 | io_in_d_bits_source_0[5:3] == 3'h1
    | io_in_d_bits_source_0 == 6'h2C | io_in_d_bits_source_0 == 6'h2D
    | io_in_d_bits_source_0 == 6'h2E | io_in_d_bits_source_0 == 6'h28
    | io_in_d_bits_source_0 == 6'h29 | io_in_d_bits_source_0 == 6'h2A
    | io_in_d_bits_source_0 == 6'h24 | io_in_d_bits_source_0 == 6'h25
    | io_in_d_bits_source_0 == 6'h26 | io_in_d_bits_source_0 == 6'h20
    | io_in_d_bits_source_0 == 6'h21 | io_in_d_bits_source_0 == 6'h22
    | io_in_d_bits_source_0 == 6'h1C | io_in_d_bits_source_0 == 6'h1D
    | io_in_d_bits_source_0 == 6'h1E | io_in_d_bits_source_0 == 6'h18
    | io_in_d_bits_source_0 == 6'h19 | io_in_d_bits_source_0 == 6'h1A
    | io_in_d_bits_source_0 == 6'h14 | io_in_d_bits_source_0 == 6'h15
    | io_in_d_bits_source_0 == 6'h16 | io_in_d_bits_source_0 == 6'h10
    | io_in_d_bits_source_0 == 6'h11 | io_in_d_bits_source_0 == 6'h12;	// src/main/scala/diplomacy/Parameters.scala:46:9, :54:{10,32}, src/main/scala/tilelink/Parameters.scala:1126:46
  wire         _GEN_0 = io_in_d_bits_opcode_0 == 3'h6;	// src/main/scala/tilelink/Monitor.scala:310:25
  wire         d_release_ack;	// src/main/scala/tilelink/Monitor.scala:670:46
  assign d_release_ack = _GEN_0;	// src/main/scala/tilelink/Monitor.scala:310:25, :670:46
  wire         d_release_ack_1;	// src/main/scala/tilelink/Monitor.scala:780:46
  assign d_release_ack_1 = _GEN_0;	// src/main/scala/tilelink/Monitor.scala:310:25, :780:46
  wire         _a_first_T_1 = io_in_a_ready_0 & io_in_a_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:52:35
  wire [12:0]  _a_first_beats1_decode_T_1 = 13'h3F << _GEN;	// src/main/scala/util/package.scala:235:71
  wire [2:0]   a_first_beats1_decode = ~(_a_first_beats1_decode_T_1[5:3]);	// src/main/scala/tilelink/Edges.scala:221:59, src/main/scala/util/package.scala:235:{46,71,76}
  wire         a_first_beats1_opdata = ~(io_in_a_bits_opcode_0[2]);	// src/main/scala/tilelink/Edges.scala:93:{28,37}
  wire [2:0]   a_first_beats1 = a_first_beats1_opdata ? a_first_beats1_decode : 3'h0;	// src/main/scala/tilelink/Edges.scala:93:28, :221:59, :222:14
  reg  [2:0]   a_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27
  wire [2:0]   a_first_counter1 = a_first_counter - 3'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire         a_first = a_first_counter == 3'h0;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire         a_first_last = a_first_counter == 3'h1 | a_first_beats1 == 3'h0;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27, :233:{25,33,43}
  wire         a_first_done = a_first_last & _a_first_T_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:233:33, :234:22
  wire [2:0]   a_first_count = a_first_beats1 & ~a_first_counter1;	// src/main/scala/tilelink/Edges.scala:222:14, :231:28, :235:{25,27}
  reg  [2:0]   opcode;	// src/main/scala/tilelink/Monitor.scala:384:22
  reg  [2:0]   param;	// src/main/scala/tilelink/Monitor.scala:385:22
  reg  [2:0]   size;	// src/main/scala/tilelink/Monitor.scala:386:22
  reg  [5:0]   source;	// src/main/scala/tilelink/Monitor.scala:387:22
  reg  [27:0]  address;	// src/main/scala/tilelink/Monitor.scala:388:22
  wire         _d_first_T_2 = io_in_d_ready_0 & io_in_d_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:52:35
  wire [12:0]  _GEN_1 = {10'h0, io_in_d_bits_size_0};	// src/main/scala/util/package.scala:235:71
  wire [12:0]  _d_first_beats1_decode_T_1 = 13'h3F << _GEN_1;	// src/main/scala/util/package.scala:235:71
  wire [2:0]   d_first_beats1_decode = ~(_d_first_beats1_decode_T_1[5:3]);	// src/main/scala/tilelink/Edges.scala:221:59, src/main/scala/util/package.scala:235:{46,71,76}
  wire         d_first_beats1_opdata = io_in_d_bits_opcode_0[0];	// src/main/scala/tilelink/Edges.scala:107:36
  wire         d_first_beats1_opdata_1 = io_in_d_bits_opcode_0[0];	// src/main/scala/tilelink/Edges.scala:107:36
  wire         d_first_beats1_opdata_2 = io_in_d_bits_opcode_0[0];	// src/main/scala/tilelink/Edges.scala:107:36
  wire [2:0]   d_first_beats1 = d_first_beats1_opdata ? d_first_beats1_decode : 3'h0;	// src/main/scala/tilelink/Edges.scala:107:36, :221:59, :222:14
  reg  [2:0]   d_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27
  wire [2:0]   d_first_counter1 = d_first_counter - 3'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire         d_first = d_first_counter == 3'h0;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire         d_first_last = d_first_counter == 3'h1 | d_first_beats1 == 3'h0;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27, :233:{25,33,43}
  wire         d_first_done = d_first_last & _d_first_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:233:33, :234:22
  wire [2:0]   d_first_count = d_first_beats1 & ~d_first_counter1;	// src/main/scala/tilelink/Edges.scala:222:14, :231:28, :235:{25,27}
  reg  [2:0]   opcode_1;	// src/main/scala/tilelink/Monitor.scala:535:22
  reg  [2:0]   size_1;	// src/main/scala/tilelink/Monitor.scala:537:22
  reg  [5:0]   source_1;	// src/main/scala/tilelink/Monitor.scala:538:22
  reg  [46:0]  inflight;	// src/main/scala/tilelink/Monitor.scala:611:27
  reg  [187:0] inflight_opcodes;	// src/main/scala/tilelink/Monitor.scala:613:35
  reg  [187:0] inflight_sizes;	// src/main/scala/tilelink/Monitor.scala:615:33
  wire [12:0]  _a_first_beats1_decode_T_5 = 13'h3F << _GEN;	// src/main/scala/util/package.scala:235:71
  wire [2:0]   a_first_beats1_decode_1 = ~(_a_first_beats1_decode_T_5[5:3]);	// src/main/scala/tilelink/Edges.scala:221:59, src/main/scala/util/package.scala:235:{46,71,76}
  wire         a_first_beats1_opdata_1 = ~(io_in_a_bits_opcode_0[2]);	// src/main/scala/tilelink/Edges.scala:93:{28,37}
  wire [2:0]   a_first_beats1_1 =
    a_first_beats1_opdata_1 ? a_first_beats1_decode_1 : 3'h0;	// src/main/scala/tilelink/Edges.scala:93:28, :221:59, :222:14
  reg  [2:0]   a_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27
  wire [2:0]   a_first_counter1_1 = a_first_counter_1 - 3'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire         a_first_1 = a_first_counter_1 == 3'h0;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire         a_first_last_1 = a_first_counter_1 == 3'h1 | a_first_beats1_1 == 3'h0;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27, :233:{25,33,43}
  wire         a_first_done_1 = a_first_last_1 & _a_first_T_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:233:33, :234:22
  wire [2:0]   a_first_count_1 = a_first_beats1_1 & ~a_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:222:14, :231:28, :235:{25,27}
  wire [12:0]  _d_first_beats1_decode_T_5 = 13'h3F << _GEN_1;	// src/main/scala/util/package.scala:235:71
  wire [2:0]   d_first_beats1_decode_1 = ~(_d_first_beats1_decode_T_5[5:3]);	// src/main/scala/tilelink/Edges.scala:221:59, src/main/scala/util/package.scala:235:{46,71,76}
  wire [2:0]   d_first_beats1_1 =
    d_first_beats1_opdata_1 ? d_first_beats1_decode_1 : 3'h0;	// src/main/scala/tilelink/Edges.scala:107:36, :221:59, :222:14
  reg  [2:0]   d_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27
  wire [2:0]   d_first_counter1_1 = d_first_counter_1 - 3'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire         d_first_1 = d_first_counter_1 == 3'h0;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire         d_first_last_1 = d_first_counter_1 == 3'h1 | d_first_beats1_1 == 3'h0;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27, :233:{25,33,43}
  wire         d_first_done_1 = d_first_last_1 & _d_first_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:233:33, :234:22
  wire [2:0]   d_first_count_1 = d_first_beats1_1 & ~d_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:222:14, :231:28, :235:{25,27}
  wire [187:0] _GEN_2 = {180'h0, io_in_d_bits_source_0, 2'h0};	// src/main/scala/tilelink/Monitor.scala:634:44
  wire [187:0] _a_opcode_lookup_T_1 = inflight_opcodes >> _GEN_2;	// src/main/scala/tilelink/Monitor.scala:613:35, :634:44
  wire [3:0]   a_opcode_lookup = {1'h0, _a_opcode_lookup_T_1[3:1]};	// src/main/scala/tilelink/Monitor.scala:632:35, :634:{21,44,152}
  wire [187:0] _a_size_lookup_T_1 = inflight_sizes >> _GEN_2;	// src/main/scala/tilelink/Monitor.scala:615:33, :634:44, :638:40
  wire [3:0]   a_size_lookup = {1'h0, _a_size_lookup_T_1[3:1]};	// src/main/scala/tilelink/Monitor.scala:636:33, :638:{19,40,144}
  wire         _same_cycle_resp_T_1 = io_in_a_valid_0 & a_first_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:648:26
  wire [63:0]  _GEN_3 = {58'h0, io_in_a_bits_source_0};	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [63:0]  _a_set_wo_ready_T = 64'h1 << _GEN_3;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [46:0]  a_set_wo_ready = _same_cycle_resp_T_1 ? _a_set_wo_ready_T[46:0] : 47'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:624:34, :648:{26,71}, :649:22
  wire         _GEN_4 = _a_first_T_1 & a_first_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:652:25
  wire [63:0]  _a_set_T = 64'h1 << _GEN_3;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [46:0]  a_set = _GEN_4 ? _a_set_T[46:0] : 47'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:623:34, :652:{25,70}, :653:28
  wire [3:0]   a_opcodes_set_interm = _GEN_4 ? {io_in_a_bits_opcode_0, 1'h1} : 4'h0;	// src/main/scala/tilelink/Monitor.scala:643:40, :652:{25,70}, :654:{28,61}
  wire [3:0]   a_sizes_set_interm = _GEN_4 ? {io_in_a_bits_size_0, 1'h1} : 4'h0;	// src/main/scala/tilelink/Monitor.scala:645:38, :652:{25,70}, :655:{28,59}
  wire [514:0] _GEN_5 = {507'h0, io_in_a_bits_source_0, 2'h0};	// src/main/scala/tilelink/Monitor.scala:656:54
  wire [514:0] _a_opcodes_set_T_1 = {511'h0, a_opcodes_set_interm} << _GEN_5;	// src/main/scala/tilelink/Monitor.scala:643:40, :656:54
  wire [187:0] a_opcodes_set = _GEN_4 ? _a_opcodes_set_T_1[187:0] : 188'h0;	// src/main/scala/tilelink/Monitor.scala:627:33, :652:{25,70}, :656:{28,54}
  wire [514:0] _a_sizes_set_T_1 = {511'h0, a_sizes_set_interm} << _GEN_5;	// src/main/scala/tilelink/Monitor.scala:645:38, :656:54, :657:52
  wire [187:0] a_sizes_set = _GEN_4 ? _a_sizes_set_T_1[187:0] : 188'h0;	// src/main/scala/tilelink/Monitor.scala:629:31, :652:{25,70}, :657:{28,52}
  wire         _GEN_6 = io_in_d_valid_0 & d_first_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:671:26
  wire         _GEN_7 = _GEN_6 & ~d_release_ack;	// src/main/scala/tilelink/Monitor.scala:670:46, :671:{26,71,74}
  wire [63:0]  _GEN_8 = {58'h0, io_in_d_bits_source_0};	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [63:0]  _d_clr_wo_ready_T = 64'h1 << _GEN_8;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [46:0]  d_clr_wo_ready = _GEN_7 ? _d_clr_wo_ready_T[46:0] : 47'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:662:34, :671:{71,90}, :672:22
  wire         _GEN_9 = _d_first_T_2 & d_first_1 & ~d_release_ack;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:670:46, :671:74, :675:{25,70}
  wire [63:0]  _d_clr_T = 64'h1 << _GEN_8;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [46:0]  d_clr = _GEN_9 ? _d_clr_T[46:0] : 47'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:661:34, :675:{25,70,89}, :676:21
  wire [526:0] _GEN_10 = {519'h0, io_in_d_bits_source_0, 2'h0};	// src/main/scala/tilelink/Monitor.scala:677:76
  wire [526:0] _d_opcodes_clr_T_5 = 527'hF << _GEN_10;	// src/main/scala/tilelink/Monitor.scala:677:76
  wire [187:0] d_opcodes_clr = _GEN_9 ? _d_opcodes_clr_T_5[187:0] : 188'h0;	// src/main/scala/tilelink/Monitor.scala:665:33, :675:{25,70,89}, :677:{21,76}
  wire [526:0] _d_sizes_clr_T_5 = 527'hF << _GEN_10;	// src/main/scala/tilelink/Monitor.scala:677:76, :678:74
  wire [187:0] d_sizes_clr = _GEN_9 ? _d_sizes_clr_T_5[187:0] : 188'h0;	// src/main/scala/tilelink/Monitor.scala:667:31, :675:{25,70,89}, :678:{21,74}
  wire         same_cycle_resp =
    _same_cycle_resp_T_1 & io_in_a_bits_source_0 == io_in_d_bits_source_0;	// src/main/scala/tilelink/Monitor.scala:648:26, :681:{88,113}
  reg  [31:0]  watchdog;	// src/main/scala/tilelink/Monitor.scala:706:27
  reg  [46:0]  inflight_1;	// src/main/scala/tilelink/Monitor.scala:723:35
  reg  [187:0] inflight_opcodes_1;	// src/main/scala/tilelink/Monitor.scala:724:35
  reg  [187:0] inflight_sizes_1;	// src/main/scala/tilelink/Monitor.scala:725:35
  wire [12:0]  _d_first_beats1_decode_T_9 = 13'h3F << _GEN_1;	// src/main/scala/util/package.scala:235:71
  wire [2:0]   d_first_beats1_decode_2 = ~(_d_first_beats1_decode_T_9[5:3]);	// src/main/scala/tilelink/Edges.scala:221:59, src/main/scala/util/package.scala:235:{46,71,76}
  wire [2:0]   d_first_beats1_2 =
    d_first_beats1_opdata_2 ? d_first_beats1_decode_2 : 3'h0;	// src/main/scala/tilelink/Edges.scala:107:36, :221:59, :222:14
  reg  [2:0]   d_first_counter_2;	// src/main/scala/tilelink/Edges.scala:230:27
  wire [2:0]   d_first_counter1_2 = d_first_counter_2 - 3'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire         d_first_2 = d_first_counter_2 == 3'h0;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire         d_first_last_2 = d_first_counter_2 == 3'h1 | d_first_beats1_2 == 3'h0;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27, :233:{25,33,43}
  wire         d_first_done_2 = d_first_last_2 & _d_first_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:233:33, :234:22
  wire [2:0]   d_first_count_2 = d_first_beats1_2 & ~d_first_counter1_2;	// src/main/scala/tilelink/Edges.scala:222:14, :231:28, :235:{25,27}
  wire [187:0] _c_opcode_lookup_T_1 = inflight_opcodes_1 >> _GEN_2;	// src/main/scala/tilelink/Monitor.scala:634:44, :724:35, :746:44
  wire [3:0]   c_opcode_lookup = {1'h0, _c_opcode_lookup_T_1[3:1]};	// src/main/scala/tilelink/Monitor.scala:744:35, :746:{21,44,152}
  wire [187:0] _c_size_lookup_T_1 = inflight_sizes_1 >> _GEN_2;	// src/main/scala/tilelink/Monitor.scala:634:44, :725:35, :747:42
  wire [3:0]   c_size_lookup = {1'h0, _c_size_lookup_T_1[3:1]};	// src/main/scala/tilelink/Monitor.scala:745:35, :747:{21,42,146}
  wire         _GEN_11 = io_in_d_valid_0 & d_first_2 & d_release_ack_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:780:46, :781:{26,71}
  wire [63:0]  _d_clr_wo_ready_T_1 = 64'h1 << _GEN_8;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [46:0]  d_clr_wo_ready_1 = _GEN_11 ? _d_clr_wo_ready_T_1[46:0] : 47'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:772:34, :781:{26,71,89}, :782:22
  wire         _GEN_12 = _d_first_T_2 & d_first_2 & d_release_ack_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:780:46, :785:{25,70}
  wire [63:0]  _d_clr_T_1 = 64'h1 << _GEN_8;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [46:0]  d_clr_1 = _GEN_12 ? _d_clr_T_1[46:0] : 47'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:771:34, :785:{25,70,88}, :786:21
  wire [526:0] _d_opcodes_clr_T_11 = 527'hF << _GEN_10;	// src/main/scala/tilelink/Monitor.scala:677:76, :787:76
  wire [187:0] d_opcodes_clr_1 = _GEN_12 ? _d_opcodes_clr_T_11[187:0] : 188'h0;	// src/main/scala/tilelink/Monitor.scala:773:34, :785:{25,70,88}, :787:{21,76}
  wire [526:0] _d_sizes_clr_T_11 = 527'hF << _GEN_10;	// src/main/scala/tilelink/Monitor.scala:677:76, :788:74
  wire [187:0] d_sizes_clr_1 = _GEN_12 ? _d_sizes_clr_T_11[187:0] : 188'h0;	// src/main/scala/tilelink/Monitor.scala:774:34, :785:{25,70,88}, :788:{21,74}
  reg  [31:0]  watchdog_1;	// src/main/scala/tilelink/Monitor.scala:815:27
  `ifndef SYNTHESIS	// src/main/scala/tilelink/Monitor.scala:42:11
    always @(posedge clock) begin	// src/main/scala/tilelink/Monitor.scala:42:11
      automatic logic [7:0][2:0] _GEN_13 =
        '{3'h4, 3'h5, 3'h2, 3'h1, 3'h1, 3'h1, 3'h0, 3'h0};
      automatic logic [7:0][2:0] _GEN_14 =
        '{3'h4, 3'h4, 3'h2, 3'h1, 3'h1, 3'h1, 3'h0, 3'h0};
      automatic logic            _GEN_15 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h6 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :81:{25,54}
      automatic logic            _GEN_16 = io_in_a_bits_size_0 == 3'h6;	// src/main/scala/diplomacy/Parameters.scala:91:44
      automatic logic            _GEN_17 =
        (_source_ok_T_12 & _GEN_16 | _source_ok_T_15 & _GEN_16 | _source_ok_T_18 & _GEN_16
         | _source_ok_T_21 & _GEN_16 | _source_ok_T_24 & _GEN_16 | _source_ok_T_27
         & _GEN_16 | _source_ok_T_30 & _GEN_16 | _source_ok_T_33 & _GEN_16)
        & (&(io_in_a_bits_address_0[27:26]));	// src/main/scala/chisel3/util/Mux.scala:30:73, src/main/scala/diplomacy/Parameters.scala:46:9, :91:44, :137:{41,46,59}, src/main/scala/tilelink/Monitor.scala:83:78
      automatic logic            _GEN_18 = io_in_a_bits_param_0 > 3'h2;	// src/main/scala/tilelink/Bundles.scala:111:27
      automatic logic            _GEN_19 = io_in_a_bits_mask_0 != 8'hFF;	// src/main/scala/tilelink/Monitor.scala:88:31
      automatic logic            _GEN_20 =
        io_in_a_valid_0 & (&io_in_a_bits_opcode_0) & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :92:{25,53}
      automatic logic            _GEN_21 =
        ~(|(io_in_a_bits_source_0[5:3])) | io_in_a_bits_source_0[5:3] == 3'h1
        | _source_ok_T_12 | _source_ok_T_13 | _source_ok_T_14 | _source_ok_T_15
        | _source_ok_T_16 | _source_ok_T_17 | _source_ok_T_18 | _source_ok_T_19
        | _source_ok_T_20 | _source_ok_T_21 | _source_ok_T_22 | _source_ok_T_23
        | _source_ok_T_24 | _source_ok_T_25 | _source_ok_T_26 | _source_ok_T_27
        | _source_ok_T_28 | _source_ok_T_29 | _source_ok_T_30 | _source_ok_T_31
        | _source_ok_T_32 | _source_ok_T_33 | _source_ok_T_34 | _source_ok_T_35;	// src/main/scala/diplomacy/Parameters.scala:46:9, :54:{10,32}, src/main/scala/tilelink/Parameters.scala:1162:43
      automatic logic            _GEN_22 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h4 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :104:{25,45}
      automatic logic            _GEN_23 =
        io_in_a_bits_size_0 != 3'h7 & (&(io_in_a_bits_address_0[27:26]));	// src/main/scala/diplomacy/Parameters.scala:92:38, :137:{41,46,59}, src/main/scala/tilelink/Parameters.scala:671:54
      automatic logic            _GEN_24 = io_in_a_bits_mask_0 != mask;	// src/main/scala/tilelink/Monitor.scala:110:30, src/main/scala/util/Misc.scala:222:10
      automatic logic            _GEN_25 = _GEN_21 & _GEN_23;	// src/main/scala/tilelink/Monitor.scala:115:71, src/main/scala/tilelink/Parameters.scala:671:54, :1162:43
      automatic logic            _GEN_26 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h0 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :114:{25,53}
      automatic logic            _GEN_27 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h1 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :122:{25,56}
      automatic logic            _GEN_28 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h2 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :130:{25,56}
      automatic logic            _GEN_29 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h3 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :138:{25,53}
      automatic logic            _GEN_30 =
        io_in_a_valid_0 & io_in_a_bits_opcode_0 == 3'h5 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :146:{25,46}
      automatic logic            _GEN_31 = io_in_d_valid_0 & _GEN_0 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :310:{25,52}
      automatic logic            _GEN_32 = io_in_d_bits_size_0 < 3'h3;	// src/main/scala/tilelink/Monitor.scala:312:27
      automatic logic            _GEN_33 =
        io_in_d_valid_0 & io_in_d_bits_opcode_0 == 3'h4 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :318:{25,47}
      automatic logic            _GEN_34 =
        io_in_d_valid_0 & io_in_d_bits_opcode_0 == 3'h5 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :328:{25,51}
      automatic logic            _GEN_35 = io_in_a_valid_0 & ~a_first & ~reset;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :389:{19,22}
      automatic logic            _GEN_36 = io_in_d_valid_0 & ~d_first & ~reset;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :541:{19,22}
      automatic logic [46:0]     _GEN_37 = {41'h0, io_in_d_bits_source_0};	// src/main/scala/tilelink/Monitor.scala:658:26, :682:25
      automatic logic            _GEN_38 = _GEN_7 & same_cycle_resp & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:71, :681:88, :684:30
      automatic logic            _GEN_39 = _GEN_7 & ~same_cycle_resp & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:71, :681:88, :684:30
      automatic logic [3:0]      _GEN_40 = {1'h0, io_in_d_bits_size_0};	// src/main/scala/tilelink/Monitor.scala:691:36
      automatic logic            _GEN_41 = _GEN_11 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :781:{26,71}
      automatic logic [46:0]     _GEN_42;	// src/main/scala/tilelink/Monitor.scala:658:26
      automatic logic [46:0]     _GEN_43;	// src/main/scala/tilelink/Monitor.scala:682:25
      automatic logic [46:0]     _GEN_44;	// src/main/scala/tilelink/Monitor.scala:793:25
      if (_GEN_15) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :81:54
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquireBlock type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & ~_GEN_17) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :81:54, :83:78
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquireBlock from a client which does not support Probe (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & ~source_ok) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :81:54, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & ~_mask_T) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :81:54, src/main/scala/util/Misc.scala:206:21
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock smaller than a beat (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :81:54
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & _GEN_18) begin	// src/main/scala/tilelink/Bundles.scala:111:27, src/main/scala/tilelink/Monitor.scala:42:11, :81:54
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock carries invalid grow param (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & _GEN_19) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :81:54, :88:31
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_15 & io_in_a_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :81:54
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock is corrupt (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquirePerm type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & ~_GEN_17) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :83:78, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquirePerm from a client which does not support Probe (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & ~source_ok) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :92:53, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & ~_mask_T) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :92:53, src/main/scala/util/Misc.scala:206:21
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm smaller than a beat (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & _GEN_18) begin	// src/main/scala/tilelink/Bundles.scala:111:27, src/main/scala/tilelink/Monitor.scala:42:11, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm carries invalid grow param (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & ~(|io_in_a_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :92:53, :99:31
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm requests NtoB (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & _GEN_19) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :88:31, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & io_in_a_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :92:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm is corrupt (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & ~_GEN_21) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :104:45, src/main/scala/tilelink/Parameters.scala:1162:43
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Get type which master claims it can't emit (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & ~_GEN_23) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :104:45, src/main/scala/tilelink/Parameters.scala:671:54
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Get type which slave claims it can't support (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & ~source_ok) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :104:45, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :104:45
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & (|io_in_a_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :99:31, :104:45
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get carries invalid param (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & _GEN_24) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :104:45, :110:30
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & io_in_a_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :104:45
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get is corrupt (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_26 & ~_GEN_25) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :114:53, :115:71
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries PutFull type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_26 & ~source_ok) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :114:53, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_26 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :114:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_26 & (|io_in_a_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :99:31, :114:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull carries invalid param (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_26 & _GEN_24) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30, :114:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_27 & ~_GEN_25) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :115:71, :122:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries PutPartial type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_27 & ~source_ok) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :122:56, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_27 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :122:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_27 & (|io_in_a_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :99:31, :122:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial carries invalid param (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_27 & (|(io_in_a_bits_mask_0 & ~mask))) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :122:56, :127:{31,33,40}, src/main/scala/util/Misc.scala:222:10
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_28) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :130:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Arithmetic type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_28 & ~source_ok) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :130:56, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_28 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :130:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_28 & io_in_a_bits_param_0 > 3'h4) begin	// src/main/scala/tilelink/Bundles.scala:141:33, src/main/scala/tilelink/Monitor.scala:42:11, :130:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic carries invalid opcode param (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_28 & _GEN_24) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30, :130:56
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_29) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :138:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Logical type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_29 & ~source_ok) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :138:53, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_29 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :138:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_29 & io_in_a_bits_param_0[2]) begin	// src/main/scala/tilelink/Bundles.scala:148:30, src/main/scala/tilelink/Monitor.scala:42:11, :138:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical carries invalid opcode param (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_29 & _GEN_24) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30, :138:53
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_30) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Hint type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_30 & ~source_ok) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :146:46, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_30 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_30 & (|(io_in_a_bits_param_0[2:1]))) begin	// src/main/scala/tilelink/Bundles.scala:161:28, src/main/scala/tilelink/Monitor.scala:42:11, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint carries invalid opcode param (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_30 & _GEN_24) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_30 & io_in_a_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :146:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint is corrupt (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (io_in_d_valid_0 & ~reset & (&io_in_d_bits_opcode_0)) begin	// src/main/scala/tilelink/Bundles.scala:45:24, src/main/scala/tilelink/Monitor.scala:42:11, :49:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel has invalid opcode (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_31 & ~source_ok_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :310:52, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel ReleaseAck carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_31 & _GEN_32) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :310:52, :312:27
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel ReleaseAck smaller than a beat (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_33 & ~source_ok_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :318:47, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel Grant carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_33) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :318:47
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel Grant carries invalid sink ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_33 & _GEN_32) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :312:27, :318:47
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel Grant smaller than a beat (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_34 & ~source_ok_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :328:51, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel GrantData carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_34) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :328:51
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel GrantData carries invalid sink ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_34 & _GEN_32) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :312:27, :328:51
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel GrantData smaller than a beat (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (io_in_d_valid_0 & io_in_d_bits_opcode_0 == 3'h0 & ~reset & ~source_ok_1) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :338:{25,51}, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel AccessAck carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (io_in_d_valid_0 & io_in_d_bits_opcode_0 == 3'h1 & ~reset & ~source_ok_1) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :346:{25,55}, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel AccessAckData carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (io_in_d_valid_0 & io_in_d_bits_opcode_0 == 3'h2 & ~reset & ~source_ok_1) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :354:{25,49}, src/main/scala/tilelink/Parameters.scala:1126:46
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel HintAck carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_35 & io_in_a_bits_opcode_0 != opcode) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :384:22, :389:19, :390:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel opcode changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_35 & io_in_a_bits_param_0 != param) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :385:22, :389:19, :391:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel param changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_35 & io_in_a_bits_size_0 != size) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :386:22, :389:19, :392:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel size changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_35 & io_in_a_bits_source_0 != source) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :387:22, :389:19, :393:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel source changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_35 & io_in_a_bits_address_0 != address) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :388:22, :389:19, :394:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel address changed with multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_36 & io_in_d_bits_opcode_0 != opcode_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :535:22, :541:19, :542:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel opcode changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_36 & io_in_d_bits_size_0 != size_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :537:22, :541:19, :544:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel size changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_36 & io_in_d_bits_source_0 != source_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :538:22, :541:19, :545:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel source changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      _GEN_42 = inflight >> io_in_a_bits_source_0;	// src/main/scala/tilelink/Monitor.scala:611:27, :658:26
      if (_GEN_4 & ~reset & _GEN_42[0]) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :652:25, :658:26
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel re-used a source ID (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      _GEN_43 = inflight >> _GEN_37;	// src/main/scala/tilelink/Monitor.scala:611:27, :682:25
      if (_GEN_7 & ~reset & ~(_GEN_43[0] | same_cycle_resp)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:71, :681:88, :682:{25,49}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel acknowledged for nothing inflight (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_38
          & ~(io_in_d_bits_opcode_0 == _GEN_14[io_in_a_bits_opcode_0]
              | io_in_d_bits_opcode_0 == _GEN_13[io_in_a_bits_opcode_0])) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :684:30, :685:{38,77}, :686:39
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper opcode response (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_38 & io_in_a_bits_size_0 != io_in_d_bits_size_0) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :684:30, :687:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_39
          & ~(io_in_d_bits_opcode_0 == _GEN_14[a_opcode_lookup[2:0]]
              | io_in_d_bits_opcode_0 == _GEN_13[a_opcode_lookup[2:0]])) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :632:35, :684:30, :689:{38,72}, :690:38
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper opcode response (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_39 & _GEN_40 != a_size_lookup) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :636:33, :684:30, :691:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_6 & a_first_1 & io_in_a_valid_0
          & io_in_a_bits_source_0 == io_in_d_bits_source_0 & ~d_release_ack & ~reset
          & ~(~io_in_d_ready_0 | io_in_a_ready_0)) begin	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :670:46, :671:{26,74}, :694:{36,47,65,90,116}, :695:{15,32}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: ready check\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (~reset & ~(a_set_wo_ready != d_clr_wo_ready | a_set_wo_ready == 47'h0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :624:34, :662:34, :699:{29,48,67}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'A' and 'D' concurrent, despite minlatency 1 (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (~reset
          & ~(inflight == 47'h0 | _plusarg_reader_out == 32'h0
              | watchdog < _plusarg_reader_out)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :611:27, :706:27, :709:{26,30,39,47,59}, src/main/scala/util/PlusArg.scala:80:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: TileLink timeout expired (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      _GEN_44 = inflight_1 >> _GEN_37;	// src/main/scala/tilelink/Monitor.scala:682:25, :723:35, :793:25
      if (_GEN_41 & ~(_GEN_44[0])) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :793:25
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel acknowledged for nothing inflight (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_41 & _GEN_40 != c_size_lookup) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :691:36, :745:35, :797:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (~reset
          & ~(inflight_1 == 47'h0 | _plusarg_reader_1_out == 32'h0
              | watchdog_1 < _plusarg_reader_1_out)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :723:35, :815:27, :818:{26,30,39,47,59}, src/main/scala/util/PlusArg.scala:80:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: TileLink timeout expired (connected at src/main/scala/devices/tilelink/Plic.scala:364:63)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  always @(posedge clock) begin
    if (reset) begin
      a_first_counter <= 3'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      d_first_counter <= 3'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      inflight <= 47'h0;	// src/main/scala/tilelink/Monitor.scala:611:27
      inflight_opcodes <= 188'h0;	// src/main/scala/tilelink/Monitor.scala:613:35
      inflight_sizes <= 188'h0;	// src/main/scala/tilelink/Monitor.scala:615:33
      a_first_counter_1 <= 3'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      d_first_counter_1 <= 3'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      watchdog <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:706:27
      inflight_1 <= 47'h0;	// src/main/scala/tilelink/Monitor.scala:723:35
      inflight_opcodes_1 <= 188'h0;	// src/main/scala/tilelink/Monitor.scala:724:35
      inflight_sizes_1 <= 188'h0;	// src/main/scala/tilelink/Monitor.scala:725:35
      d_first_counter_2 <= 3'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      watchdog_1 <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:815:27
    end
    else begin
      if (_a_first_T_1) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35
        if (a_first)	// src/main/scala/tilelink/Edges.scala:232:25
          a_first_counter <= a_first_beats1;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27
        else	// src/main/scala/tilelink/Edges.scala:232:25
          a_first_counter <= a_first_counter1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
        if (a_first_1)	// src/main/scala/tilelink/Edges.scala:232:25
          a_first_counter_1 <= a_first_beats1_1;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27
        else	// src/main/scala/tilelink/Edges.scala:232:25
          a_first_counter_1 <= a_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
      end
      if (_d_first_T_2) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35
        if (d_first)	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter <= d_first_beats1;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27
        else	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter <= d_first_counter1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
        if (d_first_1)	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter_1 <= d_first_beats1_1;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27
        else	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter_1 <= d_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
        if (d_first_2)	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter_2 <= d_first_beats1_2;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27
        else	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter_2 <= d_first_counter1_2;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
        watchdog_1 <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:815:27
      end
      else	// src/main/scala/chisel3/util/Decoupled.scala:52:35
        watchdog_1 <= watchdog_1 + 32'h1;	// src/main/scala/tilelink/Monitor.scala:815:27, :820:26
      inflight <= (inflight | a_set) & ~d_clr;	// src/main/scala/tilelink/Monitor.scala:611:27, :623:34, :661:34, :702:{27,36,38}
      inflight_opcodes <= (inflight_opcodes | a_opcodes_set) & ~d_opcodes_clr;	// src/main/scala/tilelink/Monitor.scala:613:35, :627:33, :665:33, :703:{43,60,62}
      inflight_sizes <= (inflight_sizes | a_sizes_set) & ~d_sizes_clr;	// src/main/scala/tilelink/Monitor.scala:615:33, :629:31, :667:31, :704:{39,54,56}
      if (_a_first_T_1 | _d_first_T_2)	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Monitor.scala:712:25
        watchdog <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:706:27
      else	// src/main/scala/tilelink/Monitor.scala:712:25
        watchdog <= watchdog + 32'h1;	// src/main/scala/tilelink/Monitor.scala:706:27, :711:26
      inflight_1 <= inflight_1 & ~d_clr_1;	// src/main/scala/tilelink/Monitor.scala:723:35, :771:34, :811:{44,46}
      inflight_opcodes_1 <= inflight_opcodes_1 & ~d_opcodes_clr_1;	// src/main/scala/tilelink/Monitor.scala:724:35, :773:34, :812:{60,62}
      inflight_sizes_1 <= inflight_sizes_1 & ~d_sizes_clr_1;	// src/main/scala/tilelink/Monitor.scala:725:35, :774:34, :813:{56,58}
    end
    if (_a_first_T_1 & a_first) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:396:18
      opcode <= io_in_a_bits_opcode_0;	// src/main/scala/tilelink/Monitor.scala:384:22
      param <= io_in_a_bits_param_0;	// src/main/scala/tilelink/Monitor.scala:385:22
      size <= io_in_a_bits_size_0;	// src/main/scala/tilelink/Monitor.scala:386:22
      source <= io_in_a_bits_source_0;	// src/main/scala/tilelink/Monitor.scala:387:22
      address <= io_in_a_bits_address_0;	// src/main/scala/tilelink/Monitor.scala:388:22
    end
    if (_d_first_T_2 & d_first) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:549:18
      opcode_1 <= io_in_d_bits_opcode_0;	// src/main/scala/tilelink/Monitor.scala:535:22
      size_1 <= io_in_d_bits_size_0;	// src/main/scala/tilelink/Monitor.scala:537:22
      source_1 <= io_in_d_bits_source_0;	// src/main/scala/tilelink/Monitor.scala:538:22
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin
      automatic logic [31:0] _RANDOM[0:30];
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [4:0] i = 5'h0; i < 5'h1F; i += 5'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        a_first_counter = _RANDOM[5'h0][2:0];	// src/main/scala/tilelink/Edges.scala:230:27
        opcode = _RANDOM[5'h0][5:3];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:384:22
        param = _RANDOM[5'h0][8:6];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:385:22
        size = _RANDOM[5'h0][11:9];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:386:22
        source = _RANDOM[5'h0][17:12];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:387:22
        address = {_RANDOM[5'h0][31:18], _RANDOM[5'h1][13:0]};	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:388:22
        d_first_counter = _RANDOM[5'h1][16:14];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:388:22
        opcode_1 = _RANDOM[5'h1][19:17];	// src/main/scala/tilelink/Monitor.scala:388:22, :535:22
        size_1 = _RANDOM[5'h1][24:22];	// src/main/scala/tilelink/Monitor.scala:388:22, :537:22
        source_1 = _RANDOM[5'h1][30:25];	// src/main/scala/tilelink/Monitor.scala:388:22, :538:22
        inflight = {_RANDOM[5'h2][31:1], _RANDOM[5'h3][15:0]};	// src/main/scala/tilelink/Monitor.scala:611:27
        inflight_opcodes =
          {_RANDOM[5'h3][31:16],
           _RANDOM[5'h4],
           _RANDOM[5'h5],
           _RANDOM[5'h6],
           _RANDOM[5'h7],
           _RANDOM[5'h8],
           _RANDOM[5'h9][11:0]};	// src/main/scala/tilelink/Monitor.scala:611:27, :613:35
        inflight_sizes =
          {_RANDOM[5'h9][31:12],
           _RANDOM[5'hA],
           _RANDOM[5'hB],
           _RANDOM[5'hC],
           _RANDOM[5'hD],
           _RANDOM[5'hE],
           _RANDOM[5'hF][7:0]};	// src/main/scala/tilelink/Monitor.scala:613:35, :615:33
        a_first_counter_1 = _RANDOM[5'hF][10:8];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:615:33
        d_first_counter_1 = _RANDOM[5'hF][13:11];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:615:33
        watchdog = {_RANDOM[5'hF][31:14], _RANDOM[5'h10][13:0]};	// src/main/scala/tilelink/Monitor.scala:615:33, :706:27
        inflight_1 = {_RANDOM[5'h10][31:14], _RANDOM[5'h11][28:0]};	// src/main/scala/tilelink/Monitor.scala:706:27, :723:35
        inflight_opcodes_1 =
          {_RANDOM[5'h11][31:29],
           _RANDOM[5'h12],
           _RANDOM[5'h13],
           _RANDOM[5'h14],
           _RANDOM[5'h15],
           _RANDOM[5'h16],
           _RANDOM[5'h17][24:0]};	// src/main/scala/tilelink/Monitor.scala:723:35, :724:35
        inflight_sizes_1 =
          {_RANDOM[5'h17][31:25],
           _RANDOM[5'h18],
           _RANDOM[5'h19],
           _RANDOM[5'h1A],
           _RANDOM[5'h1B],
           _RANDOM[5'h1C],
           _RANDOM[5'h1D][20:0]};	// src/main/scala/tilelink/Monitor.scala:724:35, :725:35
        d_first_counter_2 = _RANDOM[5'h1D][26:24];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:725:35
        watchdog_1 = {_RANDOM[5'h1D][31:27], _RANDOM[5'h1E][26:0]};	// src/main/scala/tilelink/Monitor.scala:725:35, :815:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  plusarg_reader #(
    .DEFAULT(0),
    .FORMAT("tilelink_timeout=%d"),
    .WIDTH(32)
  ) plusarg_reader (	// src/main/scala/util/PlusArg.scala:80:11
    .out (_plusarg_reader_out)
  );	// src/main/scala/util/PlusArg.scala:80:11
  plusarg_reader #(
    .DEFAULT(0),
    .FORMAT("tilelink_timeout=%d"),
    .WIDTH(32)
  ) plusarg_reader_1 (	// src/main/scala/util/PlusArg.scala:80:11
    .out (_plusarg_reader_1_out)
  );	// src/main/scala/util/PlusArg.scala:80:11
endmodule


// Generated by CIRCT firtool-1.66.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module PeripheryBus(
  input  auto_subsystem_pbus_clock_groups_in_member_subsystem_pbus_0_clock,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_subsystem_pbus_clock_groups_in_member_subsystem_pbus_0_reset,	// src/main/scala/diplomacy/LazyModule.scala:374:18
  output clock,	// src/main/scala/prci/ClockDomain.scala:17:19
         reset	// src/main/scala/prci/ClockDomain.scala:18:19
);

  wire fixedClockNode_auto_out_reset;
  wire fixedClockNode_auto_out_clock;
  wire clockGroup_auto_out_reset;
  wire clockGroup_auto_out_clock;
  wire subsystem_pbus_clock_groups_auto_out_member_subsystem_pbus_0_reset;
  wire subsystem_pbus_clock_groups_auto_out_member_subsystem_pbus_0_clock;
  wire auto_subsystem_pbus_clock_groups_in_member_subsystem_pbus_0_clock_0 =
    auto_subsystem_pbus_clock_groups_in_member_subsystem_pbus_0_clock;
  wire auto_subsystem_pbus_clock_groups_in_member_subsystem_pbus_0_reset_0 =
    auto_subsystem_pbus_clock_groups_in_member_subsystem_pbus_0_reset;
  wire subsystem_pbus_clock_groups_childClock = 1'h0;	// src/main/scala/diplomacy/LazyModule.scala:419:31
  wire subsystem_pbus_clock_groups_childReset = 1'h0;	// src/main/scala/diplomacy/LazyModule.scala:421:31
  wire clockGroup_childClock = 1'h0;	// src/main/scala/diplomacy/LazyModule.scala:419:31
  wire clockGroup_childReset = 1'h0;	// src/main/scala/diplomacy/LazyModule.scala:421:31
  wire fixedClockNode_childClock = 1'h0;	// src/main/scala/diplomacy/LazyModule.scala:419:31
  wire fixedClockNode_childReset = 1'h0;	// src/main/scala/diplomacy/LazyModule.scala:421:31
  wire subsystem_pbus_clock_groups_auto_in_member_subsystem_pbus_0_clock =
    auto_subsystem_pbus_clock_groups_in_member_subsystem_pbus_0_clock_0;
  wire subsystem_pbus_clock_groups_auto_in_member_subsystem_pbus_0_reset =
    auto_subsystem_pbus_clock_groups_in_member_subsystem_pbus_0_reset_0;
  wire clockSinkNodeIn_clock;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire clockSinkNodeIn_reset;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire subsystem_pbus_clock_groups_nodeIn_member_subsystem_pbus_0_clock =
    subsystem_pbus_clock_groups_auto_in_member_subsystem_pbus_0_clock;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire subsystem_pbus_clock_groups_nodeOut_member_subsystem_pbus_0_clock;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire subsystem_pbus_clock_groups_nodeIn_member_subsystem_pbus_0_reset =
    subsystem_pbus_clock_groups_auto_in_member_subsystem_pbus_0_reset;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire subsystem_pbus_clock_groups_nodeOut_member_subsystem_pbus_0_reset;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire clockGroup_auto_in_member_subsystem_sbus_0_clock =
    subsystem_pbus_clock_groups_auto_out_member_subsystem_pbus_0_clock;
  wire clockGroup_auto_in_member_subsystem_sbus_0_reset =
    subsystem_pbus_clock_groups_auto_out_member_subsystem_pbus_0_reset;
  assign subsystem_pbus_clock_groups_auto_out_member_subsystem_pbus_0_clock =
    subsystem_pbus_clock_groups_nodeOut_member_subsystem_pbus_0_clock;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  assign subsystem_pbus_clock_groups_auto_out_member_subsystem_pbus_0_reset =
    subsystem_pbus_clock_groups_nodeOut_member_subsystem_pbus_0_reset;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  assign subsystem_pbus_clock_groups_nodeOut_member_subsystem_pbus_0_clock =
    subsystem_pbus_clock_groups_nodeIn_member_subsystem_pbus_0_clock;	// src/main/scala/diplomacy/Nodes.scala:1205:17, :1214:17
  assign subsystem_pbus_clock_groups_nodeOut_member_subsystem_pbus_0_reset =
    subsystem_pbus_clock_groups_nodeIn_member_subsystem_pbus_0_reset;	// src/main/scala/diplomacy/Nodes.scala:1205:17, :1214:17
  wire clockGroup_nodeIn_member_subsystem_sbus_0_clock =
    clockGroup_auto_in_member_subsystem_sbus_0_clock;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire clockGroup_nodeOut_clock;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire clockGroup_nodeIn_member_subsystem_sbus_0_reset =
    clockGroup_auto_in_member_subsystem_sbus_0_reset;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire clockGroup_nodeOut_reset;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire fixedClockNode_auto_in_clock = clockGroup_auto_out_clock;
  wire fixedClockNode_auto_in_reset = clockGroup_auto_out_reset;
  assign clockGroup_auto_out_clock = clockGroup_nodeOut_clock;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  assign clockGroup_auto_out_reset = clockGroup_nodeOut_reset;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  assign clockGroup_nodeOut_clock = clockGroup_nodeIn_member_subsystem_sbus_0_clock;	// src/main/scala/diplomacy/Nodes.scala:1205:17, :1214:17
  assign clockGroup_nodeOut_reset = clockGroup_nodeIn_member_subsystem_sbus_0_reset;	// src/main/scala/diplomacy/Nodes.scala:1205:17, :1214:17
  wire fixedClockNode_nodeIn_clock = fixedClockNode_auto_in_clock;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire fixedClockNode_nodeOut_clock;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire fixedClockNode_nodeIn_reset = fixedClockNode_auto_in_reset;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire fixedClockNode_nodeOut_reset;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  assign clockSinkNodeIn_clock = fixedClockNode_auto_out_clock;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  assign clockSinkNodeIn_reset = fixedClockNode_auto_out_reset;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  assign fixedClockNode_auto_out_clock = fixedClockNode_nodeOut_clock;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  assign fixedClockNode_auto_out_reset = fixedClockNode_nodeOut_reset;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  assign fixedClockNode_nodeOut_clock = fixedClockNode_nodeIn_clock;	// src/main/scala/diplomacy/Nodes.scala:1205:17, :1214:17
  assign fixedClockNode_nodeOut_reset = fixedClockNode_nodeIn_reset;	// src/main/scala/diplomacy/Nodes.scala:1205:17, :1214:17
  wire childClock = clockSinkNodeIn_clock;	// src/main/scala/diplomacy/LazyModule.scala:419:31, src/main/scala/diplomacy/Nodes.scala:1214:17
  wire childReset = clockSinkNodeIn_reset;	// src/main/scala/diplomacy/LazyModule.scala:421:31, src/main/scala/diplomacy/Nodes.scala:1214:17
  assign clock = clockSinkNodeIn_clock;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  assign reset = clockSinkNodeIn_reset;	// src/main/scala/diplomacy/Nodes.scala:1214:17
endmodule


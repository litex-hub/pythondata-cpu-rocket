// Generated by CIRCT firtool-1.66.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module IntSyncAsyncCrossingSink(
  input  clock,
         auto_in_sync_0,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_in_sync_1,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_in_sync_2,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_in_sync_3,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_in_sync_4,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_in_sync_5,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_in_sync_6,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_in_sync_7,	// src/main/scala/diplomacy/LazyModule.scala:374:18
  output auto_out_0,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_out_1,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_out_2,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_out_3,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_out_4,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_out_5,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_out_6,	// src/main/scala/diplomacy/LazyModule.scala:374:18
         auto_out_7	// src/main/scala/diplomacy/LazyModule.scala:374:18
);

  wire [7:0] _chain_io_q;	// src/main/scala/util/ShiftReg.scala:45:23
  wire       auto_in_sync_0_0 = auto_in_sync_0;
  wire       auto_in_sync_1_0 = auto_in_sync_1;
  wire       auto_in_sync_2_0 = auto_in_sync_2;
  wire       auto_in_sync_3_0 = auto_in_sync_3;
  wire       auto_in_sync_4_0 = auto_in_sync_4;
  wire       auto_in_sync_5_0 = auto_in_sync_5;
  wire       auto_in_sync_6_0 = auto_in_sync_6;
  wire       auto_in_sync_7_0 = auto_in_sync_7;
  wire       nodeIn_sync_0 = auto_in_sync_0_0;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire       nodeIn_sync_1 = auto_in_sync_1_0;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire       nodeIn_sync_2 = auto_in_sync_2_0;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire       nodeIn_sync_3 = auto_in_sync_3_0;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire       nodeIn_sync_4 = auto_in_sync_4_0;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire       nodeIn_sync_5 = auto_in_sync_5_0;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire       nodeIn_sync_6 = auto_in_sync_6_0;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire       nodeIn_sync_7 = auto_in_sync_7_0;	// src/main/scala/diplomacy/Nodes.scala:1214:17
  wire       nodeOut_0;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       nodeOut_1;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       nodeOut_2;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       nodeOut_3;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       nodeOut_4;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       nodeOut_5;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       nodeOut_6;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       nodeOut_7;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       auto_out_0_0 = nodeOut_0;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       auto_out_1_0 = nodeOut_1;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       auto_out_2_0 = nodeOut_2;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       auto_out_3_0 = nodeOut_3;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       auto_out_4_0 = nodeOut_4;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       auto_out_5_0 = nodeOut_5;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       auto_out_6_0 = nodeOut_6;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire       auto_out_7_0 = nodeOut_7;	// src/main/scala/diplomacy/Nodes.scala:1205:17
  wire [1:0] chain_io_d_lo_lo = {nodeIn_sync_1, nodeIn_sync_0};	// src/main/scala/diplomacy/Nodes.scala:1214:17, src/main/scala/util/ShiftReg.scala:47:22
  wire [1:0] chain_io_d_lo_hi = {nodeIn_sync_3, nodeIn_sync_2};	// src/main/scala/diplomacy/Nodes.scala:1214:17, src/main/scala/util/ShiftReg.scala:47:22
  wire [3:0] chain_io_d_lo = {chain_io_d_lo_hi, chain_io_d_lo_lo};	// src/main/scala/util/ShiftReg.scala:47:22
  wire [1:0] chain_io_d_hi_lo = {nodeIn_sync_5, nodeIn_sync_4};	// src/main/scala/diplomacy/Nodes.scala:1214:17, src/main/scala/util/ShiftReg.scala:47:22
  wire [1:0] chain_io_d_hi_hi = {nodeIn_sync_7, nodeIn_sync_6};	// src/main/scala/diplomacy/Nodes.scala:1214:17, src/main/scala/util/ShiftReg.scala:47:22
  wire [3:0] chain_io_d_hi = {chain_io_d_hi_hi, chain_io_d_hi_lo};	// src/main/scala/util/ShiftReg.scala:47:22
  assign nodeOut_0 = _chain_io_q[0];	// src/main/scala/diplomacy/Nodes.scala:1205:17, src/main/scala/util/ShiftReg.scala:45:23, :48:24
  assign nodeOut_1 = _chain_io_q[1];	// src/main/scala/diplomacy/Nodes.scala:1205:17, src/main/scala/util/ShiftReg.scala:45:23, :48:24
  assign nodeOut_2 = _chain_io_q[2];	// src/main/scala/diplomacy/Nodes.scala:1205:17, src/main/scala/util/ShiftReg.scala:45:23, :48:24
  assign nodeOut_3 = _chain_io_q[3];	// src/main/scala/diplomacy/Nodes.scala:1205:17, src/main/scala/util/ShiftReg.scala:45:23, :48:24
  assign nodeOut_4 = _chain_io_q[4];	// src/main/scala/diplomacy/Nodes.scala:1205:17, src/main/scala/util/ShiftReg.scala:45:23, :48:24
  assign nodeOut_5 = _chain_io_q[5];	// src/main/scala/diplomacy/Nodes.scala:1205:17, src/main/scala/util/ShiftReg.scala:45:23, :48:24
  assign nodeOut_6 = _chain_io_q[6];	// src/main/scala/diplomacy/Nodes.scala:1205:17, src/main/scala/util/ShiftReg.scala:45:23, :48:24
  assign nodeOut_7 = _chain_io_q[7];	// src/main/scala/diplomacy/Nodes.scala:1205:17, src/main/scala/util/ShiftReg.scala:45:23, :48:24
  SynchronizerShiftReg_w8_d3 chain (	// src/main/scala/util/ShiftReg.scala:45:23
    .clock (clock),
    .io_d  ({chain_io_d_hi, chain_io_d_lo}),	// src/main/scala/util/ShiftReg.scala:47:22
    .io_q  (_chain_io_q)
  );	// src/main/scala/util/ShiftReg.scala:45:23
  assign auto_out_0 = auto_out_0_0;
  assign auto_out_1 = auto_out_1_0;
  assign auto_out_2 = auto_out_2_0;
  assign auto_out_3 = auto_out_3_0;
  assign auto_out_4 = auto_out_4_0;
  assign auto_out_5 = auto_out_5_0;
  assign auto_out_6 = auto_out_6_0;
  assign auto_out_7 = auto_out_7_0;
endmodule


// Generated by CIRCT firtool-1.66.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TLMonitor_39(
  input        clock,
               reset,
               io_in_a_ready,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_a_valid,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [31:0] io_in_a_bits_address,	// src/main/scala/tilelink/Monitor.scala:17:14
  input        io_in_d_valid,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [2:0]  io_in_d_bits_opcode,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [1:0]  io_in_d_bits_param,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [3:0]  io_in_d_bits_size,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [1:0]  io_in_d_bits_sink,	// src/main/scala/tilelink/Monitor.scala:17:14
  input        io_in_d_bits_denied,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [63:0] io_in_d_bits_data,	// src/main/scala/tilelink/Monitor.scala:17:14
  input        io_in_d_bits_corrupt	// src/main/scala/tilelink/Monitor.scala:17:14
);

  wire [31:0] _plusarg_reader_1_out;	// src/main/scala/util/PlusArg.scala:80:11
  wire [31:0] _plusarg_reader_out;	// src/main/scala/util/PlusArg.scala:80:11
  wire        io_in_a_ready_0 = io_in_a_ready;
  wire        io_in_a_valid_0 = io_in_a_valid;
  wire [31:0] io_in_a_bits_address_0 = io_in_a_bits_address;
  wire        io_in_d_valid_0 = io_in_d_valid;
  wire [2:0]  io_in_d_bits_opcode_0 = io_in_d_bits_opcode;
  wire [1:0]  io_in_d_bits_param_0 = io_in_d_bits_param;
  wire [3:0]  io_in_d_bits_size_0 = io_in_d_bits_size;
  wire [1:0]  io_in_d_bits_sink_0 = io_in_d_bits_sink;
  wire        io_in_d_bits_denied_0 = io_in_d_bits_denied;
  wire [63:0] io_in_d_bits_data_0 = io_in_d_bits_data;
  wire        io_in_d_bits_corrupt_0 = io_in_d_bits_corrupt;
  wire [2:0]  mask_sizeOH = 3'h5;	// src/main/scala/util/Misc.scala:202:81
  wire [2:0]  responseMapSecondOption_6 = 3'h5;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]  io_in_a_bits_opcode = 3'h4;
  wire [2:0]  responseMap_6 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]  responseMap_7 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]  responseMapSecondOption_7 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]  responseMap_5 = 3'h2;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]  responseMapSecondOption_5 = 3'h2;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]  responseMap_2 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]  responseMap_3 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]  responseMap_4 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]  responseMapSecondOption_2 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]  responseMapSecondOption_3 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]  responseMapSecondOption_4 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]  io_in_a_bits_param = 3'h0;
  wire [2:0]  responseMap_0 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]  responseMap_1 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42
  wire [2:0]  responseMapSecondOption_0 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]  responseMapSecondOption_1 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire        io_in_d_ready = 1'h1;
  wire        mask_size = 1'h1;	// src/main/scala/util/Misc.scala:209:26
  wire        mask_acc = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_1 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_2 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_3 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_4 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_5 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_size_2 = 1'h1;	// src/main/scala/util/Misc.scala:209:26
  wire        mask_acc_6 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_7 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_8 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_9 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_10 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_11 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_12 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        mask_acc_13 = 1'h1;	// src/main/scala/util/Misc.scala:215:29
  wire        sink_ok = 1'h1;	// src/main/scala/tilelink/Monitor.scala:306:31
  wire        a_first_last = 1'h1;	// src/main/scala/tilelink/Edges.scala:233:33
  wire        a_first_last_1 = 1'h1;	// src/main/scala/tilelink/Edges.scala:233:33
  wire        c_first = 1'h1;	// src/main/scala/tilelink/Edges.scala:232:25
  wire        c_first_last = 1'h1;	// src/main/scala/tilelink/Edges.scala:233:33
  wire        io_in_a_bits_source = 1'h0;
  wire        io_in_a_bits_corrupt = 1'h0;
  wire        io_in_d_bits_source = 1'h0;
  wire        mask_size_1 = 1'h0;	// src/main/scala/util/Misc.scala:209:26
  wire        a_first_beats1_opdata = 1'h0;	// src/main/scala/tilelink/Edges.scala:93:28
  wire        a_first_beats1_opdata_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:93:28
  wire        c_first_beats1_opdata = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36
  wire        c_first_done = 1'h0;	// src/main/scala/tilelink/Edges.scala:234:22
  wire        c_set = 1'h0;	// src/main/scala/tilelink/Monitor.scala:735:34
  wire        c_set_wo_ready = 1'h0;	// src/main/scala/tilelink/Monitor.scala:736:34
  wire        c_probe_ack = 1'h0;	// src/main/scala/tilelink/Monitor.scala:769:71
  wire        same_cycle_resp_1 = 1'h0;	// src/main/scala/tilelink/Monitor.scala:792:88
  wire [8:0]  c_first_counter1 = 9'h1FF;	// src/main/scala/tilelink/Edges.scala:231:28
  wire [3:0]  io_in_a_bits_size = 4'h6;
  wire [7:0]  io_in_a_bits_mask = 8'hFF;
  wire [7:0]  mask = 8'hFF;	// src/main/scala/util/Misc.scala:222:10
  wire [63:0] io_in_a_bits_data = 64'h0;
  wire [3:0]  mask_lo = 4'hF;	// src/main/scala/util/Misc.scala:222:10
  wire [3:0]  mask_hi = 4'hF;	// src/main/scala/util/Misc.scala:222:10
  wire [3:0]  c_opcodes_set = 4'h0;	// src/main/scala/tilelink/Monitor.scala:737:34
  wire [3:0]  c_opcodes_set_interm = 4'h0;	// src/main/scala/tilelink/Monitor.scala:751:40
  wire [7:0]  c_sizes_set = 8'h0;	// src/main/scala/tilelink/Monitor.scala:738:34
  wire [8:0]  a_first_beats1 = 9'h0;	// src/main/scala/tilelink/Edges.scala:222:14
  wire [8:0]  a_first_count = 9'h0;	// src/main/scala/tilelink/Edges.scala:235:25
  wire [8:0]  a_first_beats1_1 = 9'h0;	// src/main/scala/tilelink/Edges.scala:222:14
  wire [8:0]  a_first_count_1 = 9'h0;	// src/main/scala/tilelink/Edges.scala:235:25
  wire [8:0]  c_first_beats1_decode = 9'h0;	// src/main/scala/tilelink/Edges.scala:221:59
  wire [8:0]  c_first_beats1 = 9'h0;	// src/main/scala/tilelink/Edges.scala:222:14
  wire [8:0]  c_first_count = 9'h0;	// src/main/scala/tilelink/Edges.scala:235:25
  wire [8:0]  a_first_beats1_decode = 9'h7;	// src/main/scala/tilelink/Edges.scala:221:59
  wire [8:0]  a_first_beats1_decode_1 = 9'h7;	// src/main/scala/tilelink/Edges.scala:221:59
  wire [1:0]  mask_lo_lo = 2'h3;	// src/main/scala/util/Misc.scala:222:10
  wire [1:0]  mask_lo_hi = 2'h3;	// src/main/scala/util/Misc.scala:222:10
  wire [1:0]  mask_hi_lo = 2'h3;	// src/main/scala/util/Misc.scala:222:10
  wire [1:0]  mask_hi_hi = 2'h3;	// src/main/scala/util/Misc.scala:222:10
  wire [1:0]  mask_sizeOH_shiftAmount = 2'h2;	// src/main/scala/chisel3/util/OneHot.scala:64:49
  wire [11:0] is_aligned_mask = 12'h3F;	// src/main/scala/util/package.scala:235:46
  wire [4:0]  c_sizes_set_interm = 5'h0;	// src/main/scala/tilelink/Monitor.scala:752:40
  wire        is_aligned = io_in_a_bits_address_0[5:0] == 6'h0;	// src/main/scala/tilelink/Edges.scala:22:{16,24}
  wire        mask_bit = io_in_a_bits_address_0[2];	// src/main/scala/util/Misc.scala:210:26
  wire        mask_eq_1 = mask_bit;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire        mask_nbit = ~mask_bit;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire        mask_eq = mask_nbit;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire        mask_bit_1 = io_in_a_bits_address_0[1];	// src/main/scala/util/Misc.scala:210:26
  wire        mask_nbit_1 = ~mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire        mask_eq_2 = mask_eq & mask_nbit_1;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire        mask_eq_3 = mask_eq & mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire        mask_eq_4 = mask_eq_1 & mask_nbit_1;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire        mask_eq_5 = mask_eq_1 & mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire        mask_bit_2 = io_in_a_bits_address_0[0];	// src/main/scala/util/Misc.scala:210:26
  wire        mask_nbit_2 = ~mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire        mask_eq_6 = mask_eq_2 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire        mask_eq_7 = mask_eq_2 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire        mask_eq_8 = mask_eq_3 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire        mask_eq_9 = mask_eq_3 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire        mask_eq_10 = mask_eq_4 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire        mask_eq_11 = mask_eq_4 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire        mask_eq_12 = mask_eq_5 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire        mask_eq_13 = mask_eq_5 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire        _GEN = io_in_d_bits_opcode_0 == 3'h6;	// src/main/scala/tilelink/Monitor.scala:310:25
  wire        d_release_ack;	// src/main/scala/tilelink/Monitor.scala:670:46
  assign d_release_ack = _GEN;	// src/main/scala/tilelink/Monitor.scala:310:25, :670:46
  wire        d_release_ack_1;	// src/main/scala/tilelink/Monitor.scala:780:46
  assign d_release_ack_1 = _GEN;	// src/main/scala/tilelink/Monitor.scala:310:25, :780:46
  wire        _a_first_T_1 = io_in_a_ready_0 & io_in_a_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:52:35
  wire        a_first_done;	// src/main/scala/tilelink/Edges.scala:234:22
  assign a_first_done = _a_first_T_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  wire        a_first_done_1;	// src/main/scala/tilelink/Edges.scala:234:22
  assign a_first_done_1 = _a_first_T_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  reg  [8:0]  a_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27
  wire [8:0]  a_first_counter1 = a_first_counter - 9'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire        a_first = a_first_counter == 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  reg  [31:0] address;	// src/main/scala/tilelink/Monitor.scala:388:22
  wire [26:0] _GEN_0 = {23'h0, io_in_d_bits_size_0};	// src/main/scala/util/package.scala:235:71
  wire [26:0] _d_first_beats1_decode_T_1 = 27'hFFF << _GEN_0;	// src/main/scala/util/package.scala:235:71
  wire [8:0]  d_first_beats1_decode = ~(_d_first_beats1_decode_T_1[11:3]);	// src/main/scala/tilelink/Edges.scala:221:59, src/main/scala/util/package.scala:235:{46,71,76}
  wire        d_first_beats1_opdata = io_in_d_bits_opcode_0[0];	// src/main/scala/tilelink/Edges.scala:107:36
  wire        d_first_beats1_opdata_1 = io_in_d_bits_opcode_0[0];	// src/main/scala/tilelink/Edges.scala:107:36
  wire        d_first_beats1_opdata_2 = io_in_d_bits_opcode_0[0];	// src/main/scala/tilelink/Edges.scala:107:36
  wire [8:0]  d_first_beats1 = d_first_beats1_opdata ? d_first_beats1_decode : 9'h0;	// src/main/scala/tilelink/Edges.scala:107:36, :221:59, :222:14
  reg  [8:0]  d_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27
  wire [8:0]  d_first_counter1 = d_first_counter - 9'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire        d_first = d_first_counter == 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire        d_first_last = d_first_counter == 9'h1 | d_first_beats1 == 9'h0;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27, :233:{25,33,43}
  wire        d_first_done = d_first_last & io_in_d_valid_0;	// src/main/scala/tilelink/Edges.scala:233:33, :234:22
  wire [8:0]  d_first_count = d_first_beats1 & ~d_first_counter1;	// src/main/scala/tilelink/Edges.scala:222:14, :231:28, :235:{25,27}
  reg  [2:0]  opcode_1;	// src/main/scala/tilelink/Monitor.scala:535:22
  reg  [1:0]  param_1;	// src/main/scala/tilelink/Monitor.scala:536:22
  reg  [3:0]  size_1;	// src/main/scala/tilelink/Monitor.scala:537:22
  reg  [1:0]  sink;	// src/main/scala/tilelink/Monitor.scala:539:22
  reg         denied;	// src/main/scala/tilelink/Monitor.scala:540:22
  reg         inflight;	// src/main/scala/tilelink/Monitor.scala:611:27
  reg  [3:0]  inflight_opcodes;	// src/main/scala/tilelink/Monitor.scala:613:35
  reg  [7:0]  inflight_sizes;	// src/main/scala/tilelink/Monitor.scala:615:33
  reg  [8:0]  a_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27
  wire [8:0]  a_first_counter1_1 = a_first_counter_1 - 9'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire        a_first_1 = a_first_counter_1 == 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire [26:0] _d_first_beats1_decode_T_5 = 27'hFFF << _GEN_0;	// src/main/scala/util/package.scala:235:71
  wire [8:0]  d_first_beats1_decode_1 = ~(_d_first_beats1_decode_T_5[11:3]);	// src/main/scala/tilelink/Edges.scala:221:59, src/main/scala/util/package.scala:235:{46,71,76}
  wire [8:0]  d_first_beats1_1 = d_first_beats1_opdata_1 ? d_first_beats1_decode_1 : 9'h0;	// src/main/scala/tilelink/Edges.scala:107:36, :221:59, :222:14
  reg  [8:0]  d_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27
  wire [8:0]  d_first_counter1_1 = d_first_counter_1 - 9'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire        d_first_1 = d_first_counter_1 == 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire        d_first_last_1 = d_first_counter_1 == 9'h1 | d_first_beats1_1 == 9'h0;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27, :233:{25,33,43}
  wire        d_first_done_1 = d_first_last_1 & io_in_d_valid_0;	// src/main/scala/tilelink/Edges.scala:233:33, :234:22
  wire [8:0]  d_first_count_1 = d_first_beats1_1 & ~d_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:222:14, :231:28, :235:{25,27}
  wire [3:0]  a_opcode_lookup = {1'h0, inflight_opcodes[3:1]};	// src/main/scala/tilelink/Monitor.scala:613:35, :632:35, :634:{21,152}
  wire [7:0]  a_size_lookup = {1'h0, inflight_sizes[7:1]};	// src/main/scala/tilelink/Monitor.scala:615:33, :636:33, :638:{19,144}
  wire        _same_cycle_resp_T_1 = io_in_a_valid_0 & a_first_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:648:26
  wire        a_set_wo_ready;	// src/main/scala/tilelink/Monitor.scala:624:34
  assign a_set_wo_ready = _same_cycle_resp_T_1;	// src/main/scala/tilelink/Monitor.scala:624:34, :648:26
  wire        same_cycle_resp;	// src/main/scala/tilelink/Monitor.scala:681:88
  assign same_cycle_resp = _same_cycle_resp_T_1;	// src/main/scala/tilelink/Monitor.scala:648:26, :681:88
  wire        a_set = _a_first_T_1 & a_first_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:623:34, :652:25
  wire [3:0]  a_opcodes_set_interm = a_set ? 4'h9 : 4'h0;	// src/main/scala/tilelink/Monitor.scala:623:34, :643:40, :652:70, :654:28
  wire [4:0]  a_sizes_set_interm = a_set ? 5'hD : 5'h0;	// src/main/scala/tilelink/Monitor.scala:623:34, :645:38, :652:70, :655:28
  wire [3:0]  a_opcodes_set = a_set ? a_opcodes_set_interm : 4'h0;	// src/main/scala/tilelink/Monitor.scala:623:34, :627:33, :643:40, :652:70, :656:28
  wire [7:0]  a_sizes_set = a_set ? {3'h0, a_sizes_set_interm} : 8'h0;	// src/main/scala/tilelink/Monitor.scala:623:34, :629:31, :645:38, :652:70, :657:28
  wire        _GEN_1 = io_in_d_valid_0 & d_first_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:671:26
  wire        _GEN_2 = _GEN_1 & ~d_release_ack;	// src/main/scala/tilelink/Monitor.scala:670:46, :671:{26,71,74}
  wire        d_clr;	// src/main/scala/tilelink/Monitor.scala:661:34
  assign d_clr = _GEN_2;	// src/main/scala/tilelink/Monitor.scala:661:34, :671:71
  wire        d_clr_wo_ready;	// src/main/scala/tilelink/Monitor.scala:662:34
  assign d_clr_wo_ready = _GEN_2;	// src/main/scala/tilelink/Monitor.scala:662:34, :671:71
  wire [3:0]  d_opcodes_clr = {4{_GEN_2}};	// src/main/scala/tilelink/Monitor.scala:665:33, :671:71, :675:89, :677:21
  wire [7:0]  d_sizes_clr = {8{_GEN_2}};	// src/main/scala/tilelink/Monitor.scala:667:31, :671:71, :675:89, :678:21
  reg  [31:0] watchdog;	// src/main/scala/tilelink/Monitor.scala:706:27
  reg         inflight_1;	// src/main/scala/tilelink/Monitor.scala:723:35
  reg  [3:0]  inflight_opcodes_1;	// src/main/scala/tilelink/Monitor.scala:724:35
  reg  [7:0]  inflight_sizes_1;	// src/main/scala/tilelink/Monitor.scala:725:35
  wire [26:0] _d_first_beats1_decode_T_9 = 27'hFFF << _GEN_0;	// src/main/scala/util/package.scala:235:71
  wire [8:0]  d_first_beats1_decode_2 = ~(_d_first_beats1_decode_T_9[11:3]);	// src/main/scala/tilelink/Edges.scala:221:59, src/main/scala/util/package.scala:235:{46,71,76}
  wire [8:0]  d_first_beats1_2 = d_first_beats1_opdata_2 ? d_first_beats1_decode_2 : 9'h0;	// src/main/scala/tilelink/Edges.scala:107:36, :221:59, :222:14
  reg  [8:0]  d_first_counter_2;	// src/main/scala/tilelink/Edges.scala:230:27
  wire [8:0]  d_first_counter1_2 = d_first_counter_2 - 9'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire        d_first_2 = d_first_counter_2 == 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire        d_first_last_2 = d_first_counter_2 == 9'h1 | d_first_beats1_2 == 9'h0;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27, :233:{25,33,43}
  wire        d_first_done_2 = d_first_last_2 & io_in_d_valid_0;	// src/main/scala/tilelink/Edges.scala:233:33, :234:22
  wire [8:0]  d_first_count_2 = d_first_beats1_2 & ~d_first_counter1_2;	// src/main/scala/tilelink/Edges.scala:222:14, :231:28, :235:{25,27}
  wire [3:0]  c_opcode_lookup = {1'h0, inflight_opcodes_1[3:1]};	// src/main/scala/tilelink/Monitor.scala:724:35, :744:35, :746:{21,152}
  wire [7:0]  c_size_lookup = {1'h0, inflight_sizes_1[7:1]};	// src/main/scala/tilelink/Monitor.scala:725:35, :745:35, :747:{21,146}
  wire        _GEN_3 = io_in_d_valid_0 & d_first_2 & d_release_ack_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:780:46, :781:{26,71}
  wire        d_clr_1;	// src/main/scala/tilelink/Monitor.scala:771:34
  assign d_clr_1 = _GEN_3;	// src/main/scala/tilelink/Monitor.scala:771:34, :781:{26,71}
  wire        d_clr_wo_ready_1;	// src/main/scala/tilelink/Monitor.scala:772:34
  assign d_clr_wo_ready_1 = _GEN_3;	// src/main/scala/tilelink/Monitor.scala:772:34, :781:{26,71}
  wire [3:0]  d_opcodes_clr_1 = {4{_GEN_3}};	// src/main/scala/tilelink/Monitor.scala:773:34, :781:{26,71}, :785:88, :787:21
  wire [7:0]  d_sizes_clr_1 = {8{_GEN_3}};	// src/main/scala/tilelink/Monitor.scala:774:34, :781:{26,71}, :785:88, :788:21
  reg  [31:0] watchdog_1;	// src/main/scala/tilelink/Monitor.scala:815:27
  `ifndef SYNTHESIS	// src/main/scala/tilelink/Monitor.scala:42:11
    always @(posedge clock) begin	// src/main/scala/tilelink/Monitor.scala:42:11
      automatic logic [7:0][2:0] _GEN_4 =
        '{3'h4, 3'h5, 3'h2, 3'h1, 3'h1, 3'h1, 3'h0, 3'h0};
      automatic logic [7:0][2:0] _GEN_5 =
        '{3'h4, 3'h4, 3'h2, 3'h1, 3'h1, 3'h1, 3'h0, 3'h0};
      automatic logic            _GEN_6 = io_in_a_valid_0 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11
      automatic logic            _GEN_7 = io_in_d_valid_0 & _GEN & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :310:{25,52}
      automatic logic            _GEN_8 = io_in_d_bits_size_0 < 4'h3;	// src/main/scala/tilelink/Monitor.scala:312:27
      automatic logic            _GEN_9 =
        io_in_d_valid_0 & io_in_d_bits_opcode_0 == 3'h4 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :318:{25,47}
      automatic logic            _GEN_10 = io_in_d_bits_param_0 == 2'h2;	// src/main/scala/tilelink/Monitor.scala:323:28
      automatic logic            _GEN_11 =
        io_in_d_valid_0 & io_in_d_bits_opcode_0 == 3'h5 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :328:{25,51}
      automatic logic            _GEN_12 =
        ~io_in_d_bits_denied_0 | io_in_d_bits_corrupt_0;	// src/main/scala/tilelink/Monitor.scala:334:{15,30}
      automatic logic            _GEN_13 =
        io_in_d_valid_0 & io_in_d_bits_opcode_0 == 3'h0 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :338:{25,51}
      automatic logic            _GEN_14 = io_in_d_bits_opcode_0 == 3'h1;	// src/main/scala/tilelink/Monitor.scala:346:25
      automatic logic            _GEN_15 = io_in_d_valid_0 & _GEN_14 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :346:{25,55}
      automatic logic            _GEN_16 =
        io_in_d_valid_0 & io_in_d_bits_opcode_0 == 3'h2 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :354:{25,49}
      automatic logic            _GEN_17 = io_in_d_valid_0 & ~d_first & ~reset;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :541:{19,22}
      automatic logic            _GEN_18 = _GEN_2 & same_cycle_resp & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:71, :681:88, :684:30
      automatic logic            _GEN_19 = _GEN_2 & ~same_cycle_resp & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:71, :681:88, :684:30
      automatic logic [7:0]      _GEN_20 = {4'h0, io_in_d_bits_size_0};	// src/main/scala/tilelink/Monitor.scala:691:36
      automatic logic            _GEN_21 = _GEN_3 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :781:{26,71}
      if (_GEN_6
          & ~({io_in_a_bits_address_0[31:14], ~(io_in_a_bits_address_0[13:12])} == 20'h0
              | io_in_a_bits_address_0[31:12] == 20'h0
              | {io_in_a_bits_address_0[31:17], ~(io_in_a_bits_address_0[16])} == 16'h0
              | {io_in_a_bits_address_0[31:26],
                 io_in_a_bits_address_0[25:16] ^ 10'h200} == 16'h0
              | {io_in_a_bits_address_0[31:28], ~(io_in_a_bits_address_0[27:26])} == 6'h0
              | {io_in_a_bits_address_0[31:29], ~(io_in_a_bits_address_0[28])} == 4'h0
              | {io_in_a_bits_address_0[31:30], ~(io_in_a_bits_address_0[29])} == 3'h0
              | {io_in_a_bits_address_0[31], ~(io_in_a_bits_address_0[30])} == 2'h0
              | io_in_a_bits_address_0[31])) begin	// src/main/scala/diplomacy/Parameters.scala:137:{31,41,46,59}, src/main/scala/tilelink/Monitor.scala:42:11, src/main/scala/tilelink/Parameters.scala:672:42, :673:26
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Get type which slave claims it can't support (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_6 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get address not aligned to size (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (io_in_d_valid_0 & ~reset & (&io_in_d_bits_opcode_0)) begin	// src/main/scala/tilelink/Bundles.scala:45:24, src/main/scala/tilelink/Monitor.scala:42:11, :49:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel has invalid opcode (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_7 & _GEN_8) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :310:52, :312:27
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel ReleaseAck smaller than a beat (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_7 & (|io_in_d_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :310:52, :313:28
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel ReleaseeAck carries invalid param (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_7 & io_in_d_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :310:52
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel ReleaseAck is corrupt (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_7 & io_in_d_bits_denied_0) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :310:52
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel ReleaseAck is denied (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_9 & _GEN_8) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :312:27, :318:47
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel Grant smaller than a beat (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_9 & (&io_in_d_bits_param_0)) begin	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Monitor.scala:49:11, :318:47
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel Grant carries invalid cap param (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_9 & _GEN_10) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :318:47, :323:28
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel Grant carries toN param (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_9 & io_in_d_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :318:47
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel Grant is corrupt (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_11 & _GEN_8) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :312:27, :328:51
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel GrantData smaller than a beat (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_11 & (&io_in_d_bits_param_0)) begin	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Monitor.scala:49:11, :328:51
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel GrantData carries invalid cap param (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_11 & _GEN_10) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :328:51
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel GrantData carries toN param (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_11 & ~_GEN_12) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :328:51, :334:30
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel GrantData is denied but not corrupt (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_13 & (|io_in_d_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :313:28, :338:51
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel AccessAck carries invalid param (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_13 & io_in_d_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :338:51
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel AccessAck is corrupt (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_15 & (|io_in_d_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :313:28, :346:55
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel AccessAckData carries invalid param (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_15 & ~_GEN_12) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :334:30, :346:55
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel AccessAckData is denied but not corrupt (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_16 & (|io_in_d_bits_param_0)) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :313:28, :354:49
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel HintAck carries invalid param (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_16 & io_in_d_bits_corrupt_0) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :354:49
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel HintAck is corrupt (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (io_in_a_valid_0 & ~a_first & ~reset & io_in_a_bits_address_0 != address) begin	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :388:22, :389:{19,22}, :394:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel address changed with multibeat operation (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & io_in_d_bits_opcode_0 != opcode_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :535:22, :541:19, :542:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel opcode changed within multibeat operation (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_17 & io_in_d_bits_param_0 != param_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :536:22, :541:19, :543:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel param changed within multibeat operation (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_17 & io_in_d_bits_size_0 != size_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :537:22, :541:19, :544:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel size changed within multibeat operation (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_17 & io_in_d_bits_sink_0 != sink) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :539:22, :541:19, :546:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel sink changed with multibeat operation (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_17 & io_in_d_bits_denied_0 != denied) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :540:22, :541:19, :547:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel denied changed with multibeat operation (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (a_set & ~reset & inflight) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :611:27, :623:34
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel re-used a source ID (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_2 & ~reset & ~(inflight | same_cycle_resp)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :611:27, :671:71, :681:88, :682:49
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel acknowledged for nothing inflight (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_18 & ~_GEN_14) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :346:25, :684:30
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper opcode response (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_18 & io_in_d_bits_size_0 != 4'h6) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :684:30, :687:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_19
          & ~(io_in_d_bits_opcode_0 == _GEN_5[a_opcode_lookup[2:0]]
              | io_in_d_bits_opcode_0 == _GEN_4[a_opcode_lookup[2:0]])) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :632:35, :684:30, :689:{38,72}, :690:38
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper opcode response (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_19 & _GEN_20 != a_size_lookup) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :636:33, :684:30, :691:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_1 & a_first_1 & io_in_a_valid_0 & ~d_release_ack & ~reset
          & ~io_in_a_ready_0) begin	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :670:46, :671:{26,74}, :694:{36,47,116}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: ready check\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (~reset & ~(a_set_wo_ready != d_clr_wo_ready | ~a_set_wo_ready)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :624:34, :662:34, :699:{29,48,51}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'A' and 'D' concurrent, despite minlatency 3 (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (~reset
          & ~(~inflight | _plusarg_reader_out == 32'h0
              | watchdog < _plusarg_reader_out)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :611:27, :706:27, :709:{16,30,39,47,59}, src/main/scala/util/PlusArg.scala:80:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: TileLink timeout expired (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_21 & ~inflight_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :723:35
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel acknowledged for nothing inflight (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_21 & _GEN_20 != c_size_lookup) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :691:36, :745:35, :797:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (~reset
          & ~(~inflight_1 | _plusarg_reader_1_out == 32'h0
              | watchdog_1 < _plusarg_reader_1_out)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :723:35, :815:27, :818:{30,39,47,59}, src/main/scala/util/PlusArg.scala:80:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: TileLink timeout expired (connected at src/main/scala/rocket/Frontend.scala:387:21)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  always @(posedge clock) begin
    if (reset) begin
      a_first_counter <= 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      d_first_counter <= 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      inflight <= 1'h0;	// src/main/scala/tilelink/Monitor.scala:611:27
      inflight_opcodes <= 4'h0;	// src/main/scala/tilelink/Monitor.scala:613:35
      inflight_sizes <= 8'h0;	// src/main/scala/tilelink/Monitor.scala:615:33
      a_first_counter_1 <= 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      d_first_counter_1 <= 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      watchdog <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:706:27
      inflight_1 <= 1'h0;	// src/main/scala/tilelink/Monitor.scala:723:35
      inflight_opcodes_1 <= 4'h0;	// src/main/scala/tilelink/Monitor.scala:724:35
      inflight_sizes_1 <= 8'h0;	// src/main/scala/tilelink/Monitor.scala:725:35
      d_first_counter_2 <= 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27
      watchdog_1 <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:815:27
    end
    else begin
      if (_a_first_T_1) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35
        if (a_first)	// src/main/scala/tilelink/Edges.scala:232:25
          a_first_counter <= 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27
        else	// src/main/scala/tilelink/Edges.scala:232:25
          a_first_counter <= a_first_counter1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
        if (a_first_1)	// src/main/scala/tilelink/Edges.scala:232:25
          a_first_counter_1 <= 9'h0;	// src/main/scala/tilelink/Edges.scala:230:27
        else	// src/main/scala/tilelink/Edges.scala:232:25
          a_first_counter_1 <= a_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
      end
      if (io_in_d_valid_0) begin
        if (d_first)	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter <= d_first_beats1;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27
        else	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter <= d_first_counter1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
        if (d_first_1)	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter_1 <= d_first_beats1_1;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27
        else	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter_1 <= d_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
        if (d_first_2)	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter_2 <= d_first_beats1_2;	// src/main/scala/tilelink/Edges.scala:222:14, :230:27
        else	// src/main/scala/tilelink/Edges.scala:232:25
          d_first_counter_2 <= d_first_counter1_2;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
        watchdog_1 <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:815:27
      end
      else
        watchdog_1 <= watchdog_1 + 32'h1;	// src/main/scala/tilelink/Monitor.scala:815:27, :820:26
      inflight <= (inflight | a_set) & ~d_clr;	// src/main/scala/tilelink/Monitor.scala:611:27, :623:34, :661:34, :702:{27,36,38}
      inflight_opcodes <= (inflight_opcodes | a_opcodes_set) & ~d_opcodes_clr;	// src/main/scala/tilelink/Monitor.scala:613:35, :627:33, :665:33, :703:{43,60,62}
      inflight_sizes <= (inflight_sizes | a_sizes_set) & ~d_sizes_clr;	// src/main/scala/tilelink/Monitor.scala:615:33, :629:31, :667:31, :704:{39,54,56}
      if (_a_first_T_1 | io_in_d_valid_0)	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Monitor.scala:712:25
        watchdog <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:706:27
      else	// src/main/scala/tilelink/Monitor.scala:712:25
        watchdog <= watchdog + 32'h1;	// src/main/scala/tilelink/Monitor.scala:706:27, :711:26
      inflight_1 <= inflight_1 & ~d_clr_1;	// src/main/scala/tilelink/Monitor.scala:723:35, :771:34, :811:{44,46}
      inflight_opcodes_1 <= inflight_opcodes_1 & ~d_opcodes_clr_1;	// src/main/scala/tilelink/Monitor.scala:724:35, :773:34, :812:{60,62}
      inflight_sizes_1 <= inflight_sizes_1 & ~d_sizes_clr_1;	// src/main/scala/tilelink/Monitor.scala:725:35, :774:34, :813:{56,58}
    end
    if (_a_first_T_1 & a_first)	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:396:18
      address <= io_in_a_bits_address_0;	// src/main/scala/tilelink/Monitor.scala:388:22
    if (io_in_d_valid_0 & d_first) begin	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:549:18
      opcode_1 <= io_in_d_bits_opcode_0;	// src/main/scala/tilelink/Monitor.scala:535:22
      param_1 <= io_in_d_bits_param_0;	// src/main/scala/tilelink/Monitor.scala:536:22
      size_1 <= io_in_d_bits_size_0;	// src/main/scala/tilelink/Monitor.scala:537:22
      sink <= io_in_d_bits_sink_0;	// src/main/scala/tilelink/Monitor.scala:539:22
      denied <= io_in_d_bits_denied_0;	// src/main/scala/tilelink/Monitor.scala:540:22
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin
      automatic logic [31:0] _RANDOM[0:6];
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [2:0] i = 3'h0; i < 3'h7; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        a_first_counter = _RANDOM[3'h0][8:0];	// src/main/scala/tilelink/Edges.scala:230:27
        address = {_RANDOM[3'h0][31:20], _RANDOM[3'h1][19:0]};	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:388:22
        d_first_counter = _RANDOM[3'h1][28:20];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:388:22
        opcode_1 = _RANDOM[3'h1][31:29];	// src/main/scala/tilelink/Monitor.scala:388:22, :535:22
        param_1 = _RANDOM[3'h2][1:0];	// src/main/scala/tilelink/Monitor.scala:536:22
        size_1 = _RANDOM[3'h2][5:2];	// src/main/scala/tilelink/Monitor.scala:536:22, :537:22
        sink = _RANDOM[3'h2][8:7];	// src/main/scala/tilelink/Monitor.scala:536:22, :539:22
        denied = _RANDOM[3'h2][9];	// src/main/scala/tilelink/Monitor.scala:536:22, :540:22
        inflight = _RANDOM[3'h2][10];	// src/main/scala/tilelink/Monitor.scala:536:22, :611:27
        inflight_opcodes = _RANDOM[3'h2][14:11];	// src/main/scala/tilelink/Monitor.scala:536:22, :613:35
        inflight_sizes = _RANDOM[3'h2][22:15];	// src/main/scala/tilelink/Monitor.scala:536:22, :615:33
        a_first_counter_1 = _RANDOM[3'h2][31:23];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:536:22
        d_first_counter_1 = _RANDOM[3'h3][8:0];	// src/main/scala/tilelink/Edges.scala:230:27
        watchdog = {_RANDOM[3'h3][31:9], _RANDOM[3'h4][8:0]};	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:706:27
        inflight_1 = _RANDOM[3'h4][9];	// src/main/scala/tilelink/Monitor.scala:706:27, :723:35
        inflight_opcodes_1 = _RANDOM[3'h4][13:10];	// src/main/scala/tilelink/Monitor.scala:706:27, :724:35
        inflight_sizes_1 = _RANDOM[3'h4][21:14];	// src/main/scala/tilelink/Monitor.scala:706:27, :725:35
        d_first_counter_2 = {_RANDOM[3'h4][31], _RANDOM[3'h5][7:0]};	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:706:27
        watchdog_1 = {_RANDOM[3'h5][31:8], _RANDOM[3'h6][7:0]};	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:815:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  plusarg_reader #(
    .DEFAULT(0),
    .FORMAT("tilelink_timeout=%d"),
    .WIDTH(32)
  ) plusarg_reader (	// src/main/scala/util/PlusArg.scala:80:11
    .out (_plusarg_reader_out)
  );	// src/main/scala/util/PlusArg.scala:80:11
  plusarg_reader #(
    .DEFAULT(0),
    .FORMAT("tilelink_timeout=%d"),
    .WIDTH(32)
  ) plusarg_reader_1 (	// src/main/scala/util/PlusArg.scala:80:11
    .out (_plusarg_reader_1_out)
  );	// src/main/scala/util/PlusArg.scala:80:11
endmodule


// Generated by CIRCT firtool-1.66.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module IntToFP(
  input         clock,
                reset,
                io_in_valid,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_ldst,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_wen,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_ren1,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_ren2,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_ren3,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_swap12,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_swap23,	// src/main/scala/tile/FPU.scala:522:14
  input  [1:0]  io_in_bits_typeTagIn,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_typeTagOut,	// src/main/scala/tile/FPU.scala:522:14
  input         io_in_bits_fromint,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_toint,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_fastpipe,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_fma,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_div,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_sqrt,	// src/main/scala/tile/FPU.scala:522:14
                io_in_bits_wflags,	// src/main/scala/tile/FPU.scala:522:14
  input  [2:0]  io_in_bits_rm,	// src/main/scala/tile/FPU.scala:522:14
  input  [1:0]  io_in_bits_typ,	// src/main/scala/tile/FPU.scala:522:14
  input  [63:0] io_in_bits_in1,	// src/main/scala/tile/FPU.scala:522:14
  output [64:0] io_out_bits_data,	// src/main/scala/tile/FPU.scala:522:14
  output [4:0]  io_out_bits_exc	// src/main/scala/tile/FPU.scala:522:14
);

  wire [63:0]  intValue_res;	// src/main/scala/tile/FPU.scala:535:26
  wire [64:0]  _i2f_1_io_out;	// src/main/scala/tile/FPU.scala:549:23
  wire [4:0]   _i2f_1_io_exceptionFlags;	// src/main/scala/tile/FPU.scala:549:23
  wire [32:0]  _i2f_io_out;	// src/main/scala/tile/FPU.scala:549:23
  wire [4:0]   _i2f_io_exceptionFlags;	// src/main/scala/tile/FPU.scala:549:23
  wire         io_in_valid_0 = io_in_valid;
  wire         io_in_bits_ldst_0 = io_in_bits_ldst;
  wire         io_in_bits_wen_0 = io_in_bits_wen;
  wire         io_in_bits_ren1_0 = io_in_bits_ren1;
  wire         io_in_bits_ren2_0 = io_in_bits_ren2;
  wire         io_in_bits_ren3_0 = io_in_bits_ren3;
  wire         io_in_bits_swap12_0 = io_in_bits_swap12;
  wire         io_in_bits_swap23_0 = io_in_bits_swap23;
  wire [1:0]   io_in_bits_typeTagIn_0 = io_in_bits_typeTagIn;
  wire [1:0]   io_in_bits_typeTagOut_0 = io_in_bits_typeTagOut;
  wire         io_in_bits_fromint_0 = io_in_bits_fromint;
  wire         io_in_bits_toint_0 = io_in_bits_toint;
  wire         io_in_bits_fastpipe_0 = io_in_bits_fastpipe;
  wire         io_in_bits_fma_0 = io_in_bits_fma;
  wire         io_in_bits_div_0 = io_in_bits_div;
  wire         io_in_bits_sqrt_0 = io_in_bits_sqrt;
  wire         io_in_bits_wflags_0 = io_in_bits_wflags;
  wire [2:0]   io_in_bits_rm_0 = io_in_bits_rm;
  wire [1:0]   io_in_bits_typ_0 = io_in_bits_typ;
  wire [63:0]  io_in_bits_in1_0 = io_in_bits_in1;
  wire         io_out_pipe_out_valid;	// src/main/scala/chisel3/util/Valid.scala:123:21
  wire [64:0]  io_out_pipe_out_bits_data;	// src/main/scala/chisel3/util/Valid.scala:123:21
  wire [4:0]   io_out_pipe_out_bits_exc;	// src/main/scala/chisel3/util/Valid.scala:123:21
  reg          in_pipe_v;	// src/main/scala/chisel3/util/Valid.scala:129:24
  wire         in_valid = in_pipe_v;	// src/main/scala/chisel3/util/Valid.scala:123:21, :129:24
  reg          in_pipe_b_ldst;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_ldst = in_pipe_b_ldst;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_wen;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_wen = in_pipe_b_wen;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_ren1;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_ren1 = in_pipe_b_ren1;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_ren2;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_ren2 = in_pipe_b_ren2;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_ren3;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_ren3 = in_pipe_b_ren3;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_swap12;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_swap12 = in_pipe_b_swap12;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_swap23;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_swap23 = in_pipe_b_swap23;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg  [1:0]   in_pipe_b_typeTagIn;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire [1:0]   in_bits_typeTagIn = in_pipe_b_typeTagIn;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg  [1:0]   in_pipe_b_typeTagOut;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire [1:0]   in_bits_typeTagOut = in_pipe_b_typeTagOut;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_fromint;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_fromint = in_pipe_b_fromint;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_toint;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_toint = in_pipe_b_toint;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_fastpipe;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_fastpipe = in_pipe_b_fastpipe;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_fma;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_fma = in_pipe_b_fma;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_div;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_div = in_pipe_b_div;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_sqrt;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_sqrt = in_pipe_b_sqrt;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg          in_pipe_b_wflags;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire         in_bits_wflags = in_pipe_b_wflags;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg  [2:0]   in_pipe_b_rm;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire [2:0]   in_bits_rm = in_pipe_b_rm;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg  [1:0]   in_pipe_b_typ;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire [1:0]   in_bits_typ = in_pipe_b_typ;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg  [63:0]  in_pipe_b_in1;	// src/main/scala/chisel3/util/Valid.scala:130:26
  wire [63:0]  in_bits_in1 = in_pipe_b_in1;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  wire         mux_data_truncIdx = in_bits_typeTagIn[0];	// src/main/scala/chisel3/util/Valid.scala:123:21, src/main/scala/util/package.scala:32:47
  wire         mux_data_truncIdx_1 = in_bits_typeTagIn[0];	// src/main/scala/chisel3/util/Valid.scala:123:21, src/main/scala/util/package.scala:32:47
  wire         mux_exc_truncIdx = in_bits_typeTagIn[0];	// src/main/scala/chisel3/util/Valid.scala:123:21, src/main/scala/util/package.scala:32:47
  wire [63:0]  _mux_data_T_2 =
    (mux_data_truncIdx ? 64'h0 : 64'hFFFFFFFF00000000) | in_bits_in1;	// src/main/scala/chisel3/util/Valid.scala:123:21, src/main/scala/tile/FPU.scala:425:23, src/main/scala/util/package.scala:32:47, :33:76
  wire         mux_data_rawIn_sign = _mux_data_T_2[63];	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:44:18, src/main/scala/tile/FPU.scala:425:23
  wire         mux_data_rawIn_sign_0 = mux_data_rawIn_sign;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:44:18, :63:19
  wire [10:0]  mux_data_rawIn_expIn = _mux_data_T_2[62:52];	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, src/main/scala/tile/FPU.scala:425:23
  wire [51:0]  mux_data_rawIn_fractIn = _mux_data_T_2[51:0];	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, src/main/scala/tile/FPU.scala:425:23
  wire         mux_data_rawIn_isZeroExpIn = mux_data_rawIn_expIn == 11'h0;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, :48:30
  wire         mux_data_rawIn_isZeroFractIn = mux_data_rawIn_fractIn == 52'h0;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :49:34
  wire [5:0]   mux_data_rawIn_normDist =
    mux_data_rawIn_fractIn[51]
      ? 6'h0
      : mux_data_rawIn_fractIn[50]
          ? 6'h1
          : mux_data_rawIn_fractIn[49]
              ? 6'h2
              : mux_data_rawIn_fractIn[48]
                  ? 6'h3
                  : mux_data_rawIn_fractIn[47]
                      ? 6'h4
                      : mux_data_rawIn_fractIn[46]
                          ? 6'h5
                          : mux_data_rawIn_fractIn[45]
                              ? 6'h6
                              : mux_data_rawIn_fractIn[44]
                                  ? 6'h7
                                  : mux_data_rawIn_fractIn[43]
                                      ? 6'h8
                                      : mux_data_rawIn_fractIn[42]
                                          ? 6'h9
                                          : mux_data_rawIn_fractIn[41]
                                              ? 6'hA
                                              : mux_data_rawIn_fractIn[40]
                                                  ? 6'hB
                                                  : mux_data_rawIn_fractIn[39]
                                                      ? 6'hC
                                                      : mux_data_rawIn_fractIn[38]
                                                          ? 6'hD
                                                          : mux_data_rawIn_fractIn[37]
                                                              ? 6'hE
                                                              : mux_data_rawIn_fractIn[36]
                                                                  ? 6'hF
                                                                  : mux_data_rawIn_fractIn[35]
                                                                      ? 6'h10
                                                                      : mux_data_rawIn_fractIn[34]
                                                                          ? 6'h11
                                                                          : mux_data_rawIn_fractIn[33]
                                                                              ? 6'h12
                                                                              : mux_data_rawIn_fractIn[32]
                                                                                  ? 6'h13
                                                                                  : mux_data_rawIn_fractIn[31]
                                                                                      ? 6'h14
                                                                                      : mux_data_rawIn_fractIn[30]
                                                                                          ? 6'h15
                                                                                          : mux_data_rawIn_fractIn[29]
                                                                                              ? 6'h16
                                                                                              : mux_data_rawIn_fractIn[28]
                                                                                                  ? 6'h17
                                                                                                  : mux_data_rawIn_fractIn[27]
                                                                                                      ? 6'h18
                                                                                                      : mux_data_rawIn_fractIn[26]
                                                                                                          ? 6'h19
                                                                                                          : mux_data_rawIn_fractIn[25]
                                                                                                              ? 6'h1A
                                                                                                              : mux_data_rawIn_fractIn[24]
                                                                                                                  ? 6'h1B
                                                                                                                  : mux_data_rawIn_fractIn[23]
                                                                                                                      ? 6'h1C
                                                                                                                      : mux_data_rawIn_fractIn[22]
                                                                                                                          ? 6'h1D
                                                                                                                          : mux_data_rawIn_fractIn[21]
                                                                                                                              ? 6'h1E
                                                                                                                              : mux_data_rawIn_fractIn[20]
                                                                                                                                  ? 6'h1F
                                                                                                                                  : mux_data_rawIn_fractIn[19]
                                                                                                                                      ? 6'h20
                                                                                                                                      : mux_data_rawIn_fractIn[18]
                                                                                                                                          ? 6'h21
                                                                                                                                          : mux_data_rawIn_fractIn[17]
                                                                                                                                              ? 6'h22
                                                                                                                                              : mux_data_rawIn_fractIn[16]
                                                                                                                                                  ? 6'h23
                                                                                                                                                  : mux_data_rawIn_fractIn[15]
                                                                                                                                                      ? 6'h24
                                                                                                                                                      : mux_data_rawIn_fractIn[14]
                                                                                                                                                          ? 6'h25
                                                                                                                                                          : mux_data_rawIn_fractIn[13]
                                                                                                                                                              ? 6'h26
                                                                                                                                                              : mux_data_rawIn_fractIn[12]
                                                                                                                                                                  ? 6'h27
                                                                                                                                                                  : mux_data_rawIn_fractIn[11]
                                                                                                                                                                      ? 6'h28
                                                                                                                                                                      : mux_data_rawIn_fractIn[10]
                                                                                                                                                                          ? 6'h29
                                                                                                                                                                          : mux_data_rawIn_fractIn[9]
                                                                                                                                                                              ? 6'h2A
                                                                                                                                                                              : mux_data_rawIn_fractIn[8]
                                                                                                                                                                                  ? 6'h2B
                                                                                                                                                                                  : mux_data_rawIn_fractIn[7]
                                                                                                                                                                                      ? 6'h2C
                                                                                                                                                                                      : mux_data_rawIn_fractIn[6]
                                                                                                                                                                                          ? 6'h2D
                                                                                                                                                                                          : mux_data_rawIn_fractIn[5]
                                                                                                                                                                                              ? 6'h2E
                                                                                                                                                                                              : mux_data_rawIn_fractIn[4]
                                                                                                                                                                                                  ? 6'h2F
                                                                                                                                                                                                  : mux_data_rawIn_fractIn[3]
                                                                                                                                                                                                      ? 6'h30
                                                                                                                                                                                                      : mux_data_rawIn_fractIn[2]
                                                                                                                                                                                                          ? 6'h31
                                                                                                                                                                                                          : {5'h19,
                                                                                                                                                                                                             ~(mux_data_rawIn_fractIn[1])};	// hardfloat/hardfloat/src/main/scala/primitives.scala:91:52, hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [114:0] _mux_data_rawIn_subnormFract_T =
    {63'h0, mux_data_rawIn_fractIn} << mux_data_rawIn_normDist;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :52:33, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [51:0]  mux_data_rawIn_subnormFract = {_mux_data_rawIn_subnormFract_T[50:0], 1'h0};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:52:{33,46,64}
  wire [11:0]  mux_data_rawIn_adjustedExp =
    (mux_data_rawIn_isZeroExpIn
       ? {6'h3F, ~mux_data_rawIn_normDist}
       : {1'h0, mux_data_rawIn_expIn})
    + {10'h100, mux_data_rawIn_isZeroExpIn ? 2'h2 : 2'h1};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, :48:30, :54:10, :55:18, :57:9, :58:14, src/main/scala/chisel3/util/Mux.scala:50:70
  wire         mux_data_rawIn_isZero =
    mux_data_rawIn_isZeroExpIn & mux_data_rawIn_isZeroFractIn;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:48:30, :49:34, :60:30
  wire         mux_data_rawIn_isZero_0 = mux_data_rawIn_isZero;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:60:30, :63:19
  wire         mux_data_rawIn_isSpecial = &(mux_data_rawIn_adjustedExp[11:10]);	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:57:9, :61:{32,57}
  wire         mux_data_rawIn_isNaN =
    mux_data_rawIn_isSpecial & ~mux_data_rawIn_isZeroFractIn;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:49:34, :61:57, :63:19, :64:{28,31}
  wire         mux_data_rawIn_isInf =
    mux_data_rawIn_isSpecial & mux_data_rawIn_isZeroFractIn;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:49:34, :61:57, :63:19, :65:28
  wire [12:0]  mux_data_rawIn_sExp = {1'h0, mux_data_rawIn_adjustedExp};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:57:9, :63:19, :68:42
  wire [53:0]  mux_data_rawIn_sig =
    {1'h0,
     ~mux_data_rawIn_isZero,
     mux_data_rawIn_isZeroExpIn ? mux_data_rawIn_subnormFract : mux_data_rawIn_fractIn};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :48:30, :52:64, :60:30, :63:19, :70:{19,27,33}
  wire [2:0]   _mux_data_T_4 = mux_data_rawIn_isZero_0 ? 3'h0 : mux_data_rawIn_sExp[11:9];	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:63:19, hardfloat/hardfloat/src/main/scala/recFNFromFN.scala:48:{15,50}
  wire         _GEN = _mux_data_T_4[0] | mux_data_rawIn_isNaN;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:63:19, hardfloat/hardfloat/src/main/scala/recFNFromFN.scala:48:{15,76}
  wire         mux_data_rawIn_sign_1 = _mux_data_T_2[31];	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:44:18, src/main/scala/tile/FPU.scala:425:23
  wire         mux_data_rawIn_1_sign = mux_data_rawIn_sign_1;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:44:18, :63:19
  wire [7:0]   mux_data_rawIn_expIn_1 = _mux_data_T_2[30:23];	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, src/main/scala/tile/FPU.scala:425:23
  wire [22:0]  mux_data_rawIn_fractIn_1 = _mux_data_T_2[22:0];	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, src/main/scala/tile/FPU.scala:425:23
  wire         mux_data_rawIn_isZeroExpIn_1 = mux_data_rawIn_expIn_1 == 8'h0;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, :48:30
  wire         mux_data_rawIn_isZeroFractIn_1 = mux_data_rawIn_fractIn_1 == 23'h0;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :49:34
  wire [4:0]   mux_data_rawIn_normDist_1 =
    mux_data_rawIn_fractIn_1[22]
      ? 5'h0
      : mux_data_rawIn_fractIn_1[21]
          ? 5'h1
          : mux_data_rawIn_fractIn_1[20]
              ? 5'h2
              : mux_data_rawIn_fractIn_1[19]
                  ? 5'h3
                  : mux_data_rawIn_fractIn_1[18]
                      ? 5'h4
                      : mux_data_rawIn_fractIn_1[17]
                          ? 5'h5
                          : mux_data_rawIn_fractIn_1[16]
                              ? 5'h6
                              : mux_data_rawIn_fractIn_1[15]
                                  ? 5'h7
                                  : mux_data_rawIn_fractIn_1[14]
                                      ? 5'h8
                                      : mux_data_rawIn_fractIn_1[13]
                                          ? 5'h9
                                          : mux_data_rawIn_fractIn_1[12]
                                              ? 5'hA
                                              : mux_data_rawIn_fractIn_1[11]
                                                  ? 5'hB
                                                  : mux_data_rawIn_fractIn_1[10]
                                                      ? 5'hC
                                                      : mux_data_rawIn_fractIn_1[9]
                                                          ? 5'hD
                                                          : mux_data_rawIn_fractIn_1[8]
                                                              ? 5'hE
                                                              : mux_data_rawIn_fractIn_1[7]
                                                                  ? 5'hF
                                                                  : mux_data_rawIn_fractIn_1[6]
                                                                      ? 5'h10
                                                                      : mux_data_rawIn_fractIn_1[5]
                                                                          ? 5'h11
                                                                          : mux_data_rawIn_fractIn_1[4]
                                                                              ? 5'h12
                                                                              : mux_data_rawIn_fractIn_1[3]
                                                                                  ? 5'h13
                                                                                  : mux_data_rawIn_fractIn_1[2]
                                                                                      ? 5'h14
                                                                                      : mux_data_rawIn_fractIn_1[1]
                                                                                          ? 5'h15
                                                                                          : 5'h16;	// hardfloat/hardfloat/src/main/scala/primitives.scala:91:52, hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [53:0]  _mux_data_rawIn_subnormFract_T_2 =
    {31'h0, mux_data_rawIn_fractIn_1} << mux_data_rawIn_normDist_1;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :52:33, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [22:0]  mux_data_rawIn_subnormFract_1 =
    {_mux_data_rawIn_subnormFract_T_2[21:0], 1'h0};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:52:{33,46,64}
  wire [8:0]   mux_data_rawIn_adjustedExp_1 =
    (mux_data_rawIn_isZeroExpIn_1
       ? {4'hF, ~mux_data_rawIn_normDist_1}
       : {1'h0, mux_data_rawIn_expIn_1})
    + {7'h20, mux_data_rawIn_isZeroExpIn_1 ? 2'h2 : 2'h1};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, :48:30, :54:10, :55:18, :57:9, :58:14, src/main/scala/chisel3/util/Mux.scala:50:70
  wire         mux_data_rawIn_isZero_1 =
    mux_data_rawIn_isZeroExpIn_1 & mux_data_rawIn_isZeroFractIn_1;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:48:30, :49:34, :60:30
  wire         mux_data_rawIn_1_isZero = mux_data_rawIn_isZero_1;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:60:30, :63:19
  wire         mux_data_rawIn_isSpecial_1 = &(mux_data_rawIn_adjustedExp_1[8:7]);	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:57:9, :61:{32,57}
  wire         mux_data_rawIn_1_isNaN =
    mux_data_rawIn_isSpecial_1 & ~mux_data_rawIn_isZeroFractIn_1;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:49:34, :61:57, :63:19, :64:{28,31}
  wire         mux_data_rawIn_1_isInf =
    mux_data_rawIn_isSpecial_1 & mux_data_rawIn_isZeroFractIn_1;	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:49:34, :61:57, :63:19, :65:28
  wire [9:0]   mux_data_rawIn_1_sExp = {1'h0, mux_data_rawIn_adjustedExp_1};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:57:9, :63:19, :68:42
  wire [24:0]  mux_data_rawIn_1_sig =
    {1'h0,
     ~mux_data_rawIn_isZero_1,
     mux_data_rawIn_isZeroExpIn_1
       ? mux_data_rawIn_subnormFract_1
       : mux_data_rawIn_fractIn_1};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :48:30, :52:64, :60:30, :63:19, :70:{19,27,33}
  wire [2:0]   _mux_data_T_13 =
    mux_data_rawIn_1_isZero ? 3'h0 : mux_data_rawIn_1_sExp[8:6];	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:63:19, hardfloat/hardfloat/src/main/scala/recFNFromFN.scala:48:{15,50}
  wire [20:0]  mux_data_swizzledNaN_lo_hi =
    {mux_data_rawIn_sig[51:32], mux_data_rawIn_1_sign};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:63:19, src/main/scala/tile/FPU.scala:330:26, :332:8
  wire [51:0]  mux_data_swizzledNaN_lo =
    {mux_data_swizzledNaN_lo_hi,
     _mux_data_T_13[1],
     _mux_data_T_13[0] | mux_data_rawIn_1_isNaN,
     mux_data_rawIn_1_sExp[5:0],
     mux_data_rawIn_1_sig[22:0]};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:63:19, hardfloat/hardfloat/src/main/scala/recFNFromFN.scala:48:{15,76}, :50:23, :51:22, src/main/scala/tile/FPU.scala:330:26, :337:8
  wire [7:0]   mux_data_swizzledNaN_hi_lo = {mux_data_rawIn_sExp[7:1], _mux_data_T_13[2]};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:63:19, hardfloat/hardfloat/src/main/scala/recFNFromFN.scala:48:15, src/main/scala/tile/FPU.scala:330:26, :333:8, :334:8
  wire [4:0]   mux_data_swizzledNaN_hi_hi =
    {mux_data_rawIn_sign_0, _mux_data_T_4[2:1], _GEN, &(mux_data_rawIn_sig[51:32])};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:63:19, hardfloat/hardfloat/src/main/scala/recFNFromFN.scala:48:{15,76}, src/main/scala/tile/FPU.scala:330:26, :332:{8,42}
  wire [12:0]  mux_data_swizzledNaN_hi =
    {mux_data_swizzledNaN_hi_hi, mux_data_swizzledNaN_hi_lo};	// src/main/scala/tile/FPU.scala:330:26
  wire [64:0]  mux_data_swizzledNaN = {mux_data_swizzledNaN_hi, mux_data_swizzledNaN_lo};	// src/main/scala/tile/FPU.scala:330:26
  wire [63:0]  intValue = intValue_res;	// src/main/scala/tile/FPU.scala:535:26, :542:9
  wire [31:0]  intValue_smallInt = in_bits_in1[31:0];	// src/main/scala/chisel3/util/Valid.scala:123:21, src/main/scala/tile/FPU.scala:537:33
  assign intValue_res =
    in_bits_typ[1]
      ? in_bits_in1
      : {{32{~(in_bits_typ[0]) & intValue_smallInt[31]}}, intValue_smallInt};	// src/main/scala/chisel3/util/Valid.scala:123:21, src/main/scala/tile/FPU.scala:535:26, :537:33, :538:66, :539:{13,19,31}, src/main/scala/util/package.scala:155:13
  wire [64:0]  maskedNaN = _i2f_1_io_out & 65'h1EFEFFFFFFFFFFFFF;	// src/main/scala/tile/FPU.scala:407:25, :549:23
  wire [64:0]  _GEN_0 = (&(_i2f_1_io_out[63:61])) ? maskedNaN : _i2f_1_io_out;	// src/main/scala/tile/FPU.scala:243:{25,56}, :407:25, :408:10, :549:23
  wire [64:0]  dataPadded_0 = {_GEN_0[64:33], _i2f_io_out};	// src/main/scala/tile/FPU.scala:408:10, :549:23, :558:{44,55}
  wire [64:0]  mux_data =
    in_bits_wflags
      ? (mux_data_truncIdx_1 ? _GEN_0 : dataPadded_0)
      : (&{_mux_data_T_4[2:1], _GEN})
          ? mux_data_swizzledNaN
          : {mux_data_rawIn_sign_0,
             _mux_data_T_4[2:1],
             _GEN,
             mux_data_rawIn_sExp[8:0],
             mux_data_rawIn_sig[51:0]};	// hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:63:19, hardfloat/hardfloat/src/main/scala/recFNFromFN.scala:48:{15,76}, :50:{23,41}, :51:22, src/main/scala/chisel3/util/Valid.scala:123:21, src/main/scala/tile/FPU.scala:243:{25,56}, :330:26, :338:8, :408:10, :530:17, :532:12, :545:25, :558:44, :559:14, src/main/scala/util/package.scala:32:47, :33:76
  wire [4:0]   mux_exc =
    in_bits_wflags
      ? (mux_exc_truncIdx ? _i2f_1_io_exceptionFlags : _i2f_io_exceptionFlags)
      : 5'h0;	// src/main/scala/chisel3/util/Valid.scala:123:21, src/main/scala/tile/FPU.scala:530:17, :531:11, :545:25, :549:23, :560:13, src/main/scala/util/package.scala:32:47, :33:76
  reg          io_out_pipe_v;	// src/main/scala/chisel3/util/Valid.scala:129:24
  assign io_out_pipe_out_valid = io_out_pipe_v;	// src/main/scala/chisel3/util/Valid.scala:123:21, :129:24
  reg  [64:0]  io_out_pipe_b_data;	// src/main/scala/chisel3/util/Valid.scala:130:26
  assign io_out_pipe_out_bits_data = io_out_pipe_b_data;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  reg  [4:0]   io_out_pipe_b_exc;	// src/main/scala/chisel3/util/Valid.scala:130:26
  assign io_out_pipe_out_bits_exc = io_out_pipe_b_exc;	// src/main/scala/chisel3/util/Valid.scala:123:21, :130:26
  wire         io_out_valid = io_out_pipe_out_valid;	// src/main/scala/chisel3/util/Valid.scala:123:21
  wire [64:0]  io_out_bits_data_0 = io_out_pipe_out_bits_data;	// src/main/scala/chisel3/util/Valid.scala:123:21
  wire [4:0]   io_out_bits_exc_0 = io_out_pipe_out_bits_exc;	// src/main/scala/chisel3/util/Valid.scala:123:21
  always @(posedge clock) begin
    if (reset) begin
      in_pipe_v <= 1'h0;	// src/main/scala/chisel3/util/Valid.scala:129:24
      io_out_pipe_v <= 1'h0;	// src/main/scala/chisel3/util/Valid.scala:129:24
    end
    else begin
      in_pipe_v <= io_in_valid_0;	// src/main/scala/chisel3/util/Valid.scala:129:24
      io_out_pipe_v <= in_valid;	// src/main/scala/chisel3/util/Valid.scala:123:21, :129:24
    end
    if (io_in_valid_0) begin
      in_pipe_b_ldst <= io_in_bits_ldst_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_wen <= io_in_bits_wen_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_ren1 <= io_in_bits_ren1_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_ren2 <= io_in_bits_ren2_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_ren3 <= io_in_bits_ren3_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_swap12 <= io_in_bits_swap12_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_swap23 <= io_in_bits_swap23_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_typeTagIn <= io_in_bits_typeTagIn_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_typeTagOut <= io_in_bits_typeTagOut_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_fromint <= io_in_bits_fromint_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_toint <= io_in_bits_toint_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_fastpipe <= io_in_bits_fastpipe_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_fma <= io_in_bits_fma_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_div <= io_in_bits_div_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_sqrt <= io_in_bits_sqrt_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_wflags <= io_in_bits_wflags_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_rm <= io_in_bits_rm_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_typ <= io_in_bits_typ_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
      in_pipe_b_in1 <= io_in_bits_in1_0;	// src/main/scala/chisel3/util/Valid.scala:130:26
    end
    if (in_valid) begin	// src/main/scala/chisel3/util/Valid.scala:123:21
      io_out_pipe_b_data <= mux_data;	// src/main/scala/chisel3/util/Valid.scala:130:26, src/main/scala/tile/FPU.scala:530:17
      io_out_pipe_b_exc <= mux_exc;	// src/main/scala/chisel3/util/Valid.scala:130:26, src/main/scala/tile/FPU.scala:530:17
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin
      automatic logic [31:0] _RANDOM[0:4];
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [2:0] i = 3'h0; i < 3'h5; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        in_pipe_v = _RANDOM[3'h0][0];	// src/main/scala/chisel3/util/Valid.scala:129:24
        in_pipe_b_ldst = _RANDOM[3'h0][1];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_wen = _RANDOM[3'h0][2];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_ren1 = _RANDOM[3'h0][3];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_ren2 = _RANDOM[3'h0][4];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_ren3 = _RANDOM[3'h0][5];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_swap12 = _RANDOM[3'h0][6];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_swap23 = _RANDOM[3'h0][7];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_typeTagIn = _RANDOM[3'h0][9:8];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_typeTagOut = _RANDOM[3'h0][11:10];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_fromint = _RANDOM[3'h0][12];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_toint = _RANDOM[3'h0][13];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_fastpipe = _RANDOM[3'h0][14];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_fma = _RANDOM[3'h0][15];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_div = _RANDOM[3'h0][16];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_sqrt = _RANDOM[3'h0][17];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_wflags = _RANDOM[3'h0][18];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_rm = _RANDOM[3'h0][21:19];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_typ = _RANDOM[3'h0][23:22];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        in_pipe_b_in1 = {_RANDOM[3'h0][31:24], _RANDOM[3'h1], _RANDOM[3'h2][23:0]};	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        io_out_pipe_v = _RANDOM[3'h2][24];	// src/main/scala/chisel3/util/Valid.scala:129:24, :130:26
        io_out_pipe_b_data = {_RANDOM[3'h2][31:25], _RANDOM[3'h3], _RANDOM[3'h4][25:0]};	// src/main/scala/chisel3/util/Valid.scala:130:26
        io_out_pipe_b_exc = _RANDOM[3'h4][30:26];	// src/main/scala/chisel3/util/Valid.scala:130:26
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  INToRecFN i2f (	// src/main/scala/tile/FPU.scala:549:23
    .io_signedIn       (~(in_bits_typ[0])),	// src/main/scala/chisel3/util/Valid.scala:123:21, src/main/scala/tile/FPU.scala:550:{26,38}
    .io_in             (intValue),	// src/main/scala/tile/FPU.scala:542:9
    .io_roundingMode   (in_bits_rm),	// src/main/scala/chisel3/util/Valid.scala:123:21
    .io_out            (_i2f_io_out),
    .io_exceptionFlags (_i2f_io_exceptionFlags)
  );	// src/main/scala/tile/FPU.scala:549:23
  INToRecFN_1 i2f_1 (	// src/main/scala/tile/FPU.scala:549:23
    .io_signedIn       (~(in_bits_typ[0])),	// src/main/scala/chisel3/util/Valid.scala:123:21, src/main/scala/tile/FPU.scala:550:{26,38}
    .io_in             (intValue),	// src/main/scala/tile/FPU.scala:542:9
    .io_roundingMode   (in_bits_rm),	// src/main/scala/chisel3/util/Valid.scala:123:21
    .io_out            (_i2f_1_io_out),
    .io_exceptionFlags (_i2f_1_io_exceptionFlags)
  );	// src/main/scala/tile/FPU.scala:549:23
  assign io_out_bits_data = io_out_bits_data_0;
  assign io_out_bits_exc = io_out_bits_exc_0;
endmodule


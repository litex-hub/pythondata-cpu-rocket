// Generated by CIRCT firtool-1.66.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module MulAddRecFNToRaw_preMul(
  input  [1:0]  io_op,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
  input  [32:0] io_a,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_b,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_c,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
  output [23:0] io_mulAddA,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_mulAddB,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
  output [47:0] io_mulAddC,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
  output        io_toPostMul_isSigNaNAny,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_toPostMul_isNaNAOrB,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_toPostMul_isInfA,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_toPostMul_isZeroA,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_toPostMul_isInfB,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_toPostMul_isZeroB,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_toPostMul_signProd,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_toPostMul_isNaNC,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_toPostMul_isInfC,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_toPostMul_isZeroC,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
  output [9:0]  io_toPostMul_sExpSum,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
  output        io_toPostMul_doSubMags,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
                io_toPostMul_CIsDominant,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
  output [4:0]  io_toPostMul_CDom_CAlignDist,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
  output [25:0] io_toPostMul_highAlignedSigC,	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
  output        io_toPostMul_bit0AlignedSigC	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:73:16
);

  wire [1:0]  io_op_0 = io_op;
  wire [32:0] io_a_0 = io_a;
  wire [32:0] io_b_0 = io_b;
  wire [32:0] io_c_0 = io_c;
  wire        rawA_isInf;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        rawA_isZero;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        rawB_isInf;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        rawB_isZero;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        signProd;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:96:42
  wire        rawC_isNaN;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        rawC_isInf;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        rawC_isZero;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        doSubMags;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:101:42
  wire        CIsDominant;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:109:23
  wire [8:0]  rawA_exp = io_a_0[31:23];	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21
  wire        rawA_isZero_0 = rawA_exp[8:6] == 3'h0;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}
  assign rawA_isZero = rawA_isZero_0;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:52:53, :55:23
  wire        rawA_isSpecial = &(rawA_exp[8:7]);	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}
  wire        io_toPostMul_isInfA_0 = rawA_isInf;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        io_toPostMul_isZeroA_0 = rawA_isZero;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        rawA_isNaN = rawA_isSpecial & rawA_exp[6];	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:53, :55:23, :56:{33,41}
  assign rawA_isInf = rawA_isSpecial & ~(rawA_exp[6]);	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:53, :55:23, :56:41, :57:{33,36}
  wire        rawA_sign = io_a_0[32];	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23, :59:25
  wire [9:0]  rawA_sExp = {1'h0, rawA_exp};	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :55:23, :60:27
  wire [24:0] rawA_sig = {1'h0, ~rawA_isZero_0, io_a_0[22:0]};	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:52:53, :55:23, :61:{35,44,49}
  wire [8:0]  rawB_exp = io_b_0[31:23];	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21
  wire        rawB_isZero_0 = rawB_exp[8:6] == 3'h0;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}
  assign rawB_isZero = rawB_isZero_0;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:52:53, :55:23
  wire        rawB_isSpecial = &(rawB_exp[8:7]);	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}
  wire        io_toPostMul_isInfB_0 = rawB_isInf;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        io_toPostMul_isZeroB_0 = rawB_isZero;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        rawB_isNaN = rawB_isSpecial & rawB_exp[6];	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:53, :55:23, :56:{33,41}
  assign rawB_isInf = rawB_isSpecial & ~(rawB_exp[6]);	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:53, :55:23, :56:41, :57:{33,36}
  wire        rawB_sign = io_b_0[32];	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23, :59:25
  wire [9:0]  rawB_sExp = {1'h0, rawB_exp};	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :55:23, :60:27
  wire [24:0] rawB_sig = {1'h0, ~rawB_isZero_0, io_b_0[22:0]};	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:52:53, :55:23, :61:{35,44,49}
  wire [8:0]  rawC_exp = io_c_0[31:23];	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21
  wire        rawC_isZero_0 = rawC_exp[8:6] == 3'h0;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}
  assign rawC_isZero = rawC_isZero_0;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:52:53, :55:23
  wire        rawC_isSpecial = &(rawC_exp[8:7]);	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}
  wire        io_toPostMul_isNaNC_0 = rawC_isNaN;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        io_toPostMul_isInfC_0 = rawC_isInf;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        io_toPostMul_isZeroC_0 = rawC_isZero;	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  assign rawC_isNaN = rawC_isSpecial & rawC_exp[6];	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:53, :55:23, :56:{33,41}
  assign rawC_isInf = rawC_isSpecial & ~(rawC_exp[6]);	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:53, :55:23, :56:41, :57:{33,36}
  wire        rawC_sign = io_c_0[32];	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23, :59:25
  wire [9:0]  rawC_sExp = {1'h0, rawC_exp};	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :55:23, :60:27
  wire [24:0] rawC_sig = {1'h0, ~rawC_isZero_0, io_c_0[22:0]};	// hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:52:53, :55:23, :61:{35,44,49}
  assign signProd = rawA_sign ^ rawB_sign ^ io_op_0[1];	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:96:{30,42,49}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        io_toPostMul_signProd_0 = signProd;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:96:42
  wire [10:0] sExpAlignedProd =
    {rawA_sExp[9], rawA_sExp} + {rawB_sExp[9], rawB_sExp} - 11'hE5;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:99:{19,32}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  assign doSubMags = signProd ^ rawC_sign ^ io_op_0[0];	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:96:42, :101:{30,42,49}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        io_toPostMul_doSubMags_0 = doSubMags;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:101:42
  wire [10:0] sNatCAlignDist = sExpAlignedProd - {rawC_sExp[9], rawC_sExp};	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:99:32, :105:42, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire [9:0]  posNatCAlignDist = sNatCAlignDist[9:0];	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:105:42, :106:42
  wire        isMinCAlign = rawA_isZero | rawB_isZero | $signed(sNatCAlignDist) < 11'sh0;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:105:42, :107:{35,50,69}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  assign CIsDominant = ~rawC_isZero & (isMinCAlign | posNatCAlignDist < 10'h19);	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:106:42, :107:50, :109:{9,23,39,60}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        io_toPostMul_CIsDominant_0 = CIsDominant;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:109:23
  wire [6:0]  CAlignDist =
    isMinCAlign ? 7'h0 : posNatCAlignDist < 10'h4A ? posNatCAlignDist[6:0] : 7'h4A;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:106:42, :107:50, :111:12, :113:{16,34}, :114:33
  wire [77:0] mainAlignedSigC =
    $signed($signed({{25{doSubMags}} ^ rawC_sig, {53{doSubMags}}}) >>> CAlignDist);	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:101:42, :111:12, :119:{13,46,53,100}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        reduced4CExtra_reducedVec_0 = |(rawC_sig[1:0]);	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :120:{33,54}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        reduced4CExtra_reducedVec_1 = |(rawC_sig[5:2]);	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :120:{33,54}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        reduced4CExtra_reducedVec_2 = |(rawC_sig[9:6]);	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :120:{33,54}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        reduced4CExtra_reducedVec_3 = |(rawC_sig[13:10]);	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :120:{33,54}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        reduced4CExtra_reducedVec_4 = |(rawC_sig[17:14]);	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :120:{33,54}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        reduced4CExtra_reducedVec_5 = |(rawC_sig[21:18]);	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :120:{33,54}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        reduced4CExtra_reducedVec_6 = |(rawC_sig[24:22]);	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :123:{15,57}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire [1:0]  reduced4CExtra_lo_hi =
    {reduced4CExtra_reducedVec_2, reduced4CExtra_reducedVec_1};	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :124:20
  wire [2:0]  reduced4CExtra_lo = {reduced4CExtra_lo_hi, reduced4CExtra_reducedVec_0};	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :124:20
  wire [1:0]  reduced4CExtra_hi_lo =
    {reduced4CExtra_reducedVec_4, reduced4CExtra_reducedVec_3};	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :124:20
  wire [1:0]  reduced4CExtra_hi_hi =
    {reduced4CExtra_reducedVec_6, reduced4CExtra_reducedVec_5};	// hardfloat/hardfloat/src/main/scala/primitives.scala:118:30, :124:20
  wire [3:0]  reduced4CExtra_hi = {reduced4CExtra_hi_hi, reduced4CExtra_hi_lo};	// hardfloat/hardfloat/src/main/scala/primitives.scala:124:20
  wire [32:0] reduced4CExtra_shift = $signed(33'sh100000000 >>> CAlignDist[6:2]);	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:111:12, :123:28, hardfloat/hardfloat/src/main/scala/primitives.scala:76:56
  wire        reduced4CExtra =
    |({reduced4CExtra_hi[2:0], reduced4CExtra_lo}
      & {reduced4CExtra_shift[14],
         reduced4CExtra_shift[15],
         reduced4CExtra_shift[16],
         reduced4CExtra_shift[17],
         reduced4CExtra_shift[18],
         reduced4CExtra_shift[19]});	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:121:68, :129:11, hardfloat/hardfloat/src/main/scala/primitives.scala:76:56, :77:20, :78:22, :124:20
  wire [74:0] alignedSigC_hi = mainAlignedSigC[77:3];	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:119:100, :131:{12,28}
  wire [75:0] alignedSigC =
    {alignedSigC_hi,
     doSubMags
       ? (&(mainAlignedSigC[2:0])) & ~reduced4CExtra
       : (|(mainAlignedSigC[2:0])) | reduced4CExtra};	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:101:42, :119:100, :129:11, :131:12, :132:16, :133:{32,39,44,47}, :134:{39,44}
  wire [23:0] io_mulAddA_0 = rawA_sig[23:0];	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:140:16, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire [23:0] io_mulAddB_0 = rawB_sig[23:0];	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:141:16, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire [47:0] io_mulAddC_0 = alignedSigC[48:1];	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:131:12, :142:30
  wire        io_toPostMul_isSigNaNAny_0 =
    rawA_isNaN & ~(rawA_sig[22]) | rawB_isNaN & ~(rawB_sig[22]) | rawC_isNaN
    & ~(rawC_sig[22]);	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:145:{32,58}, hardfloat/hardfloat/src/main/scala/common.scala:82:{46,49,56}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire        io_toPostMul_isNaNAOrB_0 = rawA_isNaN | rawB_isNaN;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:147:42, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire [9:0]  io_toPostMul_sExpSum_0 =
    CIsDominant ? rawC_sExp : sExpAlignedProd[9:0] - 10'h18;	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:99:32, :109:23, :157:{12,53}, hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:55:23
  wire [4:0]  io_toPostMul_CDom_CAlignDist_0 = CAlignDist[4:0];	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:111:12, :160:47
  wire [25:0] io_toPostMul_highAlignedSigC_0 = alignedSigC[74:49];	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:131:12, :162:20
  wire        io_toPostMul_bit0AlignedSigC_0 = alignedSigC[0];	// hardfloat/hardfloat/src/main/scala/MulAddRecFN.scala:131:12, :163:48
  assign io_mulAddA = io_mulAddA_0;
  assign io_mulAddB = io_mulAddB_0;
  assign io_mulAddC = io_mulAddC_0;
  assign io_toPostMul_isSigNaNAny = io_toPostMul_isSigNaNAny_0;
  assign io_toPostMul_isNaNAOrB = io_toPostMul_isNaNAOrB_0;
  assign io_toPostMul_isInfA = io_toPostMul_isInfA_0;
  assign io_toPostMul_isZeroA = io_toPostMul_isZeroA_0;
  assign io_toPostMul_isInfB = io_toPostMul_isInfB_0;
  assign io_toPostMul_isZeroB = io_toPostMul_isZeroB_0;
  assign io_toPostMul_signProd = io_toPostMul_signProd_0;
  assign io_toPostMul_isNaNC = io_toPostMul_isNaNC_0;
  assign io_toPostMul_isInfC = io_toPostMul_isInfC_0;
  assign io_toPostMul_isZeroC = io_toPostMul_isZeroC_0;
  assign io_toPostMul_sExpSum = io_toPostMul_sExpSum_0;
  assign io_toPostMul_doSubMags = io_toPostMul_doSubMags_0;
  assign io_toPostMul_CIsDominant = io_toPostMul_CIsDominant_0;
  assign io_toPostMul_CDom_CAlignDist = io_toPostMul_CDom_CAlignDist_0;
  assign io_toPostMul_highAlignedSigC = io_toPostMul_highAlignedSigC_0;
  assign io_toPostMul_bit0AlignedSigC = io_toPostMul_bit0AlignedSigC_0;
endmodule


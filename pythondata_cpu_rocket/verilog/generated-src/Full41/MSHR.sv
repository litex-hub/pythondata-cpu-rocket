// Generated by CIRCT firtool-1.66.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module MSHR(
  input         clock,
                reset,
                io_allocate_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_allocate_bits_prio_0,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_allocate_bits_prio_1,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_allocate_bits_prio_2,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_allocate_bits_control,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [2:0]  io_allocate_bits_opcode,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_allocate_bits_param,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_allocate_bits_size,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [4:0]  io_allocate_bits_source,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [14:0] io_allocate_bits_tag,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [5:0]  io_allocate_bits_offset,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_allocate_bits_put,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [9:0]  io_allocate_bits_set,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input         io_allocate_bits_repeat,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_directory_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_directory_bits_dirty,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [1:0]  io_directory_bits_state,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [3:0]  io_directory_bits_clients,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [14:0] io_directory_bits_tag,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input         io_directory_bits_hit,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [2:0]  io_directory_bits_way,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output        io_status_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [9:0]  io_status_bits_set,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [14:0] io_status_bits_tag,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [2:0]  io_status_bits_way,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output        io_status_bits_blockC,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_status_bits_nestC,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input         io_schedule_ready,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output        io_schedule_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_a_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [14:0] io_schedule_bits_a_bits_tag,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [9:0]  io_schedule_bits_a_bits_set,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [2:0]  io_schedule_bits_a_bits_param,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output        io_schedule_bits_a_bits_block,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_b_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [2:0]  io_schedule_bits_b_bits_param,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [14:0] io_schedule_bits_b_bits_tag,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [9:0]  io_schedule_bits_b_bits_set,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [3:0]  io_schedule_bits_b_bits_clients,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output        io_schedule_bits_c_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [2:0]  io_schedule_bits_c_bits_opcode,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_c_bits_param,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [14:0] io_schedule_bits_c_bits_tag,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [9:0]  io_schedule_bits_c_bits_set,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [2:0]  io_schedule_bits_c_bits_way,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output        io_schedule_bits_c_bits_dirty,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_d_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_d_bits_prio_0,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_d_bits_prio_1,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_d_bits_prio_2,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_d_bits_control,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [2:0]  io_schedule_bits_d_bits_opcode,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_d_bits_param,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_d_bits_size,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [4:0]  io_schedule_bits_d_bits_source,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [14:0] io_schedule_bits_d_bits_tag,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [5:0]  io_schedule_bits_d_bits_offset,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_d_bits_put,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [9:0]  io_schedule_bits_d_bits_set,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [2:0]  io_schedule_bits_d_bits_way,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output        io_schedule_bits_d_bits_bad,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_e_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [2:0]  io_schedule_bits_e_bits_sink,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output        io_schedule_bits_x_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_schedule_bits_dir_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [9:0]  io_schedule_bits_dir_bits_set,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [2:0]  io_schedule_bits_dir_bits_way,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output        io_schedule_bits_dir_bits_data_dirty,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [1:0]  io_schedule_bits_dir_bits_data_state,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [3:0]  io_schedule_bits_dir_bits_data_clients,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output [14:0] io_schedule_bits_dir_bits_data_tag,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  output        io_schedule_bits_reload,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input         io_sinkc_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_sinkc_bits_last,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [9:0]  io_sinkc_bits_set,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [14:0] io_sinkc_bits_tag,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [4:0]  io_sinkc_bits_source,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [2:0]  io_sinkc_bits_param,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input         io_sinkc_bits_data,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_sinkd_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_sinkd_bits_last,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [2:0]  io_sinkd_bits_opcode,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_sinkd_bits_param,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_sinkd_bits_source,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_sinkd_bits_sink,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input         io_sinkd_bits_denied,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_sinke_valid,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [2:0]  io_sinke_bits_sink,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [9:0]  io_nestedwb_set,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input  [14:0] io_nestedwb_tag,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
  input         io_nestedwb_b_toN,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_nestedwb_b_toB,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_nestedwb_b_clr_dirty,	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
                io_nestedwb_c_set_dirty	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:86:14
);

  reg             meta_valid;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:99:27
  wire            io_allocate_valid_0 = io_allocate_valid;
  wire            io_allocate_bits_prio_0_0 = io_allocate_bits_prio_0;
  wire            io_allocate_bits_prio_1_0 = io_allocate_bits_prio_1;
  wire            io_allocate_bits_prio_2_0 = io_allocate_bits_prio_2;
  wire            io_allocate_bits_control_0 = io_allocate_bits_control;
  wire [2:0]      io_allocate_bits_opcode_0 = io_allocate_bits_opcode;
  wire [2:0]      io_allocate_bits_param_0 = io_allocate_bits_param;
  wire [2:0]      io_allocate_bits_size_0 = io_allocate_bits_size;
  wire [4:0]      io_allocate_bits_source_0 = io_allocate_bits_source;
  wire [14:0]     io_allocate_bits_tag_0 = io_allocate_bits_tag;
  wire [5:0]      io_allocate_bits_offset_0 = io_allocate_bits_offset;
  wire [5:0]      io_allocate_bits_put_0 = io_allocate_bits_put;
  wire [9:0]      io_allocate_bits_set_0 = io_allocate_bits_set;
  wire            io_allocate_bits_repeat_0 = io_allocate_bits_repeat;
  wire            io_directory_valid_0 = io_directory_valid;
  wire            io_directory_bits_dirty_0 = io_directory_bits_dirty;
  wire [1:0]      io_directory_bits_state_0 = io_directory_bits_state;
  wire [3:0]      io_directory_bits_clients_0 = io_directory_bits_clients;
  wire [14:0]     io_directory_bits_tag_0 = io_directory_bits_tag;
  wire            io_directory_bits_hit_0 = io_directory_bits_hit;
  wire [2:0]      io_directory_bits_way_0 = io_directory_bits_way;
  wire            io_schedule_ready_0 = io_schedule_ready;
  wire            io_sinkc_valid_0 = io_sinkc_valid;
  wire            io_sinkc_bits_last_0 = io_sinkc_bits_last;
  wire [9:0]      io_sinkc_bits_set_0 = io_sinkc_bits_set;
  wire [14:0]     io_sinkc_bits_tag_0 = io_sinkc_bits_tag;
  wire [4:0]      io_sinkc_bits_source_0 = io_sinkc_bits_source;
  wire [2:0]      io_sinkc_bits_param_0 = io_sinkc_bits_param;
  wire            io_sinkc_bits_data_0 = io_sinkc_bits_data;
  wire            io_sinkd_valid_0 = io_sinkd_valid;
  wire            io_sinkd_bits_last_0 = io_sinkd_bits_last;
  wire [2:0]      io_sinkd_bits_opcode_0 = io_sinkd_bits_opcode;
  wire [2:0]      io_sinkd_bits_param_0 = io_sinkd_bits_param;
  wire [2:0]      io_sinkd_bits_source_0 = io_sinkd_bits_source;
  wire [2:0]      io_sinkd_bits_sink_0 = io_sinkd_bits_sink;
  wire            io_sinkd_bits_denied_0 = io_sinkd_bits_denied;
  wire            io_sinke_valid_0 = io_sinke_valid;
  wire [2:0]      io_sinke_bits_sink_0 = io_sinke_bits_sink;
  wire [9:0]      io_nestedwb_set_0 = io_nestedwb_set;
  wire [14:0]     io_nestedwb_tag_0 = io_nestedwb_tag;
  wire            io_nestedwb_b_toN_0 = io_nestedwb_b_toN;
  wire            io_nestedwb_b_toB_0 = io_nestedwb_b_toB;
  wire            io_nestedwb_b_clr_dirty_0 = io_nestedwb_b_clr_dirty;
  wire            io_nestedwb_c_set_dirty_0 = io_nestedwb_c_set_dirty;
  wire [1:0]      invalid_state = 2'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:268:21
  wire [2:0]      io_schedule_bits_a_bits_source = 3'h0;
  wire [2:0]      io_schedule_bits_c_bits_source = 3'h0;
  wire [2:0]      io_schedule_bits_d_bits_sink = 3'h0;
  wire            io_schedule_bits_x_bits_fail = 1'h0;
  wire            invalid_dirty = 1'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:268:21
  wire [14:0]     invalid_tag = 15'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:268:21
  wire [3:0]      invalid_clients = 4'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:268:21
  wire            allocate_as_full_prio_0 = io_allocate_bits_prio_0_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire            allocate_as_full_prio_1 = io_allocate_bits_prio_1_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire            allocate_as_full_prio_2 = io_allocate_bits_prio_2_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire            allocate_as_full_control = io_allocate_bits_control_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire [2:0]      allocate_as_full_opcode = io_allocate_bits_opcode_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire [2:0]      allocate_as_full_param = io_allocate_bits_param_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire [2:0]      allocate_as_full_size = io_allocate_bits_size_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire [4:0]      allocate_as_full_source = io_allocate_bits_source_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire [14:0]     allocate_as_full_tag = io_allocate_bits_tag_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire [5:0]      allocate_as_full_offset = io_allocate_bits_offset_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire [5:0]      allocate_as_full_put = io_allocate_bits_put_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire [9:0]      allocate_as_full_set = io_allocate_bits_set_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:504:34
  wire            io_status_bits_blockC_0 = ~meta_valid;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:99:27, :168:28
  wire            no_wait;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:183:83
  reg             request_valid;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30
  wire            io_status_valid_0 = request_valid;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30
  reg             request_prio_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire            io_schedule_bits_d_bits_prio_0_0 = request_prio_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg             request_prio_1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire            io_schedule_bits_d_bits_prio_1_0 = request_prio_1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg             request_prio_2;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire            io_schedule_bits_d_bits_prio_2_0 = request_prio_2;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg             request_control;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire            io_schedule_bits_d_bits_control_0 = request_control;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg  [2:0]      request_opcode;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [2:0]      io_schedule_bits_d_bits_opcode_0 = request_opcode;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg  [2:0]      request_param;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg  [2:0]      request_size;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [2:0]      io_schedule_bits_d_bits_size_0 = request_size;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg  [4:0]      request_source;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [4:0]      io_schedule_bits_d_bits_source_0 = request_source;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg  [14:0]     request_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [14:0]     io_status_bits_tag_0 = request_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [14:0]     io_schedule_bits_a_bits_tag_0 = request_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [14:0]     io_schedule_bits_d_bits_tag_0 = request_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg  [5:0]      request_offset;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [5:0]      io_schedule_bits_d_bits_offset_0 = request_offset;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg  [5:0]      request_put;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [5:0]      io_schedule_bits_d_bits_put_0 = request_put;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg  [9:0]      request_set;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [9:0]      io_status_bits_set_0 = request_set;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [9:0]      io_schedule_bits_a_bits_set_0 = request_set;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [9:0]      io_schedule_bits_b_bits_set_0 = request_set;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [9:0]      io_schedule_bits_c_bits_set_0 = request_set;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [9:0]      io_schedule_bits_d_bits_set_0 = request_set;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  wire [9:0]      io_schedule_bits_dir_bits_set_0 = request_set;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
  reg             meta_dirty;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  wire            io_schedule_bits_c_bits_dirty_0 = meta_dirty;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  reg  [1:0]      meta_state;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  reg  [3:0]      meta_clients;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  reg  [14:0]     meta_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  wire [14:0]     io_schedule_bits_c_bits_tag_0 = meta_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  reg             meta_hit;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  reg  [2:0]      meta_way;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  wire [2:0]      io_status_bits_way_0 = meta_way;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  wire [2:0]      io_schedule_bits_c_bits_way_0 = meta_way;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  wire [2:0]      io_schedule_bits_d_bits_way_0 = meta_way;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  wire [2:0]      io_schedule_bits_dir_bits_way_0 = meta_way;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
  wire [2:0]      final_meta_writeback_way = meta_way;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :215:38
  reg             s_rprobe;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:121:33
  reg             w_rprobeackfirst;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:122:33
  reg             w_rprobeacklast;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:123:33
  reg             s_release;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:124:33
  reg             w_releaseack;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:125:33
  reg             s_pprobe;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:126:33
  reg             s_acquire;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:127:33
  reg             s_flush;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:128:33
  reg             w_grantfirst;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:129:33
  reg             w_grantlast;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:130:33
  reg             w_grant;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:131:33
  reg             w_pprobeackfirst;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:132:33
  reg             w_pprobeacklast;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:133:33
  reg             w_pprobeack;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33
  reg             s_grantack;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:136:33
  reg             s_execute;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:137:33
  reg             w_grantack;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:138:33
  reg             s_writeback;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:139:33
  reg  [2:0]      sink;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:147:17
  wire [2:0]      io_schedule_bits_e_bits_sink_0 = sink;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:147:17
  reg             gotT;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:148:17
  reg             bad_grant;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:149:22
  wire            io_schedule_bits_d_bits_bad_0 = bad_grant;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:149:22
  reg  [3:0]      probes_done;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:150:24
  reg  [3:0]      probes_toN;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:151:23
  reg             probes_noT;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:152:23
  wire            io_status_bits_blockB =
    ~meta_valid | (~w_releaseack | ~w_rprobeacklast | ~w_pprobeacklast) & ~w_grantfirst;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:99:27, :123:33, :125:33, :129:33, :133:33, :168:{28,40,45,59,62,79,82,100,103}
  wire            io_status_bits_nestB =
    meta_valid & w_releaseack & w_rprobeacklast & w_pprobeacklast & ~w_grantfirst;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:99:27, :123:33, :125:33, :129:33, :133:33, :168:103, :169:{39,55,74,93}
  wire            io_status_bits_nestC_0 =
    meta_valid & (~w_rprobeackfirst | ~w_pprobeackfirst | ~w_grantfirst);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:99:27, :122:33, :129:33, :132:33, :168:103, :173:{39,43,61,64,82}
  assign no_wait =
    w_rprobeacklast & w_releaseack & w_grantlast & w_pprobeacklast & w_grantack;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:123:33, :125:33, :130:33, :133:33, :138:33, :183:{33,49,64,83}
  wire            io_schedule_bits_reload_0 = no_wait;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:183:83
  wire            io_schedule_bits_a_valid_0 = ~s_acquire & s_release & s_pprobe;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:124:33, :126:33, :127:33, :184:{31,42,55}
  wire            io_schedule_bits_b_valid_0 = ~s_rprobe | ~s_pprobe;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:121:33, :126:33, :185:{31,41,44}
  wire            io_schedule_bits_c_valid_0 = ~s_release & w_rprobeackfirst;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:122:33, :124:33, :186:{32,43}
  wire            io_schedule_bits_d_valid_0 = ~s_execute & w_pprobeack & w_grant;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:131:33, :134:33, :137:33, :187:{31,42,57}
  wire            io_schedule_bits_e_valid_0 = ~s_grantack & w_grantfirst;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:129:33, :136:33, :188:{31,43}
  wire            io_schedule_bits_x_valid_0 = ~s_flush & w_releaseack;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:125:33, :128:33, :189:{31,40}
  wire            io_schedule_bits_dir_valid_0 =
    ~s_release & w_rprobeackfirst | ~s_writeback & no_wait;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:122:33, :124:33, :139:33, :183:83, :186:32, :190:{45,66,70,83}
  wire            io_schedule_valid_0 =
    io_schedule_bits_a_valid_0 | io_schedule_bits_b_valid_0 | io_schedule_bits_c_valid_0
    | io_schedule_bits_d_valid_0 | io_schedule_bits_e_valid_0 | io_schedule_bits_x_valid_0
    | io_schedule_bits_dir_valid_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:192:{49,77,105}, :193:{49,77,105}
  wire [1:0]      req_clientBit_lo = {request_source == 5'h18, request_source == 5'h1C};	// src/main/scala/diplomacy/Parameters.scala:46:9, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire [1:0]      req_clientBit_hi = {request_source == 5'h10, request_source == 5'h14};	// src/main/scala/diplomacy/Parameters.scala:46:9, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire [3:0]      req_clientBit = {req_clientBit_hi, req_clientBit_lo};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire            _excluded_client_T_1 = request_opcode == 3'h6;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:271:14
  wire            req_needT =
    ~(request_opcode[2]) | request_opcode == 3'h5 & request_param == 3'h1
    | (_excluded_client_T_1 | (&request_opcode)) & (|request_param);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:269:{5,12,16}, :270:{13,33,42,70}, :271:{14,42,52,80,89}
  wire            req_acquire = _excluded_client_T_1 | (&request_opcode);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :219:53, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:271:{14,52}
  wire            meta_no_clients = ~(|meta_clients);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :220:{25,39}
  wire            req_promoteT =
    req_acquire & (meta_hit ? meta_no_clients & (&meta_state) : gotT);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :148:17, :219:53, :220:25, :221:{34,40,67,81}
  wire [1:0]      _final_meta_writeback_state_T_6 = {1'h1, ~req_acquire};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:219:53, :238:40
  wire [14:0]     final_meta_writeback_tag =
    request_prio_2 | request_control ? meta_tag : request_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :100:17, :215:38, :223:52, :228:53, :247:30
  wire            final_meta_writeback_hit =
    bad_grant ? meta_hit : request_prio_2 | ~request_control;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :100:17, :149:22, :215:38, :223:52, :227:34, :228:53, :234:30, :248:30, :251:20, :252:21
  wire            final_meta_writeback_dirty =
    ~bad_grant
    & (request_prio_2
         ? meta_dirty | request_opcode[0]
         : request_control
             ? ~meta_hit & meta_dirty
             : meta_hit & meta_dirty | ~(request_opcode[2]));	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :100:17, :149:22, :215:38, :223:52, :224:{34,48,65}, :228:53, :229:21, :230:36, :236:{32,45,60,63}, :251:20, :252:21, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:269:12
  wire [1:0]      final_meta_writeback_state =
    bad_grant
      ? {1'h0, meta_hit}
      : request_prio_2
          ? (request_param != 3'h3 & meta_state == 2'h2 ? 2'h3 : meta_state)
          : request_control
              ? (meta_hit ? 2'h0 : meta_state)
              : req_needT
                  ? _final_meta_writeback_state_T_6
                  : meta_hit
                      ? ((&meta_state)
                           ? {1'h1, ~(meta_no_clients & req_acquire)}
                           : {meta_state == 2'h2, 1'h1})
                      : gotT ? _final_meta_writeback_state_T_6 : 2'h1;	// src/main/scala/chisel3/util/Mux.scala:77:13, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :100:17, :148:17, :149:22, :215:38, :219:53, :220:25, :221:81, :223:52, :225:{34,40,55,64,78}, :228:53, :229:21, :231:36, :237:{32,38}, :238:40, :239:{40,55}, :244:{55,72}, :251:20, :252:21, :257:36, :263:36, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:270:70
  wire [3:0]      final_meta_writeback_clients =
    bad_grant
      ? (meta_hit ? meta_clients & ~probes_toN : 4'h0)
      : request_prio_2
          ? meta_clients
            & ~(request_param == 3'h1 | request_param == 3'h2 | request_param == 3'h5
                  ? req_clientBit
                  : 4'h0)
          : request_control
              ? ({4{~meta_hit}} | ~probes_toN) & meta_clients
              : (meta_hit ? meta_clients & ~probes_toN : 4'h0)
                | (req_acquire ? req_clientBit : 4'h0);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :100:17, :149:22, :151:23, :215:38, :219:53, :223:52, :226:{34,50,52,56}, :228:53, :229:21, :230:36, :232:{36,54}, :245:{34,40,64,66,84}, :246:40, :251:20, :252:21, :258:{36,52,54}, :264:36, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10, :282:{11,34,43,66,75}
  wire            honour_BtoT = meta_hit & (|(meta_clients & req_clientBit));	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :276:{30,47,64}, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire [3:0]      excluded_client =
    meta_hit & request_prio_0
    & (_excluded_client_T_1 | (&request_opcode) | request_opcode == 3'h4)
      ? req_clientBit
      : 4'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :100:17, :279:{28,38,57}, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10, :271:{14,52}, :279:{40,77,87}
  wire [2:0]      io_schedule_bits_a_bits_param_0 =
    {1'h0, req_needT ? (meta_hit ? 2'h2 : 2'h1) : 2'h0};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :282:{35,41,56}, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:270:70
  wire            io_schedule_bits_a_bits_block_0 =
    request_size != 3'h6 | ~(request_opcode == 3'h0 | (&request_opcode));	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :283:{51,91}, :284:{38,55,71}, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:271:52
  wire [2:0]      io_schedule_bits_b_bits_param_0 =
    s_rprobe ? (request_prio_1 ? request_param : {1'h0, req_needT ? 2'h2 : 2'h1}) : 3'h2;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :121:33, :286:{41,61,97}, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:270:70
  wire [14:0]     io_schedule_bits_b_bits_tag_0 = s_rprobe ? request_tag : meta_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :100:17, :121:33, :287:41
  wire [3:0]      io_schedule_bits_b_bits_clients_0 = meta_clients & ~excluded_client;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :279:28, :289:{51,53}
  wire [2:0]      io_schedule_bits_c_bits_opcode_0 = {2'h3, meta_dirty};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :290:41
  wire [2:0]      io_schedule_bits_c_bits_param_0 = meta_state == 2'h1 ? 3'h2 : 3'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :291:{41,53}
  wire [2:0]      io_schedule_bits_d_bits_param_0 =
    req_acquire
      ? (request_param == 3'h1
           ? 3'h1
           : request_param == 3'h2
               ? {1'h0, honour_BtoT ? 2'h2 : 2'h1}
               : request_param == 3'h0 ? {2'h0, req_promoteT} : request_param)
      : request_param;	// src/main/scala/chisel3/util/Mux.scala:77:13, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :219:53, :221:34, :276:30, :298:41, :301:53
  wire            io_schedule_bits_dir_bits_data_dirty_0 =
    s_release & final_meta_writeback_dirty;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:124:33, :215:38, :310:41
  wire [1:0]      io_schedule_bits_dir_bits_data_state_0 =
    s_release ? final_meta_writeback_state : 2'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:124:33, :215:38, :310:41
  wire [3:0]      io_schedule_bits_dir_bits_data_clients_0 =
    s_release ? final_meta_writeback_clients : 4'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:124:33, :215:38, :310:41
  wire [14:0]     io_schedule_bits_dir_bits_data_tag_0 =
    s_release ? final_meta_writeback_tag : 15'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:124:33, :215:38, :310:41
  wire            evict_c = |meta_clients;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :220:39, :315:27
  wire [3:0]      _GEN = {3'h1, ~meta_dirty};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :317:26, :319:{26,32}
  wire [3:0][3:0] _GEN_0 =
    {{{2'h1, ~evict_c, ~meta_dirty}},
     {_GEN},
     {{3'h0, ~evict_c}},
     {{~(|meta_state), 3'h0}}};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :104:22, :221:81, :291:53, :314:26, :315:27, :317:26, :318:{26,32}, :319:{26,32}, :320:{26,32}, :321:26
  wire [3:0]      evict = meta_hit ? 4'h8 : _GEN_0[meta_state];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :221:81, :291:53, :314:26, :317:26, :318:26, :319:26, :320:26, :323:{17,23}
  wire            before_c = |meta_clients;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :220:39, :315:27
  wire [3:0][3:0] _GEN_1 =
    {{{2'h1, ~before_c, ~meta_dirty}},
     {_GEN},
     {{3'h0, ~before_c}},
     {{~(|meta_state), 3'h0}}};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :104:22, :221:81, :291:53, :314:26, :315:27, :317:26, :318:{26,32}, :319:{26,32}, :320:{26,32}, :321:26
  wire [3:0]      before_0 = meta_hit ? _GEN_1[meta_state] : 4'h8;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :221:81, :291:53, :314:26, :317:26, :318:26, :319:26, :320:26, :323:{17,23}
  wire            after_c = |final_meta_writeback_clients;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :315:27
  wire [3:0]      _GEN_2 = {3'h1, ~final_meta_writeback_dirty};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :317:26, :319:{26,32}
  wire [3:0][3:0] _GEN_3 =
    {{{2'h1, ~after_c, ~final_meta_writeback_dirty}},
     {_GEN_2},
     {{3'h0, ~after_c}},
     {{~(|final_meta_writeback_state), 3'h0}}};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :314:26, :315:27, :317:26, :318:{26,32}, :319:{26,32}, :320:{26,32}, :321:26
  wire [3:0]      after = _GEN_3[final_meta_writeback_state];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :314:26, :317:26, :318:26, :319:26, :320:26
  wire [1:0]      probe_bit_lo =
    {io_sinkc_bits_source_0 == 5'h18, io_sinkc_bits_source_0 == 5'h1C};	// src/main/scala/diplomacy/Parameters.scala:46:9, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire [1:0]      probe_bit_hi =
    {io_sinkc_bits_source_0 == 5'h10, io_sinkc_bits_source_0 == 5'h14};	// src/main/scala/diplomacy/Parameters.scala:46:9, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire [3:0]      probe_bit = {probe_bit_hi, probe_bit_lo};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire            last_probe =
    (probes_done | probe_bit) == (meta_clients & ~excluded_client);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :150:24, :279:28, :289:53, :459:{33,46,64}, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire            probe_toN =
    io_sinkc_bits_param_0 == 3'h1 | io_sinkc_bits_param_0 == 3'h2
    | io_sinkc_bits_param_0 == 3'h5;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:282:{11,34,43,66,75}
  wire            set_pprobeack =
    last_probe & (io_sinkc_bits_last_0 | ~(|request_offset));	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :459:46, :475:{36,59,77}
  wire            _new_meta_T = io_allocate_valid_0 & io_allocate_bits_repeat_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:505:40
  wire            new_meta_dirty =
    _new_meta_T ? final_meta_writeback_dirty : io_directory_bits_dirty_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :505:{21,40}
  wire [1:0]      new_meta_state =
    _new_meta_T ? final_meta_writeback_state : io_directory_bits_state_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :505:{21,40}
  wire [3:0]      new_meta_clients =
    _new_meta_T ? final_meta_writeback_clients : io_directory_bits_clients_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :505:{21,40}
  wire [14:0]     new_meta_tag =
    _new_meta_T ? final_meta_writeback_tag : io_directory_bits_tag_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :505:{21,40}
  wire            new_meta_hit =
    _new_meta_T ? final_meta_writeback_hit : io_directory_bits_hit_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :505:{21,40}
  wire [2:0]      new_meta_way =
    _new_meta_T ? final_meta_writeback_way : io_directory_bits_way_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :505:{21,40}
  wire            new_request_prio_0 =
    io_allocate_valid_0 ? allocate_as_full_prio_0 : request_prio_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire            new_request_prio_1 =
    io_allocate_valid_0 ? allocate_as_full_prio_1 : request_prio_1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire            new_request_prio_2 =
    io_allocate_valid_0 ? allocate_as_full_prio_2 : request_prio_2;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire            new_request_control =
    io_allocate_valid_0 ? allocate_as_full_control : request_control;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire [2:0]      new_request_opcode =
    io_allocate_valid_0 ? allocate_as_full_opcode : request_opcode;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire [2:0]      new_request_param =
    io_allocate_valid_0 ? allocate_as_full_param : request_param;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire [2:0]      new_request_size =
    io_allocate_valid_0 ? allocate_as_full_size : request_size;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire [4:0]      new_request_source =
    io_allocate_valid_0 ? allocate_as_full_source : request_source;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire [14:0]     new_request_tag =
    io_allocate_valid_0 ? allocate_as_full_tag : request_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire [5:0]      new_request_offset =
    io_allocate_valid_0 ? allocate_as_full_offset : request_offset;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire [5:0]      new_request_put =
    io_allocate_valid_0 ? allocate_as_full_put : request_put;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire [9:0]      new_request_set =
    io_allocate_valid_0 ? allocate_as_full_set : request_set;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :504:34, :506:24
  wire            _new_skipProbe_T = new_request_opcode == 3'h6;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:506:24, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:271:14
  wire            new_needT =
    ~(new_request_opcode[2]) | new_request_opcode == 3'h5 & new_request_param == 3'h1
    | (_new_skipProbe_T | (&new_request_opcode)) & (|new_request_param);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:506:24, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:269:{5,12,16}, :270:{13,33,42,70}, :271:{14,42,52,80,89}
  wire [1:0]      new_clientBit_lo =
    {new_request_source == 5'h18, new_request_source == 5'h1C};	// src/main/scala/diplomacy/Parameters.scala:46:9, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:506:24, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire [1:0]      new_clientBit_hi =
    {new_request_source == 5'h10, new_request_source == 5'h14};	// src/main/scala/diplomacy/Parameters.scala:46:9, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:506:24, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire [3:0]      new_clientBit = {new_clientBit_hi, new_clientBit_lo};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
  wire [3:0]      new_skipProbe =
    _new_skipProbe_T | (&new_request_opcode) | new_request_opcode == 3'h4
      ? new_clientBit
      : 4'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:506:24, :509:26, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10, :271:{14,52}, :279:{40,77,87}
  wire            prior_c = |final_meta_writeback_clients;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :315:27
  wire [3:0][3:0] _GEN_4 =
    {{{2'h1, ~prior_c, ~final_meta_writeback_dirty}},
     {_GEN_2},
     {{3'h0, ~prior_c}},
     {{~(|final_meta_writeback_state), 3'h0}}};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :314:26, :315:27, :317:26, :318:{26,32}, :319:{26,32}, :320:{26,32}, :321:26
  wire [3:0]      prior = _GEN_4[final_meta_writeback_state];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:215:38, :314:26, :317:26, :318:26, :319:26, :320:26
  wire            _GEN_5 = io_directory_valid_0 | _new_meta_T;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:505:40, :539:28
  `ifndef SYNTHESIS	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14
    always @(posedge clock) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14
      automatic logic _GEN_6;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:104:35, :105:14
      automatic logic _GEN_7;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:108:22
      automatic logic _GEN_8;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:111:33, :112:14
      automatic logic _GEN_9;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:363:{21,42}, :364:13
      automatic logic _GEN_10 = before_0 == 4'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :364:13
      automatic logic _GEN_11 = before_0 == 4'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :365:13
      automatic logic _GEN_12 = before_0 == 4'h8;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :375:15
      automatic logic _GEN_13 = after == 4'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :375:15
      automatic logic _GEN_14;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15
      automatic logic _GEN_15 = after == 4'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :376:15
      automatic logic _GEN_16 = after == 4'h7;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :377:15
      automatic logic _GEN_17 = after == 4'h5;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :378:15
      automatic logic _GEN_18 = after == 4'h4;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :379:15
      automatic logic _GEN_19 = after == 4'h6;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :380:15
      automatic logic _GEN_20 = after == 4'h3;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :381:15
      automatic logic _GEN_21 = after == 4'h2;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :382:15
      automatic logic _GEN_22 = after == 4'h8;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :384:15
      automatic logic _GEN_23 = before_0 == 4'h7;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :402:15
      automatic logic _GEN_24 = before_0 == 4'h5;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :411:15
      automatic logic _GEN_25 = before_0 == 4'h6;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :420:15
      automatic logic _GEN_26 = before_0 == 4'h4;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :429:15
      automatic logic _GEN_27 = before_0 == 4'h3;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :438:15
      automatic logic _GEN_28 = before_0 == 4'h2;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :447:15
      automatic logic _GEN_29 = _new_meta_T & ~reset;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14, :505:40, :522:11
      _GEN_6 = meta_valid & ~(|meta_state) & ~reset;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:99:27, :100:17, :104:{22,35}, :105:14
      _GEN_7 = meta_state == 2'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :108:22
      _GEN_8 = meta_valid & meta_state == 2'h2 & ~reset;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:99:27, :100:17, :105:14, :111:{22,33}, :112:14
      _GEN_9 = ~s_release & w_rprobeackfirst & io_schedule_ready_0 & ~reset;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14, :122:33, :124:33, :186:32, :363:{21,42}, :364:13
      _GEN_14 = ~s_writeback & no_wait & io_schedule_ready_0 & ~reset;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14, :139:33, :183:83, :190:70, :374:{23,35}, :375:15
      if (_GEN_6 & (|meta_clients)) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :104:35, :105:{14,29}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14
          $error("Assertion failed\n    at MSHR.scala:105 assert (!meta.clients.orR)\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14
      end
      if (_GEN_6 & meta_dirty) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :104:35, :105:14, :106:14
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:106:14
          $error("Assertion failed\n    at MSHR.scala:106 assert (!meta.dirty)\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:106:14
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:106:14
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:106:14
      end
      if (meta_valid & _GEN_7 & ~reset & meta_dirty) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:99:27, :100:17, :105:14, :108:{22,34}, :109:14
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:109:14
          $error("Assertion failed\n    at MSHR.scala:109 assert (!meta.dirty)\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:109:14
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:109:14
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:109:14
      end
      if (_GEN_8 & ~(|meta_clients)) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :105:29, :111:33, :112:14
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:112:14
          $error("Assertion failed\n    at MSHR.scala:112 assert (meta.clients.orR)\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:112:14
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:112:14
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:112:14
      end
      if (_GEN_8 & (|(meta_clients & meta_clients - 4'h1))) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :111:33, :112:14, :113:{14,29,45,53}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:113:14
          $error("Assertion failed\n    at MSHR.scala:113 assert ((meta.clients & (meta.clients - 1.U)) === 0.U) // at most one\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:113:14
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:113:14
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:113:14
      end
      if (~reset & ~(~io_status_bits_nestB | ~io_status_bits_blockB)) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14, :179:{10,11,33,36}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:179:10
          $error("Assertion failed\n    at MSHR.scala:179 assert (!io.status.bits.nestB || !io.status.bits.blockB)\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:179:10
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:179:10
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:179:10
      end
      if (~reset & ~(~io_status_bits_nestC_0 | ~io_status_bits_blockC_0)) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14, :180:{10,11,33,36}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:180:10
          $error("Assertion failed\n    at MSHR.scala:180 assert (!io.status.bits.nestC || !io.status.bits.blockC)\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:180:10
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:180:10
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:180:10
      end
      if (bad_grant & meta_hit & ~reset & ~(~meta_valid | _GEN_7)) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:99:27, :100:17, :105:14, :108:22, :149:22, :168:28, :252:21, :254:{14,27}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:254:14
          $error("Assertion failed\n    at MSHR.scala:254 assert (!meta_valid || meta.state === BRANCH)\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:254:14
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:254:14
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:254:14
      end
      if (_GEN_9 & evict == 4'h1) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :363:{21,42}, :364:13
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13
          $error("Assertion failed: State transition from S_BRANCH to evicted should be impossible (false,true,true,false,true)\n    at MSHR.scala:346 assert(!(evict === from.code), cf\"State transition from ${from} to evicted should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13
      end
      if (_GEN_9 & _GEN_10) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:363:{21,42}, :364:13
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13
          $error("Assertion failed: State transition from S_BRANCH to flushed should be impossible (false,true,true,false,true)\n    at MSHR.scala:351 assert(!(before === from.code), cf\"State transition from ${from} to flushed should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13
      end
      if (_GEN_9 & evict == 4'h0) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :363:{21,42}, :364:13, :365:13
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13
          $error("Assertion failed: State transition from S_BRANCH_C to evicted should be impossible (false,true,true,false,true)\n    at MSHR.scala:346 assert(!(evict === from.code), cf\"State transition from ${from} to evicted should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13
      end
      if (_GEN_9 & _GEN_11) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:363:{21,42}, :364:13, :365:13
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13
          $error("Assertion failed: State transition from S_BRANCH_C to flushed should be impossible (false,true,true,false,true)\n    at MSHR.scala:351 assert(!(before === from.code), cf\"State transition from ${from} to flushed should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13
      end
      if (_GEN_14 & _GEN_12 & _GEN_13) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:375:15
          $error("Assertion failed: State transition from S_INVALID to S_BRANCH should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:375:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:375:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:375:15
      end
      if (_GEN_14 & _GEN_12 & _GEN_15) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :376:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:376:15
          $error("Assertion failed: State transition from S_INVALID to S_BRANCH_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:376:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:376:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:376:15
      end
      if (_GEN_14 & _GEN_12 & _GEN_17) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :378:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:378:15
          $error("Assertion failed: State transition from S_INVALID to S_TIP_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:378:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:378:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:378:15
      end
      if (_GEN_14 & _GEN_12 & _GEN_18) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :379:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:379:15
          $error("Assertion failed: State transition from S_INVALID to S_TIP_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:379:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:379:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:379:15
      end
      if (_GEN_14 & _GEN_12 & _GEN_21) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :382:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:382:15
          $error("Assertion failed: State transition from S_INVALID to S_TRUNK_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:382:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:382:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:382:15
      end
      if (_GEN_14 & _GEN_10 & _GEN_22) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13, :374:{23,35}, :375:15, :384:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:384:15
          $error("Assertion failed: State transition from S_BRANCH to S_INVALID should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:384:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:384:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:384:15
      end
      if (_GEN_14 & _GEN_10 & _GEN_15) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13, :374:{23,35}, :375:15, :376:15, :385:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:385:15
          $error("Assertion failed: State transition from S_BRANCH to S_BRANCH_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:385:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:385:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:385:15
      end
      if (_GEN_14 & _GEN_10 & _GEN_16) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13, :374:{23,35}, :375:15, :377:15, :386:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:386:15
          $error("Assertion failed: State transition from S_BRANCH to S_TIP should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:386:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:386:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:386:15
      end
      if (_GEN_14 & _GEN_10 & _GEN_17) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13, :374:{23,35}, :375:15, :378:15, :387:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:387:15
          $error("Assertion failed: State transition from S_BRANCH to S_TIP_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:387:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:387:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:387:15
      end
      if (_GEN_14 & _GEN_10 & _GEN_18) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13, :374:{23,35}, :375:15, :379:15, :388:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:388:15
          $error("Assertion failed: State transition from S_BRANCH to S_TIP_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:388:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:388:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:388:15
      end
      if (_GEN_14 & _GEN_10 & _GEN_19) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13, :374:{23,35}, :375:15, :380:15, :389:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:389:15
          $error("Assertion failed: State transition from S_BRANCH to S_TIP_D should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:389:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:389:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:389:15
      end
      if (_GEN_14 & _GEN_10 & _GEN_20) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13, :374:{23,35}, :375:15, :381:15, :390:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:390:15
          $error("Assertion failed: State transition from S_BRANCH to S_TRUNK_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:390:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:390:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:390:15
      end
      if (_GEN_14 & _GEN_10 & _GEN_21) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:364:13, :374:{23,35}, :375:15, :382:15, :391:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:391:15
          $error("Assertion failed: State transition from S_BRANCH to S_TRUNK_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:391:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:391:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:391:15
      end
      if (_GEN_14 & _GEN_11 & _GEN_22) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13, :374:{23,35}, :375:15, :384:15, :393:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:393:15
          $error("Assertion failed: State transition from S_BRANCH_C to S_INVALID should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:393:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:393:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:393:15
      end
      if (_GEN_14 & _GEN_11 & _GEN_13) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13, :374:{23,35}, :375:15, :394:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:394:15
          $error("Assertion failed: State transition from S_BRANCH_C to S_BRANCH should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:394:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:394:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:394:15
      end
      if (_GEN_14 & _GEN_11 & _GEN_16) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13, :374:{23,35}, :375:15, :377:15, :395:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:395:15
          $error("Assertion failed: State transition from S_BRANCH_C to S_TIP should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:395:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:395:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:395:15
      end
      if (_GEN_14 & _GEN_11 & _GEN_17) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13, :374:{23,35}, :375:15, :378:15, :396:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:396:15
          $error("Assertion failed: State transition from S_BRANCH_C to S_TIP_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:396:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:396:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:396:15
      end
      if (_GEN_14 & _GEN_11 & _GEN_19) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13, :374:{23,35}, :375:15, :380:15, :397:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:397:15
          $error("Assertion failed: State transition from S_BRANCH_C to S_TIP_D should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:397:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:397:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:397:15
      end
      if (_GEN_14 & _GEN_11 & _GEN_18) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13, :374:{23,35}, :375:15, :379:15, :398:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:398:15
          $error("Assertion failed: State transition from S_BRANCH_C to S_TIP_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:398:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:398:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:398:15
      end
      if (_GEN_14 & _GEN_11 & _GEN_20) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13, :374:{23,35}, :375:15, :381:15, :399:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:399:15
          $error("Assertion failed: State transition from S_BRANCH_C to S_TRUNK_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:399:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:399:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:399:15
      end
      if (_GEN_14 & _GEN_11 & _GEN_21) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:365:13, :374:{23,35}, :375:15, :382:15, :400:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:400:15
          $error("Assertion failed: State transition from S_BRANCH_C to S_TRUNK_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:400:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:400:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:400:15
      end
      if (_GEN_14 & _GEN_23 & _GEN_22) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :384:15, :402:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:402:15
          $error("Assertion failed: State transition from S_TIP to S_INVALID should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:402:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:402:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:402:15
      end
      if (_GEN_14 & _GEN_23 & _GEN_13) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :402:15, :403:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:403:15
          $error("Assertion failed: State transition from S_TIP to S_BRANCH should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:403:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:403:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:403:15
      end
      if (_GEN_14 & _GEN_23 & _GEN_15) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :376:15, :402:15, :404:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:404:15
          $error("Assertion failed: State transition from S_TIP to S_BRANCH_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:404:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:404:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:404:15
      end
      if (_GEN_14 & _GEN_23 & _GEN_17) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :378:15, :402:15, :405:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:405:15
          $error("Assertion failed: State transition from S_TIP to S_TIP_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:405:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:405:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:405:15
      end
      if (_GEN_14 & _GEN_23 & _GEN_18) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :379:15, :402:15, :407:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:407:15
          $error("Assertion failed: State transition from S_TIP to S_TIP_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:407:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:407:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:407:15
      end
      if (_GEN_14 & _GEN_23 & _GEN_21) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :382:15, :402:15, :409:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:409:15
          $error("Assertion failed: State transition from S_TIP to S_TRUNK_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:409:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:409:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:409:15
      end
      if (_GEN_14 & _GEN_24 & _GEN_22) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :384:15, :411:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:411:15
          $error("Assertion failed: State transition from S_TIP_C to S_INVALID should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:411:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:411:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:411:15
      end
      if (_GEN_14 & _GEN_24 & _GEN_13) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :411:15, :412:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:412:15
          $error("Assertion failed: State transition from S_TIP_C to S_BRANCH should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:412:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:412:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:412:15
      end
      if (_GEN_14 & _GEN_24 & _GEN_15) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :376:15, :411:15, :413:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:413:15
          $error("Assertion failed: State transition from S_TIP_C to S_BRANCH_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:413:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:413:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:413:15
      end
      if (_GEN_14 & _GEN_24 & _GEN_18) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :379:15, :411:15, :416:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:416:15
          $error("Assertion failed: State transition from S_TIP_C to S_TIP_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:416:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:416:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:416:15
      end
      if (_GEN_14 & _GEN_24 & _GEN_21) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :382:15, :411:15, :418:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:418:15
          $error("Assertion failed: State transition from S_TIP_C to S_TRUNK_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:418:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:418:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:418:15
      end
      if (_GEN_14 & _GEN_25 & _GEN_22) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :384:15, :420:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:420:15
          $error("Assertion failed: State transition from S_TIP_D to S_INVALID should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:420:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:420:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:420:15
      end
      if (_GEN_14 & _GEN_25 & _GEN_13) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :420:15, :421:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:421:15
          $error("Assertion failed: State transition from S_TIP_D to S_BRANCH should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:421:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:421:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:421:15
      end
      if (_GEN_14 & _GEN_25 & _GEN_15) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :376:15, :420:15, :422:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:422:15
          $error("Assertion failed: State transition from S_TIP_D to S_BRANCH_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:422:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:422:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:422:15
      end
      if (_GEN_14 & _GEN_25 & _GEN_16) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :377:15, :420:15, :423:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:423:15
          $error("Assertion failed: State transition from S_TIP_D to S_TIP should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:423:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:423:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:423:15
      end
      if (_GEN_14 & _GEN_25 & _GEN_17) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :378:15, :420:15, :424:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:424:15
          $error("Assertion failed: State transition from S_TIP_D to S_TIP_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:424:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:424:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:424:15
      end
      if (_GEN_14 & _GEN_25 & _GEN_18) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :379:15, :420:15, :425:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:425:15
          $error("Assertion failed: State transition from S_TIP_D to S_TIP_CD should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:425:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:425:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:425:15
      end
      if (_GEN_14 & _GEN_25 & _GEN_20) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :381:15, :420:15, :426:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:426:15
          $error("Assertion failed: State transition from S_TIP_D to S_TRUNK_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:426:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:426:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:426:15
      end
      if (_GEN_14 & _GEN_26 & _GEN_22) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :384:15, :429:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:429:15
          $error("Assertion failed: State transition from S_TIP_CD to S_INVALID should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:429:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:429:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:429:15
      end
      if (_GEN_14 & _GEN_26 & _GEN_13) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :429:15, :430:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:430:15
          $error("Assertion failed: State transition from S_TIP_CD to S_BRANCH should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:430:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:430:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:430:15
      end
      if (_GEN_14 & _GEN_26 & _GEN_15) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :376:15, :429:15, :431:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:431:15
          $error("Assertion failed: State transition from S_TIP_CD to S_BRANCH_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:431:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:431:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:431:15
      end
      if (_GEN_14 & _GEN_26 & _GEN_16) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :377:15, :429:15, :432:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:432:15
          $error("Assertion failed: State transition from S_TIP_CD to S_TIP should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:432:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:432:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:432:15
      end
      if (_GEN_14 & _GEN_26 & _GEN_17) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :378:15, :429:15, :433:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:433:15
          $error("Assertion failed: State transition from S_TIP_CD to S_TIP_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:433:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:433:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:433:15
      end
      if (_GEN_14 & _GEN_26 & _GEN_20) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :381:15, :429:15, :435:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:435:15
          $error("Assertion failed: State transition from S_TIP_CD to S_TRUNK_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:435:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:435:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:435:15
      end
      if (_GEN_14 & _GEN_27 & _GEN_22) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :384:15, :438:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:438:15
          $error("Assertion failed: State transition from S_TRUNK_C to S_INVALID should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:438:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:438:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:438:15
      end
      if (_GEN_14 & _GEN_27 & _GEN_13) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :438:15, :439:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:439:15
          $error("Assertion failed: State transition from S_TRUNK_C to S_BRANCH should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:439:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:439:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:439:15
      end
      if (_GEN_14 & _GEN_27 & _GEN_15) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :376:15, :438:15, :440:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:440:15
          $error("Assertion failed: State transition from S_TRUNK_C to S_BRANCH_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:440:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:440:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:440:15
      end
      if (_GEN_14 & _GEN_28 & _GEN_22) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :384:15, :447:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:447:15
          $error("Assertion failed: State transition from S_TRUNK_CD to S_INVALID should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:447:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:447:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:447:15
      end
      if (_GEN_14 & _GEN_28 & _GEN_13) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :447:15, :448:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:448:15
          $error("Assertion failed: State transition from S_TRUNK_CD to S_BRANCH should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:448:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:448:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:448:15
      end
      if (_GEN_14 & _GEN_28 & _GEN_15) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :376:15, :447:15, :449:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:449:15
          $error("Assertion failed: State transition from S_TRUNK_CD to S_BRANCH_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:449:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:449:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:449:15
      end
      if (_GEN_14 & _GEN_28 & _GEN_16) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :377:15, :447:15, :450:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:450:15
          $error("Assertion failed: State transition from S_TRUNK_CD to S_TIP should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:450:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:450:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:450:15
      end
      if (_GEN_14 & _GEN_28 & _GEN_17) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :378:15, :447:15, :451:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:451:15
          $error("Assertion failed: State transition from S_TRUNK_CD to S_TIP_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:451:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:451:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:451:15
      end
      if (_GEN_14 & _GEN_28 & _GEN_20) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:374:{23,35}, :375:15, :381:15, :447:15, :454:15
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:454:15
          $error("Assertion failed: State transition from S_TRUNK_CD to S_TRUNK_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:359 assert(!(before === from.code && after === to.code), cf\"State transition from ${from} to ${to} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:454:15
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:454:15
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:454:15
      end
      if (_GEN_29 & prior == 4'h1) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :522:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:522:11
          $error("Assertion failed: State bypass from S_BRANCH should be impossible (false,true,true,false,true)\n    at MSHR.scala:516 assert(!(prior === from.code), cf\"State bypass from ${from} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:522:11
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:522:11
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:522:11
      end
      if (_GEN_29 & prior == 4'h0) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:314:26, :522:11, :523:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:523:11
          $error("Assertion failed: State bypass from S_BRANCH_C should be impossible (false,true,true,false,true)\n    at MSHR.scala:516 assert(!(prior === from.code), cf\"State bypass from ${from} should be impossible ${cfg}\")\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:523:11
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:523:11
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:523:11
      end
      if (io_allocate_valid_0 & ~reset
          & ~(~request_valid | no_wait & io_schedule_ready_0 & io_schedule_valid_0)) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :105:14, :183:83, :533:{12,13,28,40}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:533:12
          $error("Assertion failed\n    at MSHR.scala:533 assert (!request_valid || (no_wait && io.schedule.fire))\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:533:12
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:533:12
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:533:12
      end
      if (_GEN_5 & new_request_prio_2 & ~reset & ~new_meta_hit) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:105:14, :505:21, :506:24, :539:28, :571:58, :585:14
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:585:14
          $error("Assertion failed\n    at MSHR.scala:585 assert (new_meta.hit)\n");	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:585:14
        if (`STOP_COND_)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:585:14
          $fatal;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:585:14
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  always @(posedge clock) begin
    automatic logic _GEN_30;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:483:42
    automatic logic _GEN_31;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:147:17, :482:25, :483:81, :484:12
    _GEN_30 = io_sinkd_bits_opcode_0 == 3'h4 | io_sinkd_bits_opcode_0 == 3'h5;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:483:{32,42,66}
    _GEN_31 = io_sinkd_valid_0 & _GEN_30;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:147:17, :482:25, :483:{42,81}, :484:12
    if (reset) begin
      request_valid <= 1'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30
      meta_valid <= 1'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:99:27
      s_rprobe <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:121:33
      w_rprobeackfirst <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:122:33
      w_rprobeacklast <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:123:33
      s_release <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:124:33
      w_releaseack <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:125:33
      s_pprobe <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:126:33
      s_acquire <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:127:33
      s_flush <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:128:33
      w_grantfirst <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:129:33
      w_grantlast <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:130:33
      w_grant <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:131:33
      w_pprobeackfirst <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:132:33
      w_pprobeacklast <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:133:33
      w_pprobeack <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33
      s_grantack <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:136:33
      s_execute <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:137:33
      w_grantack <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:138:33
      s_writeback <= 1'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:139:33
    end
    else begin
      automatic logic _GEN_32;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:139:33, :197:28, :206:{35,50}
      _GEN_32 = io_schedule_ready_0 & no_wait;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:139:33, :183:83, :197:28, :206:{35,50}
      request_valid <= io_allocate_valid_0 | ~_GEN_32 & request_valid;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :139:33, :197:28, :206:{35,50}, :208:20, :209:21, :532:28, :534:19
      meta_valid <= _GEN_5 | ~_GEN_32 & meta_valid;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :99:27, :139:33, :197:28, :206:{35,50}, :208:20, :209:21, :210:18, :539:{28,79}, :540:16
      if (_GEN_5) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:539:28
        automatic logic _GEN_33 = new_meta_state == 2'h2;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:505:21, :578:56
        automatic logic _GEN_34 = new_meta_clients == 4'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:505:21, :595:59
        automatic logic _GEN_35 = ~new_meta_hit & (|new_meta_state);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:505:21, :585:14, :606:{27,45}
        automatic logic _GEN_36 =
          new_request_prio_2 | (new_request_control ? ~new_meta_hit : ~_GEN_35);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:505:21, :506:24, :553:22, :571:58, :585:14, :588:57, :591:27, :606:{27,58}, :607:19
        automatic logic _GEN_37 =
          new_request_prio_2
          | (new_request_control ? ~new_meta_hit | _GEN_34 : ~_GEN_35 | _GEN_34);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:505:21, :506:24, :550:22, :571:58, :588:57, :591:27, :595:{59,69}, :606:{27,58}, :610:68
        automatic logic _GEN_38 = ~new_meta_hit | new_meta_state == 2'h1 & new_needT;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:505:21, :585:14, :617:{27,46,57}, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:270:70
        automatic logic _GEN_39 = new_request_prio_2 | new_request_control;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:506:24, :556:22, :571:58, :588:57, :617:72
        automatic logic _GEN_40 = _GEN_39 | ~_GEN_38;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:556:22, :571:58, :588:57, :617:{27,72}, :618:19
        automatic logic _GEN_41 =
          new_meta_hit & (new_needT | _GEN_33) & (|(new_meta_clients & ~new_skipProbe));	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:505:21, :509:26, :578:56, :626:53, :627:{24,53}, :628:{31,33,49}, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:270:70
        automatic logic _GEN_42 = _GEN_39 | ~_GEN_41;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:555:22, :556:22, :571:58, :588:57, :617:72, :626:53, :627:53, :628:59, :629:18
        automatic logic _GEN_43 = _new_skipProbe_T | (&new_request_opcode);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:506:24, :636:49, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:271:{14,52}
        s_rprobe <= _GEN_37;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:121:33, :550:22, :571:58, :588:57
        w_rprobeackfirst <= _GEN_37;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:122:33, :550:22, :571:58, :588:57
        w_rprobeacklast <= _GEN_37;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:123:33, :550:22, :571:58, :588:57
        s_release <= _GEN_36;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:124:33, :553:22, :571:58, :588:57
        w_releaseack <= _GEN_36;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:125:33, :553:22, :571:58, :588:57
        s_pprobe <= _GEN_42;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:126:33, :555:22, :571:58, :588:57, :628:59
        s_acquire <= _GEN_40;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:127:33, :556:22, :571:58, :588:57, :617:72
        s_flush <= new_request_prio_2 | ~new_request_control;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:128:33, :506:24, :557:22, :571:58, :588:57, :589:15
        w_grantfirst <= _GEN_40;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:129:33, :556:22, :571:58, :588:57, :617:72
        w_grantlast <= _GEN_40;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:130:33, :556:22, :571:58, :588:57, :617:72
        w_grant <= _GEN_40;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:131:33, :556:22, :571:58, :588:57, :617:72
        w_pprobeackfirst <= _GEN_42;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:132:33, :555:22, :571:58, :588:57, :628:59
        w_pprobeacklast <= _GEN_42;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:133:33, :555:22, :571:58, :588:57, :628:59
        w_pprobeack <= _GEN_42;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :555:22, :571:58, :588:57, :628:59
        s_grantack <= _GEN_40;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:136:33, :556:22, :571:58, :588:57, :617:72
        s_execute <= ~new_request_prio_2 & new_request_control;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:137:33, :506:24, :571:58, :572:17, :588:57
        w_grantack <= _GEN_39 | ~_GEN_43;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:138:33, :556:22, :567:22, :571:58, :588:57, :617:72, :636:{49,88}, :637:20
        s_writeback <=
          new_request_prio_2
            ? ~((new_request_param == 3'h1 | new_request_param == 3'h2
                 | new_request_param == 3'h5) & (|(new_meta_clients & new_clientBit))
                | (new_request_param == 3'h0 | new_request_param == 3'h4) & _GEN_33)
              & ~(new_request_opcode[0] & ~new_meta_dirty)
            : new_request_control
              | ~(~(new_request_opcode[2]) & new_meta_hit & ~new_meta_dirty | _GEN_43
                  | _GEN_41) & ~_GEN_38;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:139:33, :505:21, :506:24, :556:22, :568:22, :571:58, :574:{31,35,38,55}, :575:21, :578:{38,56,67}, :579:21, :582:{38,59,76,85}, :583:21, :588:57, :617:{27,72}, :618:19, :626:53, :627:53, :628:59, :633:21, :636:{49,88}, :638:21, :641:{13,36,52,72}, :642:21, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10, :269:12, :282:{11,34,43,66,75}, :285:{11,34,43}
      end
      else begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:539:28
        automatic logic _GEN_44 = io_sinkc_valid_0 & last_probe;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:122:33, :459:46, :461:49, :470:22
        automatic logic _GEN_45 = io_sinkc_valid_0 & last_probe & io_sinkc_bits_last_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:123:33, :459:46, :461:49, :471:{21,55}
        s_rprobe <= io_schedule_ready_0 | s_rprobe;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:121:33, :197:28, :198:50
        w_rprobeackfirst <= _GEN_44 | w_rprobeackfirst;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:122:33, :461:49, :470:22
        w_rprobeacklast <= _GEN_45 | w_rprobeacklast;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:123:33, :461:49, :471:{21,55}
        s_release <= io_schedule_ready_0 & w_rprobeackfirst | s_release;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:122:33, :124:33, :197:28, :199:{35,50}
        w_releaseack <=
          io_sinkd_valid_0 & ~_GEN_30 & io_sinkd_bits_opcode_0 == 3'h6 | w_releaseack;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:125:33, :482:25, :483:{42,81}, :495:{37,53}
        s_pprobe <= io_schedule_ready_0 | s_pprobe;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:126:33, :197:28, :200:50
        s_acquire <= io_schedule_ready_0 & s_release & s_pprobe | s_acquire;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:124:33, :126:33, :127:33, :197:28, :201:{21,35,50}
        s_flush <= io_schedule_ready_0 & w_releaseack | s_flush;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:125:33, :128:33, :197:28, :202:{35,50}
        w_grantfirst <= _GEN_31 | w_grantfirst;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:129:33, :147:17, :482:25, :483:81, :484:12, :485:20
        if (_GEN_31) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:147:17, :482:25, :483:81, :484:12
          w_grantlast <= io_sinkd_bits_last_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:130:33
          w_grant <= ~(|request_offset) | io_sinkd_bits_last_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :131:33, :475:77, :490:{33,41}
        end
        w_pprobeackfirst <= _GEN_44 | w_pprobeackfirst;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:122:33, :132:33, :461:49, :470:22, :472:22
        w_pprobeacklast <= _GEN_45 | w_pprobeacklast;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:123:33, :133:33, :461:49, :471:{21,55}, :473:21
        w_pprobeack <= io_sinkc_valid_0 & set_pprobeack | w_pprobeack;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :461:49, :475:36, :476:17
        s_grantack <= io_schedule_ready_0 & w_grantfirst | s_grantack;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:129:33, :136:33, :197:28, :204:{35,50}
        s_execute <= io_schedule_ready_0 & w_pprobeack & w_grant | s_execute;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:131:33, :134:33, :137:33, :197:28, :205:{23,35,50}
        w_grantack <= io_sinke_valid_0 | w_grantack;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:138:33, :499:25, :500:16
        s_writeback <= _GEN_32 | s_writeback;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:139:33, :197:28, :206:{35,50}
      end
    end
    if (io_allocate_valid_0) begin
      request_prio_0 <= io_allocate_bits_prio_0_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_prio_1 <= io_allocate_bits_prio_1_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_prio_2 <= io_allocate_bits_prio_2_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_control <= io_allocate_bits_control_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_opcode <= io_allocate_bits_opcode_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_param <= io_allocate_bits_param_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_size <= io_allocate_bits_size_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_source <= io_allocate_bits_source_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_tag <= io_allocate_bits_tag_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_offset <= io_allocate_bits_offset_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_put <= io_allocate_bits_put_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
      request_set <= io_allocate_bits_set_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
    end
    if (_GEN_5) begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:539:28
      meta_dirty <= new_meta_dirty;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :505:21
      meta_state <= new_meta_state;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :505:21
      meta_clients <= new_meta_clients;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :505:21
      meta_tag <= new_meta_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :505:21
      meta_hit <= new_meta_hit;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :505:21
      meta_way <= new_meta_way;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :505:21
      probes_done <= 4'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:150:24
      probes_toN <= 4'h0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:151:23
    end
    else begin	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:539:28
      automatic logic       _GEN_46;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:155:{20,46}, :156:41
      automatic logic [3:0] _GEN_47 = {4{io_sinkc_valid_0}};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:150:24, :461:49, :467:17
      _GEN_46 =
        meta_valid & (|meta_state) & io_nestedwb_set_0 == request_set
        & io_nestedwb_tag_0 == meta_tag;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :99:27, :100:17, :104:22, :155:{20,46}, :156:{25,41,60}
      meta_dirty <=
        io_sinkc_valid_0 & (|meta_state) & io_sinkc_bits_tag_0 == meta_tag
        & io_sinkc_bits_data_0
        | (_GEN_46
             ? io_nestedwb_c_set_dirty_0 | ~io_nestedwb_b_clr_dirty_0 & meta_dirty
             : meta_dirty);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :104:22, :155:{20,46}, :156:{41,74}, :157:{36,49}, :158:{36,49}, :461:49, :480:{34,55,68,91,104}
      if (_GEN_46 & io_nestedwb_b_toB_0)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :155:{20,46}, :156:{41,74}, :159:{30,43}
        meta_state <= 2'h1;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
      meta_hit <= ~(_GEN_46 & io_nestedwb_b_toN_0) & meta_hit;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :155:{20,46}, :156:{41,74}, :160:{30,41}
      probes_done <= _GEN_47 & probe_bit | probes_done;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:150:24, :461:49, :467:17, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10
      probes_toN <= _GEN_47 & (probe_toN ? probe_bit : 4'h0) | probes_toN;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:150:24, :151:23, :461:49, :467:17, :468:{16,35}, src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:201:10, :282:66
    end
    if (_GEN_31)	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:147:17, :482:25, :483:81, :484:12
      sink <= io_sinkd_bits_sink_0;	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:147:17
    gotT <= ~_GEN_5 & (_GEN_31 ? io_sinkd_bits_param_0 == 3'h0 : gotT);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:147:17, :148:17, :461:49, :482:25, :483:81, :484:12, :493:{12,35}, :539:{28,79}, :544:16, :545:10
    bad_grant <= ~_GEN_5 & (_GEN_31 ? io_sinkd_bits_denied_0 : bad_grant);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:147:17, :149:22, :461:49, :482:25, :483:81, :484:12, :488:17, :539:{28,79}, :544:16, :546:15
    probes_noT <=
      ~_GEN_5 & (io_sinkc_valid_0 & io_sinkc_bits_param_0 != 3'h3 | probes_noT);	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:152:23, :461:49, :469:{16,53}, :539:{28,79}, :544:16
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin
      automatic logic [31:0] _RANDOM[0:3];
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;
        end
        request_valid = _RANDOM[2'h0][0];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30
        request_prio_0 = _RANDOM[2'h0][1];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :98:20
        request_prio_1 = _RANDOM[2'h0][2];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :98:20
        request_prio_2 = _RANDOM[2'h0][3];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :98:20
        request_control = _RANDOM[2'h0][4];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :98:20
        request_opcode = _RANDOM[2'h0][7:5];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :98:20
        request_param = _RANDOM[2'h0][10:8];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :98:20
        request_size = _RANDOM[2'h0][13:11];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :98:20
        request_source = _RANDOM[2'h0][18:14];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :98:20
        request_tag = {_RANDOM[2'h0][31:19], _RANDOM[2'h1][1:0]};	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:97:30, :98:20
        request_offset = _RANDOM[2'h1][7:2];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
        request_put = _RANDOM[2'h1][13:8];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
        request_set = _RANDOM[2'h1][23:14];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20
        meta_valid = _RANDOM[2'h1][24];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :99:27
        meta_dirty = _RANDOM[2'h1][25];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :100:17
        meta_state = _RANDOM[2'h1][27:26];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :100:17
        meta_clients = _RANDOM[2'h1][31:28];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:98:20, :100:17
        meta_tag = _RANDOM[2'h2][14:0];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
        meta_hit = _RANDOM[2'h2][15];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
        meta_way = _RANDOM[2'h2][18:16];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17
        s_rprobe = _RANDOM[2'h2][19];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :121:33
        w_rprobeackfirst = _RANDOM[2'h2][20];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :122:33
        w_rprobeacklast = _RANDOM[2'h2][21];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :123:33
        s_release = _RANDOM[2'h2][22];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :124:33
        w_releaseack = _RANDOM[2'h2][23];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :125:33
        s_pprobe = _RANDOM[2'h2][24];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :126:33
        s_acquire = _RANDOM[2'h2][25];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :127:33
        s_flush = _RANDOM[2'h2][26];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :128:33
        w_grantfirst = _RANDOM[2'h2][27];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :129:33
        w_grantlast = _RANDOM[2'h2][28];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :130:33
        w_grant = _RANDOM[2'h2][29];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :131:33
        w_pprobeackfirst = _RANDOM[2'h2][30];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :132:33
        w_pprobeacklast = _RANDOM[2'h2][31];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:100:17, :133:33
        w_pprobeack = _RANDOM[2'h3][0];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33
        s_grantack = _RANDOM[2'h3][2];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :136:33
        s_execute = _RANDOM[2'h3][3];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :137:33
        w_grantack = _RANDOM[2'h3][4];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :138:33
        s_writeback = _RANDOM[2'h3][5];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :139:33
        sink = _RANDOM[2'h3][8:6];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :147:17
        gotT = _RANDOM[2'h3][9];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :148:17
        bad_grant = _RANDOM[2'h3][10];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :149:22
        probes_done = _RANDOM[2'h3][14:11];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :150:24
        probes_toN = _RANDOM[2'h3][18:15];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :151:23
        probes_noT = _RANDOM[2'h3][19];	// src/main/scala/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/MSHR.scala:134:33, :152:23
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_status_valid = io_status_valid_0;
  assign io_status_bits_set = io_status_bits_set_0;
  assign io_status_bits_tag = io_status_bits_tag_0;
  assign io_status_bits_way = io_status_bits_way_0;
  assign io_status_bits_blockC = io_status_bits_blockC_0;
  assign io_status_bits_nestC = io_status_bits_nestC_0;
  assign io_schedule_valid = io_schedule_valid_0;
  assign io_schedule_bits_a_valid = io_schedule_bits_a_valid_0;
  assign io_schedule_bits_a_bits_tag = io_schedule_bits_a_bits_tag_0;
  assign io_schedule_bits_a_bits_set = io_schedule_bits_a_bits_set_0;
  assign io_schedule_bits_a_bits_param = io_schedule_bits_a_bits_param_0;
  assign io_schedule_bits_a_bits_block = io_schedule_bits_a_bits_block_0;
  assign io_schedule_bits_b_valid = io_schedule_bits_b_valid_0;
  assign io_schedule_bits_b_bits_param = io_schedule_bits_b_bits_param_0;
  assign io_schedule_bits_b_bits_tag = io_schedule_bits_b_bits_tag_0;
  assign io_schedule_bits_b_bits_set = io_schedule_bits_b_bits_set_0;
  assign io_schedule_bits_b_bits_clients = io_schedule_bits_b_bits_clients_0;
  assign io_schedule_bits_c_valid = io_schedule_bits_c_valid_0;
  assign io_schedule_bits_c_bits_opcode = io_schedule_bits_c_bits_opcode_0;
  assign io_schedule_bits_c_bits_param = io_schedule_bits_c_bits_param_0;
  assign io_schedule_bits_c_bits_tag = io_schedule_bits_c_bits_tag_0;
  assign io_schedule_bits_c_bits_set = io_schedule_bits_c_bits_set_0;
  assign io_schedule_bits_c_bits_way = io_schedule_bits_c_bits_way_0;
  assign io_schedule_bits_c_bits_dirty = io_schedule_bits_c_bits_dirty_0;
  assign io_schedule_bits_d_valid = io_schedule_bits_d_valid_0;
  assign io_schedule_bits_d_bits_prio_0 = io_schedule_bits_d_bits_prio_0_0;
  assign io_schedule_bits_d_bits_prio_1 = io_schedule_bits_d_bits_prio_1_0;
  assign io_schedule_bits_d_bits_prio_2 = io_schedule_bits_d_bits_prio_2_0;
  assign io_schedule_bits_d_bits_control = io_schedule_bits_d_bits_control_0;
  assign io_schedule_bits_d_bits_opcode = io_schedule_bits_d_bits_opcode_0;
  assign io_schedule_bits_d_bits_param = io_schedule_bits_d_bits_param_0;
  assign io_schedule_bits_d_bits_size = io_schedule_bits_d_bits_size_0;
  assign io_schedule_bits_d_bits_source = io_schedule_bits_d_bits_source_0;
  assign io_schedule_bits_d_bits_tag = io_schedule_bits_d_bits_tag_0;
  assign io_schedule_bits_d_bits_offset = io_schedule_bits_d_bits_offset_0;
  assign io_schedule_bits_d_bits_put = io_schedule_bits_d_bits_put_0;
  assign io_schedule_bits_d_bits_set = io_schedule_bits_d_bits_set_0;
  assign io_schedule_bits_d_bits_way = io_schedule_bits_d_bits_way_0;
  assign io_schedule_bits_d_bits_bad = io_schedule_bits_d_bits_bad_0;
  assign io_schedule_bits_e_valid = io_schedule_bits_e_valid_0;
  assign io_schedule_bits_e_bits_sink = io_schedule_bits_e_bits_sink_0;
  assign io_schedule_bits_x_valid = io_schedule_bits_x_valid_0;
  assign io_schedule_bits_dir_valid = io_schedule_bits_dir_valid_0;
  assign io_schedule_bits_dir_bits_set = io_schedule_bits_dir_bits_set_0;
  assign io_schedule_bits_dir_bits_way = io_schedule_bits_dir_bits_way_0;
  assign io_schedule_bits_dir_bits_data_dirty = io_schedule_bits_dir_bits_data_dirty_0;
  assign io_schedule_bits_dir_bits_data_state = io_schedule_bits_dir_bits_data_state_0;
  assign io_schedule_bits_dir_bits_data_clients =
    io_schedule_bits_dir_bits_data_clients_0;
  assign io_schedule_bits_dir_bits_data_tag = io_schedule_bits_dir_bits_data_tag_0;
  assign io_schedule_bits_reload = io_schedule_bits_reload_0;
endmodule

